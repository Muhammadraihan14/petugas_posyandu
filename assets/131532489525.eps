%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: Glyph_8-Template_898078372980.eps
%%Creator: Adobe Illustrator(R) 16.0
%%For: Zee Abbasi
%%CreationDate: 12/9/2022
%%BoundingBox: 0 0 710 827
%%HiResBoundingBox: 0 0 709.3340 826.2188
%%CropBox: 0 0 709.3340 826.2188
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 16.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 16.0.0 x682 R agm 4.6676 ct 5.2591%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.3-c011 66.145661, 2012/02/06-14:56:27        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:description>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Creative User 25 Glyph Solid Black icon pack  Such As avatar. man. love. human. basic</rdf:li>
            </rdf:Alt>
         </dc:description>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Creative User 25 Glyph Solid Black icon pack  Such As avatar. man. love. human. basic</rdf:li>
            </rdf:Alt>
         </dc:title>
         <dc:subject>
            <rdf:Bag>
               <rdf:li>avatar</rdf:li>
               <rdf:li> support</rdf:li>
               <rdf:li> woman</rdf:li>
               <rdf:li> avatar</rdf:li>
               <rdf:li> male</rdf:li>
               <rdf:li> people</rdf:li>
               <rdf:li> profile</rdf:li>
               <rdf:li> user</rdf:li>
               <rdf:li> love</rdf:li>
               <rdf:li> heart</rdf:li>
               <rdf:li> avatar</rdf:li>
               <rdf:li> user</rdf:li>
               <rdf:li> basic</rdf:li>
               <rdf:li> account</rdf:li>
               <rdf:li> human</rdf:li>
               <rdf:li> man</rdf:li>
               <rdf:li> person</rdf:li>
               <rdf:li> avatar</rdf:li>
               <rdf:li> support</rdf:li>
               <rdf:li> man</rdf:li>
               <rdf:li> headphone</rdf:li>
               <rdf:li> administrator</rdf:li>
               <rdf:li> man</rdf:li>
               <rdf:li> user</rdf:li>
               <rdf:li> avatar</rdf:li>
               <rdf:li> girl</rdf:li>
               <rdf:li> </rdf:li>
               <rdf:li> person</rdf:li>
               <rdf:li> user</rdf:li>
               <rdf:li> avatar</rdf:li>
               <rdf:li> user</rdf:li>
               <rdf:li> profile</rdf:li>
               <rdf:li> basic</rdf:li>
               <rdf:li> chatting</rdf:li>
               <rdf:li> user</rdf:li>
            </rdf:Bag>
         </dc:subject>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS6 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2022-12-09T19:08:02+05:00</xmp:CreateDate>
         <xmp:ModifyDate>2022-12-09T19:08:02+05:00</xmp:ModifyDate>
         <xmp:MetadataDate>2022-12-09T19:08:02+05:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>220</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEBkAGQAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABABkAAAAAEA&#xA;AQGQAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAADcAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9O5Ni7FXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FUHqrX62qGwFZ/rFsHGx/cm4jE5+Lwh5/wAN8VYfql3+ZY0a7ezhk/Sn6QlRUSO0ZUs1Ev1drcPI&#xA;ocOwh9QyNyAZqAUw7I3R91c/mGk+pCC3gkU2Ekmmj4QovkihpG1WBZGkaThUjoeRA44rug7S8/Mg&#xA;foJp7R5YJLiddTqbWG4EJuFW3ecAyxrS3LO6w7lgBVa47Luvju/zJjspi9sk1yNVZ0B9MV0tF9T0&#xA;1IoDI5XgtRtXc7Vx2XdHMfPS/pSVDC4a6C6XbuAOMClgzOyr0YceI3PvvQK7o3Rx5lOoltRkH1L6&#xA;nA4j4IG+tSDjMnJT0i9HkPH1D/KMCU7xV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Ku&#xA;xV2KuxVSubW2uoGguY1mhenONxVTQ1FQfcZKMzE2NiwyYozjwyFgsfnufKei6hcAWKw3NhHaSvLF&#xA;GoouoTyWsXE1H7UTcvbLJZ8khRJIaMeiwY5cUYREh5JUt3+TzRJKDpnpyczG/FaEIKkjbpToe/au&#xA;S/M5f5xcriV9Z1L8uX/R2qXlvb3o1y5S1tbxYhJzavpB2Y0/dqQF59Nx2yoSkNgXIhrMsABGRARC&#xA;63+XMcFrbLPZrb8Ee2jC/AqXLMUPSi82B698x82nhlNziJe9RrMgJPEbKyy84fly9is8V1bwWt2j&#xA;TD1EaIOkHMsTzVfsiN2+QJysaHCAY8EaPPZjLV5JEEyOyf6Ymj3EEN/p6RtFMvKGdFpVT3FQDvgx&#xA;6LDjlxRjEH3LLPOQokkI/MppdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdi&#xA;qQa35L0zWNSjv57i6hkUW4migl4RTLaTNPAJVoeQSR2I6dcbUhIT+Svk0iriaST95WR1tmoJCCfT&#xA;Uw8IaEcgYlU1qe+G0cITjWPy98t6zDbw6jG88dnZtZWYLAeiG41mjoPhl/drRvbBakJdN+UPlSU1&#xA;Z7re7kvWHqIwMkjRtQBkYKqGIcONONWA2YjDa8Kjffkx5TvSommvPSjikggh9SMrFHIsqFYy0bOo&#xA;Cztty32LVIrja8LPAABQdMCXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FV0YBcA9MBSiPTT+UZG0u9NP5Rjau9&#xA;NP5RjatSIgQkAVwhCjEAXAO4wlVf00/lGRtLvTT+UY2rvTT+UY2q2VFEZIABwhCnCoL7iu2Eqrem&#xA;n8oyNpd6afyjG1d6afyjG1WTIoSoABwhCyFQWNRXbCVCt6afyjI2l3pp/KMbV3pp/KMbVZMqhBQU&#xA;3whBWwKpJqK0wlQq+mn8oyNpd6afyjG1d6afyjG1U51UAUFMIQVHJIdirsVXxf3gwFKJyKXzB/zl&#xA;F+dfn/yf550zRPK+qLYWyWEd7chIoZWeaSaVOMnqq/whIlPEeO/bFX0P5N1ptd8o6JrTsrSanYW1&#xA;3IYwQvOaFXagO43bocVTaT+7b5YQqjD/AHgwlARGRS8B/ObzFquqebfL8nk/8zdE0Ww06UprFk+r&#xA;wWzLKso5NNGHPrLxHH02GxHTfZV7jo+uaJrdmL7RtQttTsixQXVnNHcRcl+0vOMstR3FcVRU392f&#xA;8++EKpQfb+jCUBEZFL5s/Orz9+f2j/m3Z6X5StZ20NhbnToIrQTwXZYKZ/XlKMVo5KNR14qOW1a4&#xA;q+k8VWT/AN3hClTt/tH5YSgKzsVRmClyoJCLSpp2FaDIpYENQhk8mv5vOqXMeojlc+i1xIIo7kOV&#xA;GmPbD92Sr/6My+l6hbf+8pirOreVpreKVo2haRFdoXpzQsK8WoSKjoaHFXXH2B88IQVtv1bEqFbA&#xA;l8eWf/OSn5vyfnGukNxOmPq/6PPlz6tDyWP1/RKeqF9b1VX9rnTl2ptir7DxVSuPsj54QgqGSQ7F&#xA;XYqvi/vBgKUv84+a9J8peWNR8x6szLYabF6soQVdiSFSNASByd2CrU0qcil8GfnF+cjfmLrtvqUe&#xA;hWOkC1aqyLHHNdT0oE+tTsi+oqKtFSnEb9cVfR//ADjt/wA5B6V5umh8m3OjW+hajbwM9hHp6iOy&#xA;lWOrSLHCAPRYD4uNSDvuOhVe9yf3bfLCFUYf7wYSgIjIpfnd+ef5Yyfl352/RLX41Fb+3/SUUwjM&#xA;RVJp5owjLyepHo9Qe+Kvs/8AIv8ALiX8v/IkejS366g9xO98ZljMQX10QBOJZ604dcVZ/N/dn/Pv&#xA;hCqUH2/owlAYr+cPna/8kflvrPmjT4Irm909YBBDPy9ItPcRwVbiVYhfV5UBFcil8XXn/OSn54SX&#xA;MkjeZJYDIfUEKQWyoquOShQYjtQ7Yq+m/wDnGT83PM/5h6Dqi+Ylhe90aSCIXsK+m06zK55SIPgD&#xA;D0/2AB7Yq9ln/u8IUqdv9o/LCUBQ1LVorGaxtzG01xqFwLe3iSgOytJI7EkUWOONmP0AbkZFLEPP&#xA;flPWYvLGsal5Yb1/Nkd2da0wSLGUN1HD9XWMRFRG3+jVReW/KjVqBRVh/wDzjr+ZH5p+dLnXP8YW&#xA;cEFlp3pW8TiE20wulJSVGjJJP2CWJAo2w8FVe03H2B88IQVtv1bEqHnX/ORXnLVvKX5U6rqWkSNB&#xA;qM7RWdvdIaNF9Yfi8ikbhgnLiR0NDgS+S/8AoZH8wfqrMLfShrrReg3mgWMY1YoV4f70A8a078K4&#xA;q+u/+cf/ADdq3mz8p9E1fV5DNqXGW2uLg/alNvK0SyN/lMqjl4nfFWf3H2R88IQVDJIdirsVXxf3&#xA;gwFKnrWiaRremzaXrFnFf6dccfXtLhBJG/Bw68lOxo6gj3yKWL/8qU/KP/qUNK/6RYv6YqjtF/K/&#xA;8u9D1KHVNH8uafYajBy9G7t4EjkTmpRuLKKiqsQcVZLJ/dt8sIVRh/vBhKAiMiliXm78p/y884aj&#xA;DqXmTRYtRvoIhbxTu8qMIlZnCfu3QEBnY7+OKssREjRY0AVEAVVHQAbADFVs392f8++EKpQfb+jC&#xA;UBS1rRNI1vTZtL1iziv9OuOPr2lwgkjfg4deSnY0dQR75FLGX/Jf8pnNX8o6UxACgm1j6KKAdOwG&#xA;Kp15c8m+VPLKTp5e0m10pLoq1wtpEsQcpUKW4gVpyOKptP8A3eEKVO3+0flhKAoajoun6jLBLciQ&#xA;S23P0JYZpoHX1AAw5QvGSDxHXIpUP8M6d/v6+/7iF9/1WxVX07RNP0+ee4txKZ7lUSaWaeadmWLk&#xA;UFZnkIA9RunjiqKuPsD54Qgrbfq2JUKGsaHoutWRsdZ0+21KyZg5tbyGOeIsv2W4SBlqO22BKRf8&#xA;qn/Kz/qTdD/7htn/ANU8VT7SdG0jR7FLDSLG306xjLGO0tIkgiUseTERxhVFSanbFVe4+yPnhCCo&#xA;ZJDsVdirYJBqOuKW/Uf+Y4KV3qP/ADHGld6j/wAxxpXF3IoSaYq0CQajY4Vb9R/5jgpXeo/8xxpX&#xA;eo/8xxpWi7EUJJGKuBINQaYVb9R/5jgpXeo/8xxpXeo/8xxpWizHqScVcGI6GmKt+o/8xxpXeo/8&#xA;xxpXeo/8xxpWizHqa4q4Mw6GmKt+o/8AMcaV3qP/ADHGld6j/wAxxpWizHqa4q1hQ7FXYquiALgH&#xA;cYClE8E/lH3ZFLuCfyj7sVdwT+Ufdiq2RFCGgH3YQqjEAXAIqMJQiOCfyj7sil3BP5R92Ku4J/KP&#xA;uxVZKqiMkAA4QhThAL7iu2Eqr8E/lH3ZFKxmt1dY2KCR68ENAW49aDvTFV/BP5R92KrJlUJUADCE&#xA;KcABY1FdsJUK/BP5R92RS7gn8o+7FXcE/lH3YqpzqoQUAG+EIK2AAk1FfnhKhW4J/KPuyKXcE/lH&#xA;3Yq7gn8o+7FVKdVAFAB8sIQVHJIdirsVXxf3gwFKJyKXxf8A85bXf5hxfmXbic3NvoZijXy4baR/&#xA;Tkai+sRwp++9U0I+1Tj2ocVfU/5Wf4qH5eaAvmtGj8wLaIt8sjc5arUIZT/vxowpeu/KuKsnk/u2&#xA;+WEKow/3gwlARGRS+Mv+cofMvnbSfzlURTzLbx21tL5fWKS4TirpwkZFjkRfUM4fcCvTwxV9feXv&#xA;0r+gNN/TBVtW+qwfpFkHFTcemvrFV7DnWgxVGTf3Z/z74QqlB9v6MJQEF5s8ww+XPLWp69NbzXUW&#xA;mW8ly9vbrylcRrWij+PbrkUvzm81+Yr7UPMU2q6jLJf6jdGO7kv5mljnBnRZlEYDlY1j50TYjbw2&#xA;xV9z/kJ5zvfM/kNFvzcTaholxLpN3f3CcfrTWpos6mrciyFedTXlX54q9En/ALvCFKnb/aPywlAV&#xA;8il8T+dvKH5/T/nrd3dla6mb6TUnfR9UiExso7Qy1hpMP3SQrHxDozezb4q+2MVU7j7A+eEIK236&#xA;tiVCtgS+Hrn/AJyF/NWP84pJ11GZrKPVWs10Af7zG3E5i9H0qCr8duf2uW+KvuHFVK4+yPnhCCoZ&#xA;JDsVdiq+L+8GApQfmrzHYeWvLepa/f8AI2emW8lzKqfaYRrUIv8AlMfhHvkUvz//ADM/Ozzt5/1i&#xA;2v8AUbgWdvp0rTaTZWn7tbZiQQ4cfG8g4j42P+rx6Yq+lv8AnGb8/da89T3flnzPwl1uzg+tWuoR&#xA;osf1iFWVJBIiAIJFZ1NVABB6Cm6r32T+7b5YQqjD/eDCUBjf5recL7yd+Xus+ZbGGK4vNOiR4YZ+&#xA;XplnlSP4uJVqDnXY5FL48f8A5ye88X41CfWltbu/lj46ROLSCunPzBMlqzAsjsnJSxLGvFv2aMq9&#xA;v/5xi/O3zr5/vdV0nzKbac6bbxzxXsUXpTOXfgRIFPpn/YoMVe+zf3Z/z74QqlB9v6MJQGM/mr+Y&#xA;Nj5B8kX/AJjuovrEkIWKztK09a4lPGNCey/tN/kg5FL89vNfnLV/M/mifzJqSWw1Cd0do4YI0gAi&#xA;AVF9IhlZQqgfHyqOtcVfan/ON/50yfmHod3YanBFba/o/A3H1dRHFPDKTxmVP2W5KRIBtWhHWgVe&#xA;wT/3eEKVO3+0flhKA8x/5yX88a/5O/LCbUNBn+q6hd3UNkt2tOcSSq7O0dejUj4g9q1G+RS+WLD/&#xA;AJyF86W/5X6p5Uk1O+l1i8v4ri31t7iRrmO2ILzxict6gPqxpTfoz+2Kvov/AJxN/MDzN5t8lajD&#xA;5gu31C50m7WGC9mPKZ4pIw4WRzu5Vq/ETXf2xV7bcfYHzwhBW2/VsSoY95rFnJq+kw6yVXy4Y7l7&#xA;szHjbNdqYRbR3BPwFGR5iFf4S4X9rjgSkB8l/kUfNw83mHSP8QB/V+t/Wl4+r/v30PU9D1O/Phyr&#xA;vWuKp95RTS49U1eLQpA2hAW7RRw72kd23qfWFtiPgC8PSZlj+EMT+0WxVkdx9kfPCEFQySHYq7FV&#xA;8X94MBSvvbGyvrWS0vreO6tZhSW3nRZI3Fa0ZGBU7jvkUpL/AMq88gf9SzpX/SDbf80YqitN8o+V&#xA;NLuRd6ZothY3QBUT21tDDIFbqOSKpocVTST+7b5YQqjD/eDCUBu+sLG/tZLS+t4ru0lAEtvOiyRs&#xA;AagMjAqdx3yKUm/5V55A/wCpZ0r/AKQbb/mjFUdpXlry5pEkkmk6VZ6fJKAsr2tvFAzKDUBjGq1G&#xA;Ko+b+7P+ffCFUoPt/RhKAoa55f0PXtPbTtbsINSsHZWa2uo1ljLKaq3Fgdx45FLGf+VKflH/ANSh&#xA;pX/SLF/TFU58ueRvJ3ll5n8v6LZ6VJcgCd7SFImcLuoZlAJAr0xVOZ/7vCFKnb/aPywlAUNZ0HQt&#xA;ctBZa1p1rqlmHEgtr2GO4i5qCA3CVWXkKnemRSkf/Kp/ys/6k3Q/+4bZ/wDVPFU40Pyx5b0CKWHQ&#xA;tJs9JimYPNHY28VsrsBQMwiVATTxxVHXH2B88IQVtv1bEqFbAl2KuxVSuPsj54QgqGSQ7FXYq7FW&#xA;+TeJxS7k3icVdybxOKu5N4nFWsVb5N4nFXcm8TiruTeJxVxYnqcVaqR0xVvk3icVdybxOKu5N4nF&#xA;XEk9TirQJHTFW+TeJxV3JvE4q7k3icVcST1NcVcCR0xV3JvE4q7k3icVdybxOKuJJ6muKtYodirs&#xA;VXxf3gwFKJyKUPd6jp9kYxeXUNsZm4xCaRY+beC8iKn5YqiMVWy/3bYQqjD/AHgwlARGRShLvWNJ&#xA;s5kgu723t5pP7uKWVEZqmnwqxBOKovFVk392cIVSg+39GEoCIyKXYq7FVOf7GEKVlv8AaPywlAV8&#xA;ilL/APEfl79L/oX9KWn6Ypy/RvrxfWeNOVfR5epTjv0xVMMVU7j7A+eEIK236tiVCtgS7FXYqpXH&#xA;QYQgqGSQ7FXYqvi/vBgKUTkUviL/AJy7l1vUfzaa3+pXf1PT7G3gtXKOYpOYMzyQ0FKcpODH+ZT4&#xA;Yq+qfyXvtRvfyq8rzalBcW96thFDMl4CJiYB6QkbkAaSBOa134kYqzKT+7b5YQqjD/eDCUBgf5+/&#xA;mBfeRfy01DWNNIXVZ2Sy0+QgMI5Z6/vKHaqIrMtduQFdsil8AanfXl3em91aaW/vrsCa5nmlZ5Tz&#xA;oVJduR5Fd6tXY9MVfSf/ADiJ+ZWujzHefl/qV299pggkn0l3Yv6LwMAyRsdxFIjFgOgI2+0cVfVs&#xA;392f8++EKpQfb+jCUBEZFL5w/Jv84/zg83/mZq/lvXrFbOxSG59VUt+DaZKm0Xxn7fxfDR68uo2r&#xA;irK/yS8g/nVoGu6jqPnrzQ+p6bcxulvpks8l0/q+oCs3x1SEBAfgjYj4t+mKvYZ/7vCFKnb/AGj8&#xA;sJQFZ+fBuBAeh4k7ivatMil8DJ+XH5qH8+xo7Ko83fXxqragHY24T1fW+uc68/S9vtfs/a2xV99C&#xA;tN+vfFVO4+wPnhCCtt+rYlQrYEvlmz/KH88Iv+ci/wDE8ksh0j9J/WpNZFyhjfTDLzNr6fL1BWL9&#xA;16fCg7bfFir6mxVSuPsj54QgqGSQ7FXYqvi/vBgKUq89+bbbyh5R1PzHcQSXSafFzW2iFXkkdhHE&#xA;g2NOUjqCabDfIpfCH5l/mn+ZX5g6pbXmqxS21vp8jS6ZZWsUkccDMQeQb7TOOI+Jj8qYq+iP+cdv&#xA;z982ea9Y/wAKecLIm+MLS2GrJE0XqGIVeOdacOXGrBloNqUrir6Dk/u2+WEKow/3gwlAYh+c35d/&#xA;8rA/L/UPL0Uiw37FLjTppK8FuITVA1KkK4qhPYGuRS+E9Y/L/wA76HqCaVqWgX7XVq7Ka2sjpuSB&#xA;6LAFZU5fEP2Sfmaqvo7/AJxY/JLzB5e1S686+ZYZLS4nga30uyuFZLgLKQ0k08bfFG1F4hTv9r2J&#xA;VfSU392f8++EKpQfb+jCUBgv54p+Z9x5Kaw/Lq2aXWr2ZYbm4jnht5ILUoxkeN5niAcsFUFTUVJG&#xA;++RS+XvLf5G/85OaDry63pen3FlqaMZWuhqNixkZQWCSj6yfUVz8JD1G++KvtjR59QuNJsp9Stvq&#xA;eozW8Ul7ZhlcQzMgMkfJCytwaq1BI98VRE/93hClTt/tH5YSgPMf+cjPzV1H8vPI6XWkBf03qk/1&#xA;SxldQywjgXkm4n4WKgAKDtU13ApkUviK08++ao/OMPm6fVLqXXEmWWW/9VvWZQArJyr9kx/Bx6cd&#xA;umKvrL/nEjWfNeu6Z5k1bXPMk2uRyXUMcNvO8shgkCF5GHqgcA4kUcU+H4cVe+XH2B88IQVtv1bE&#xA;qEt8yjU5obKwsGkg/SF0sF3eQgl4LdY5JpGDD7BcRekr/ss4I3pgSonyH5N9ERjR7UMDyFysYW5E&#xA;lKeqLgfvhL/xZz5V3rXFUR5bOqR21zY6iZJpNPuGt4L2QUNxBwSWKQmihmCSCN2GxdW+WKpjcfZH&#xA;zwhBUMkh2KuxVfF/eDAUonIpdirsVWyf3bfLCFUIf7wYSgInIpdirsVWTf3Z/wA++EKpQfb+jCUB&#xA;EZFLsVdiqyf+7whSp2/2j8sJQFfIpdirsVU7j7A+eEIK236tiVCtgS7FXYqpXH2R88IQVDJIdirs&#xA;VcK9sUruL+BwK7i/gcVdxfwOKtENTcGmKuAJ6YVb4v4HAruL+BxV3F/A4q0Qw6g4q4AnphVvi/gc&#xA;Cu4v4HFXcX8DirRDDqDirgCemFW+L+BwK7i/gcVdxfwOKtEMOtfpxVwBPTCrfF/A4FdxfwOKu4v4&#xA;HFWiCOv44VaxQ7FXYqvi/vBgKUTkUoDUvMGg6XJFHqepWtjJNtClzPHCzkmnwh2Wv0YqjkdHRXRg&#xA;yMAVYGoIO4IIxVqX+7bCFUYf7wYSgIjIpSrV/NXl3R9Q03TtTv4rS+1iQwaXbyGjzyKVBVB3oZF+&#xA;/FU1xVZN/dnCFUoPt/RhKAiMilguufnj+Veh+Zv8Nap5ght9XDCOWIpK0cTtSiyzKjRId9+Tbd6Y&#xA;qzoEEVG4PQ4qpz/YwhSst/tH5YSgK+RSoNf2K3iWTXMS3ki80ti6iVlFfiCV5EbeGKq+Kqdx9gfP&#xA;CEFbb9WxKhWwJQA8w6A2rnRhqVqdYC8zponj+shacuXo8vUpTetMVR+KqVx0GEIKhkkOxV2Kr4v7&#xA;wYClJvzF8zTeV/Imu+YIEElxptnLPbo26mULSPl/k8yK+2RS/O2+1XWdWupNW1aZ7rU9TnJuLy9i&#xA;M3qh6cfTJR6UIYUSnYL7KvoH/nDvzzr8fmfUvI948z6QbR77T4JyS1s8ciAqob7KyLLUjxG3U4q+&#xA;sZP7tvlhCqMP94MJQGKfm7520Dyf5IvNQ10Xv1G7BsOWmkLcq9xG4Vo3LJ6ZHHZ67GmRS+CpfMGu&#xA;olkt1qN3LJocEU+jvJcTs1n63GdDalXQQsKp8XFviptQbKvov/nFT8xLJ9Z1XQNYu9Tv/NnmGf8A&#xA;SJuLh/Wtvq6WyyIxJIMchDFW+GhAQV2AxV9NTf3Z/wA++EKpQfb+jCUBEZFL4P8AzX/J3Xo/z0by&#xA;3HqFtPcea7t72xu7maOMhbqR3b1wKcWDhgoC/H+yKmmKvuPRbH9G6TY6Y1w11JY20MD3ElBJJ6aB&#xA;PUdV2BfiTtiqKn/u8IUqdv8AaPywlAV8il8HeedF1G4/5yCvLuHzPpoS51gXNtrf6RgVLaIy8o0d&#xA;vU5o1ugEfGn7O22KvvBHSRFkjYOjgMjqagg7ggjFVlx9gfPCEFbb9WxKhVd0RGd2CooJZiaAAbkk&#xA;nAl+dOnPqifndDI2rQLqCa+Hk1k3MYt6i6q03rluBQip67jb2xV+i4IYAg1B3BHQjFVK4+yPnhCC&#xA;oZJDsVdiq+L+8GApWa1pFhrWj3ukahH6tjqEElrdR1pyjmUowB7Gh65FL4581f8AOKf5q2XmHUv8&#xA;PwWmqaTdySPaS+vHC0aMxKco5TGFkRTxBWoHbFXtP/OO/wCQ1z+Xdtcatrs0Vx5kvEa3CwEtFb2z&#xA;MrmMOQpZmdAzbUHbuSq9nk/u2+WEKow/3gwlAUtbtr+60a+ttOmjt7+e3ljtJ5o/WiSV0IRnjNOa&#xA;hjUr3yKXx/rP/OLvnrSb/wAqaalx+ljqrNFqWoW0FwYNIKsgMgdJYualH+Euqk8KdKUVfQX5Hflh&#xA;5g/LvTNa0rU9SttStLu/a70+WCExSlXRVd5z/M3EUQV40+0QaBV6RN/dn/PvhCqUH2/owlAYF+ff&#xA;mvzZ5b/L24uPKdncXeuXsyWVs9rC9w8AkV3efgit9lYyASKBiMil8MXfk38zby9kvrzQ9aub2VvU&#xA;luprW7eVn/mZ2QsT71xV9Af84t+W/M8v5l6z5j16HVbGdrNyYr23lhjmM0q/CZZD8YiA+FePvtSm&#xA;Kvqmf+7whSp2/wBo/LCUBgn576P591v8vbrRfJUYfUtSlS3uz6qQFbMhmmo8hUfFxVCBvRjkUvk3&#xA;/oU/87f+rPB/0mW3/VTFX01/zjf5W/Mjyn5QuvL/AJzhWKK0nDaORPHORDIKyRVjZuKo4qK/zHFX&#xA;q1x9gfPCEFbb9WxKh5T/AM5KeXfzO8y+TrXQvI1qblLyc/poJcQ2zm3VfhjrM8QZHY/EAewHQnAl&#xA;8uf9Cufnt/1LP/T9p/8A2UYq+q/+cc9C/Mry/wCRX0Pz1bG3msbgppIeeG4f6oUUhC0LyrxR+QUE&#xA;1A2pQDFXp9x9kfPCEFQySHYq7FV8RpIMBSicil2KuxVbJ/dt8sIVQhNJBhKAicil2KuxVZN/dn/P&#xA;vhCqUB+P6MJQERkUuxV2KrJ/7vCFKnAfjPuMJQFfIpdirsVU7j7A+eEIK23O5GJUK2BLsVdiqlcf&#xA;ZHzwhBUMkh2KuxVsAk0HXFK705fDBau9OXwxtXenL4Y2rRSQCpG2KtKCTQdcVXenL4Y2rvTl8MbV&#xA;3py+GNq0yOBUjbFWlViaDriq705fDG1d6cvhjau9OXwxtWmR1HxDFWlVmPw9cVXenL4Y2rvTl8Mb&#xA;V3py+GNq0yuv2hirlVm+yMVb9OXwxtXenL4Y2rvTl8MbVplZftYqtwodirsVXxf3gwFKJyKUu8xe&#xA;YtF8t6Jd63rd0tnpdkoe5uXDEKCwVdlDMSzMAABUnFUF5L88+V/OuiDWvLd6L3TzI0LvweNklQAs&#xA;jpIFZSAwPToQemKp5L/dthCqMP8AeDCUBEZFLzsfn9+V588f4L/Sp/TH1j6ly9J/q/1rlw9D1qce&#xA;XP4fCu1cVeiYqsm/uzhCqUH2/owlARGRSxPVPzX/AC50rzJH5a1HX7S21uRlQWbsQVaQVRXenBGa&#xA;ooGYdvHFWWYqpz/YwhSst/tH5YSgNajqNhptjPf6hcR2llbIZLi5mYJGiLuWZmoAMil5FP8A85bf&#xA;kzFqRsxfXcsIbib+O1kMHWld6SkfKPFXrGia3pGuaXb6tpF3Hfaddrzt7mFuSMOn0EEUIO4OxxVE&#xA;3H2B88IQVtv1bEqFbAl5X5d/5yY/KrXfMFvoNveXNtf3UhhiF3bvCnq9AjMfssTsK99sVeqYqpXH&#xA;QYQgqGSQ7FXYqvi/vBgKUTkUvmyT8yfMv5pfmN5h/J3WtEhtPLcklzBPdRxzG8gisn5xzuzSLH8c&#xA;kacDwoCy7MMVenfl75FsPysjtvLels11oOr3crpdTkfW47ww8wJmXjG8bxW5VSqJxYKKNyqFXocn&#xA;923ywhVGH+8GEoClrWtaXomk3WrarcLaadZRtNdXD14oi9TQAk+wAqegyKXxnHdf847yfmoPN8ev&#xA;6tJA+o/pKPRhY0BuTL6wX6wXB9P1f2Slabcu+KvoD8mP+cgtN/M3VNS0yPSJNKubKIXMPKdbhZYO&#xA;YQliqx+m4LL8O/zxV6tN/dn/AD74QqlB9v6MJQFWeeC3gknnkWKCJS8srkKiIoqzMx2AA3JORS/P&#xA;38zNP8i6x+bmqXdn5xt30LVb97m41F4LyRoPWcvKqqkLCVYySIyrUIpuMVfb3lj8xPImv38mi6Fr&#xA;lvqOoWcCyzW6OWkEew5GoFSCQH7qdjQ4qySf+7whSp2/2j8sJQHzx/zmxrWp2vk/QdKt5GSx1K8l&#xA;e9C1Af6simJGp1XlJyoe6g9sil8mx6dJJaCWO29SAQSSvc1YEFetaFl+FhQCm432/ZVfS/8AzhDr&#xA;Oqs3mfRJCzaZEtteRKx2jmkLo3Ef8Wqo/wCBxV9S3H2B88IQVtv1bEqFV3SNGkkYIiAs7saAAbkk&#xA;nAl8eW/5QX//ACuKLzBJr9mfy8j1w3UGsNfxMhkjlNwLIIX5+qOPEtx48fir2xV9hqysoZSGVhVW&#xA;G4IPcYqp3H2R88IQVDJIdirsVXxf3gwFKG8wWV/faf8AU7OdrYzyxLczxtwkW35gziNhurPGCgZd&#xA;1rUbgZFKDu/I3libTFsLewhsPQBNjc2kaRTWslPhlgdRVHHj371BOKpppy3p06z/AEkEOoLFGboo&#xA;Pg9fgPUKe3KtMVREn923ywhVGH+8GEoDDvzv8oaz5w/K3XfLuihG1O9WBrZJX9NWMFzFOy8jsCyx&#xA;ECu1etMil8jL/wA4u/nXFrIaLy6RZx3FUmS+sQfSV9mU/WA4+HfxxV9VfkP+Wv8AgnyNZR6np1ra&#xA;earpGbWri2WPk5MzvDGzxjifSjdVPH4a1pXqVXos392f8++EKpQfb+jCUBgn56+R/OPnfyM3lzyv&#xA;eWtlLd3EZ1CS8kljR7WMMxjUxRzNVpOBO1KA5FL5u/6Eq/NP/q66H/0kXn/ZJir2H8gPyJ8z+QvM&#xA;Ora15nn0+9urqBYLGWyluJDHzfncVWaKFV9VlQ1X36DFXuE/93hClTt/tH5YSgMZ/ND8tdD/ADD8&#xA;rSaDqpaKki3Fndpu8MyVAYeIZWKsPA9jQiKXyzP/AM4hfmvHrjMZ9OvbUHkLxLh4jxGy8E4IUkUf&#xA;ZH2AaCtMVe//AJBflRrH5faVq8etXEd1qupXMcks9vw9Bo44gE4fu4pRxZnXi3w7VUCpxV6hcfYH&#xA;zwhBW2/VsSoeW/8AOSnkbzV508kabo/ly0a8nXV7ee+hWaKD/RUhnV2LSvGrUZ0+GtfbbAl8zn/n&#xA;Hb/nIY6UNLPlz/RA5lC/XrD7ZUKT/vTSvFQtaVpt0xV9P/8AOOvkvzN5O8hT6N5htWtLldSuZbWF&#xA;po56WzqgjIaJ5FFeJ2r9GKvTLj7I+eEIKhkkOxV2KrozRxgKUVkUuxV2KrZP7tvlhCqEJpIMJQic&#xA;il2KuxVZN/dn/PvhCqUBo/zwlARGRS7FXYqsn/u8IUqcB+P5jCUBXyKXYq7FVO4+wPnhCCstz8RH&#xA;jhKhXyKXYq7FVK4+yPnhCCoZJDsVdiq2WRIo3lkbjHGCzsegAFScIFmgiUhEEnkEq/xh5a/6uMX3&#xA;n+mZH5PL/NLgfytpv54d/jDy1/1cYvvP9MfyeX+aV/lbTfzw7/GHlr/q4xfef6Y/k8v80r/K2m/n&#xA;hUtvM+g3M6QQX0ck0hoiAmpP3ZGWlyRFmOzPH2lgnIRjMElHXV1b2lvJc3DiKCFS8kjdFUbknKYx&#xA;JNBzkl/x95P/AOrtB95/pl/5PL/NKaLv8feT/wDq7Qfef6Y/k8v80rRd/j7yf/1doPvP9MfyeX+a&#xA;Vooiw83+W9Qu0s7PUIp7mWvpxKTU8QWPbwFcjPTZIiyNkUmF7fWljayXd3KIbeIAySt0AJpv9Jyk&#xA;C2WPHKcuGIslJ/8AH/k7/q7Qfef6ZPwpdzl/ydn/AJhd/j/yd/1doPvP9MfCl3L/ACdn/mF3+P8A&#xA;yd/1doPvP9MfCl3L/J2f+YUVp3mvy7qdyLWxv4ri4ILCNCa0HU9MBxkcw1ZdHlxi5RICYXN1b2sJ&#xA;muJBHEtAXPTfYZTlyxxx4pGg1Y8cpmoiyg/8SaJ/y2x/ecxP5T0/88OR+Qz/AM0u/wASaJ/y2x/e&#xA;cf5T0/8APC/kM/8ANLv8SaJ/y2x/ecf5T0/88L+Qz/zSrWmradeSGK2uFlkA5FV60BAr+OXYdZiy&#xA;moSBLXl0uTGLkKCvcXUFtH6k7iNK05HxOTzZ4Yo8UzQa8eOUzURZQ36c0r/lqT7zmL/Kum/nht/J&#xA;5f5pd+nNK/5ak+84/wAq6b+eF/J5f5pd+nNK/wCWpPvOP8q6b+eF/J5f5pVrbULO6YrBMshUVYDs&#xA;MvwazFlJEJCVMMmCcPqFK+ZLS7FXYq0yq6lWAZWFGU7gg9jiCpAIooT9DaR/yw2//IpP6ZZ40/5x&#xA;+bj/AJTD/Mj8g79DaR/yw2//ACKT+mPjT/nH5r+Uw/zI/IO/Q2kf8sNv/wAik/pj40/5x+a/lMP8&#xA;yPyC+PS9MidZIrSFJF3V1jQEH2IGA5ZnYkso6bFE2IxB9wV5YopY2ilRZI3HF0YBlIPYg9cgDXJv&#xA;QX+HtA/6ttr/AMiI/wDmnLPGn/OPzW3f4e0D/q22v/IiP/mnHxp/zj81t3+HtA/6ttr/AMiI/wDm&#xA;nHxp/wA4/NbX2+j6RbyrNb2NvDMteMkcSKwqKGhAB6HAcsiKJK2iZ4IJ4mhnjWWJ9njcBlPfcHbI&#xA;ApjIg2Nigv8AD2gf9Wy0/wCREf8AzTkuM97b+Zy/zpfMu/w9oH/VstP+REf/ADTjxnvX8zl/nS+Z&#xA;d/h7QP8Aq2Wn/IiP/mnHjPev5nL/ADpfMqttpGlWsvq21lBBKBQSRxIjUPUVUA4DIljLNOQoyJHv&#xA;RMsUUqFJUWRD1VgCPuOQlASFEWGEZGJsGiofozTv+WWH/kWv9Mp/K4v5sfkGz8xk/nS+Zd+jNO/5&#xA;ZYf+Ra/0x/K4v5sfkF/MZP50vmXfozTv+WWH/kWv9MfyuL+bH5BfzGT+dL5lUhs7SFi0MEcbEULI&#xA;qqaeGwycMMIm4xA9wYyyzkKJJ+K+SKKReMiK69aMARX6clPHGYqQBHmxjIjkaUvqNl/yzxf8Av8A&#xA;TKvymH+ZH5Bn40/5x+bvqNl/yzxf8Av9MfymH+ZH5BfGn/OPzd9Rsv8Alni/4Bf6Y/lMP8yPyC+N&#xA;P+cfmvjt7eIkxRJGT1KqB+rJwwwh9MQPcGMpylzNqmWsHYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq//Z</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:OriginalDocumentID>uuid:65E6390686CF11DBA6E2D887CEACB407</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:C69F7BE0CA77ED11AC5B90F9F6F049F2</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:C69F7BE0CA77ED11AC5B90F9F6F049F2</xmpMM:InstanceID>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:c23a0ed0-0448-c940-be69-97a250d0ef15</stRef:instanceID>
            <stRef:documentID>xmp.did:c23a0ed0-0448-c940-be69-97a250d0ef15</stRef:documentID>
            <stRef:originalDocumentID>uuid:65E6390686CF11DBA6E2D887CEACB407</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:3420b7b6-3152-5a45-aee1-1f501793d84d</stEvt:instanceID>
                  <stEvt:when>2022-08-30T17:41:09+05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator 24.3 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:111e6bb8-7b2a-a54a-bd37-80b1797a1b21</stEvt:instanceID>
                  <stEvt:when>2022-08-30T17:41:40+05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator 24.3 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:c23a0ed0-0448-c940-be69-97a250d0ef15</stEvt:instanceID>
                  <stEvt:when>2022-09-05T05:05:15-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator 24.3 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:C69F7BE0CA77ED11AC5B90F9F6F049F2</stEvt:instanceID>
                  <stEvt:when>2022-12-09T19:08:02+05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Web</illustrator:StartupProfile>
         <illustrator:CreatorSubTool>Adobe Illustrator</illustrator:CreatorSubTool>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>709.333984</stDim:w>
            <stDim:h>826.218750</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -826.219 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 826.219 li
709.334 826.219 li
709.334 0 li
cp
clp
709.334 826.219 mo
0 826.219 li
0 0 li
709.334 0 li
709.334 826.219 li
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
.956863 .964706 .980392 rgb
f
559.334 391.295 mo
659.334 391.295 li
659.334 491.295 li
559.334 491.295 li
559.334 391.295 li
cp
1 1 1 rgb
f
432 391.295 mo
532 391.295 li
532 491.295 li
432 491.295 li
432 391.295 li
cp
f
304.667 391.295 mo
404.667 391.295 li
404.667 491.295 li
304.667 491.295 li
304.667 391.295 li
cp
f
177.334 391.295 mo
277.334 391.295 li
277.334 491.295 li
177.334 491.295 li
177.334 391.295 li
cp
f
50 391.295 mo
150 391.295 li
150 491.295 li
50 491.295 li
50 391.295 li
cp
f
559.334 520.113 mo
659.334 520.113 li
659.334 620.113 li
559.334 620.113 li
559.334 520.113 li
cp
f
432 520.113 mo
532 520.113 li
532 620.113 li
432 620.113 li
432 520.113 li
cp
f
304.667 520.113 mo
404.667 520.113 li
404.667 620.113 li
304.667 620.113 li
304.667 520.113 li
cp
f
177.334 520.113 mo
277.334 520.113 li
277.334 620.113 li
177.334 620.113 li
177.334 520.113 li
cp
f
50 520.113 mo
150 520.113 li
150 620.113 li
50 620.113 li
50 520.113 li
cp
f
559.334 262.477 mo
659.334 262.477 li
659.334 362.477 li
559.334 362.477 li
559.334 262.477 li
cp
f
432 262.477 mo
532 262.477 li
532 362.477 li
432 362.477 li
432 262.477 li
cp
f
304.667 262.477 mo
404.667 262.477 li
404.667 362.477 li
304.667 362.477 li
304.667 262.477 li
cp
f
177.334 262.477 mo
277.334 262.477 li
277.334 362.477 li
177.334 362.477 li
177.334 262.477 li
cp
f
50 262.477 mo
150 262.477 li
150 362.477 li
50 362.477 li
50 262.477 li
cp
f
559.334 133.658 mo
659.334 133.658 li
659.334 233.658 li
559.334 233.658 li
559.334 133.658 li
cp
f
432 133.658 mo
532 133.658 li
532 233.658 li
432 233.658 li
432 133.658 li
cp
f
304.667 133.658 mo
404.667 133.658 li
404.667 233.658 li
304.667 233.658 li
304.667 133.658 li
cp
f
177.334 133.658 mo
277.334 133.658 li
277.334 233.658 li
177.334 233.658 li
177.334 133.658 li
cp
f
50 133.658 mo
150 133.658 li
150 233.658 li
50 233.658 li
50 133.658 li
cp
f
559.334 648.932 mo
659.334 648.932 li
659.334 748.932 li
559.334 748.932 li
559.334 648.932 li
cp
f
432 648.932 mo
532 648.932 li
532 748.932 li
432 748.932 li
432 648.932 li
cp
f
304.667 648.932 mo
404.667 648.932 li
404.667 748.932 li
304.667 748.932 li
304.667 648.932 li
cp
f
177.334 648.932 mo
277.334 648.932 li
277.334 748.932 li
177.334 748.932 li
177.334 648.932 li
cp
f
50 648.932 mo
150 648.932 li
150 748.932 li
50 748.932 li
50 648.932 li
cp
f
559.334 776.219 mo
659.334 776.219 li
659.334 770.495 li
559.334 770.495 li
559.334 776.219 li
cp
.968627 .733333 .25098 rgb
f
432 776.219 mo
532 776.219 li
532 770.495 li
432 770.495 li
432 776.219 li
cp
.980392 .623529 .235294 rgb
f
304.667 776.219 mo
404.667 776.219 li
404.667 770.495 li
304.667 770.495 li
304.667 776.219 li
cp
.796078 .278431 .611765 rgb
f
177.334 776.219 mo
277.334 776.219 li
277.334 770.495 li
177.334 770.495 li
177.334 776.219 li
cp
.494118 .407843 .776471 rgb
f
50 776.219 mo
150 776.219 li
150 770.495 li
50 770.495 li
50 776.219 li
cp
.168627 .74902 .909804 rgb
f
277.67 52.0879 mo
302.766 52.0879 li
302.766 55.2119 li
277.67 55.2119 li
277.67 52.0879 li
cp
f
309.896 52.0879 mo
334.989 52.0879 li
334.989 55.2119 li
309.896 55.2119 li
309.896 52.0879 li
cp
.494118 .407843 .776471 rgb
f
342.119 52.0879 mo
367.213 52.0879 li
367.213 55.2119 li
342.119 55.2119 li
342.119 52.0879 li
cp
.796078 .278431 .611765 rgb
f
374.344 52.0879 mo
399.438 52.0879 li
399.438 55.2119 li
374.344 55.2119 li
374.344 52.0879 li
cp
.980392 .623529 .235294 rgb
f
406.568 52.0879 mo
431.662 52.0879 li
431.662 55.2119 li
406.568 55.2119 li
406.568 52.0879 li
cp
.968627 .733333 .25098 rgb
f
280.459 33.8052 mo
280.459 45.334 li
278.971 45.334 li
278.971 33.8052 li
280.459 33.8052 li
cp
.164706 .223529 .258824 rgb
f
295.395 44.9575 mo
294.847 45.2314 293.752 45.5049 292.35 45.5049 cv
289.1 45.5049 286.653 43.4526 286.653 39.6724 cv
286.653 36.063 289.1 33.6172 292.675 33.6172 cv
294.111 33.6172 295.018 33.9248 295.411 34.1304 cv
295.052 35.3447 li
294.487 35.0708 293.684 34.8657 292.726 34.8657 cv
290.023 34.8657 288.228 36.5933 288.228 39.6211 cv
288.228 42.4434 289.853 44.2563 292.657 44.2563 cv
293.564 44.2563 294.487 44.0684 295.087 43.7773 cv
295.395 44.9575 li
cp
f
302.087 39.6382 mo
302.087 42.1011 303.421 44.3076 305.765 44.3076 cv
308.125 44.3076 309.459 42.1353 309.459 39.5181 cv
309.459 37.2261 308.262 34.8315 305.781 34.8315 cv
303.318 34.8315 302.087 37.1064 302.087 39.6382 cv
cp
311.032 39.4497 mo
311.032 43.418 308.621 45.522 305.679 45.522 cv
302.634 45.522 300.496 43.1616 300.496 39.6724 cv
300.496 36.0117 302.771 33.6172 305.85 33.6172 cv
308.997 33.6172 311.032 36.0288 311.032 39.4497 cv
cp
f
317.247 45.334 mo
317.247 33.8052 li
318.872 33.8052 li
322.566 39.6382 li
323.422 40.9893 324.089 42.2036 324.637 43.3838 cv
324.671 43.3667 li
324.534 41.8276 324.5 40.4248 324.5 38.6289 cv
324.5 33.8052 li
325.902 33.8052 li
325.902 45.334 li
324.396 45.334 li
320.736 39.4839 li
319.933 38.2012 319.163 36.8843 318.581 35.6353 cv
318.53 35.6523 li
318.615 37.1064 318.649 38.4922 318.649 40.4077 cv
318.649 45.334 li
317.247 45.334 li
cp
f
333.689 39.6382 mo
333.689 42.1011 335.023 44.3076 337.367 44.3076 cv
339.728 44.3076 341.063 42.1353 341.063 39.5181 cv
341.063 37.2261 339.864 34.8315 337.385 34.8315 cv
334.921 34.8315 333.689 37.1064 333.689 39.6382 cv
cp
342.636 39.4497 mo
342.636 43.418 340.224 45.522 337.282 45.522 cv
334.237 45.522 332.099 43.1616 332.099 39.6724 cv
332.099 36.0117 334.374 33.6172 337.453 33.6172 cv
340.601 33.6172 342.636 36.0288 342.636 39.4497 cv
cp
f
357.625 44.8208 mo
356.958 45.0605 355.641 45.4536 354.084 45.4536 cv
352.34 45.4536 350.902 45.0088 349.773 43.9312 cv
348.781 42.9736 348.166 41.4341 348.166 39.6382 cv
348.183 36.1997 350.543 33.6855 354.409 33.6855 cv
355.743 33.6855 356.787 33.9761 357.283 34.2158 cv
356.924 35.4302 li
356.308 35.1563 355.538 34.9341 354.375 34.9341 cv
351.569 34.9341 349.739 36.6787 349.739 39.5693 cv
349.739 42.4946 351.501 44.2222 354.187 44.2222 cv
355.162 44.2222 355.829 44.0854 356.171 43.9141 cv
356.171 40.4761 li
353.827 40.4761 li
353.827 39.2788 li
357.625 39.2788 li
357.625 44.8208 li
cp
f
365.669 39.2104 mo
367.191 39.2104 li
368.782 39.2104 369.792 38.3379 369.792 37.021 cv
369.792 35.5327 368.714 34.8828 367.141 34.8657 cv
366.422 34.8657 365.909 34.9341 365.669 35.0024 cv
365.669 39.2104 li
cp
364.181 33.959 mo
364.934 33.8052 366.012 33.7197 367.038 33.7197 cv
368.629 33.7197 369.654 34.0103 370.373 34.6602 cv
370.955 35.1733 371.279 35.9604 371.279 36.8496 cv
371.279 38.3721 370.322 39.3813 369.107 39.792 cv
369.107 39.8433 li
369.997 40.1514 370.527 40.9722 370.801 42.1694 cv
371.177 43.7773 371.451 44.8892 371.69 45.334 cv
370.15 45.334 li
369.963 45.0088 369.706 44.0171 369.381 42.5801 cv
369.039 40.9893 368.423 40.3906 367.072 40.3394 cv
365.669 40.3394 li
365.669 45.334 li
364.181 45.334 li
364.181 33.959 li
cp
f
383.395 40.5444 mo
382.266 37.2261 li
382.009 36.4736 381.838 35.7896 381.667 35.1221 cv
381.632 35.1221 li
381.461 35.8066 381.273 36.5078 381.051 37.209 cv
379.922 40.5444 li
383.395 40.5444 li
cp
379.614 41.7075 mo
378.417 45.334 li
376.877 45.334 li
380.794 33.8052 li
382.59 33.8052 li
386.524 45.334 li
384.934 45.334 li
383.702 41.7075 li
379.614 41.7075 li
cp
f
393.986 39.501 mo
394.312 39.5869 394.722 39.6211 395.218 39.6211 cv
397.015 39.6211 398.109 38.7485 398.109 37.1577 cv
398.109 35.6353 397.031 34.8999 395.39 34.8999 cv
394.739 34.8999 394.243 34.9512 393.986 35.0195 cv
393.986 39.501 li
cp
392.498 33.9419 mo
393.217 33.8223 394.157 33.7197 395.355 33.7197 cv
396.826 33.7197 397.903 34.0615 398.588 34.6777 cv
399.221 35.2251 399.597 36.063 399.597 37.0894 cv
399.597 38.1328 399.289 38.9536 398.708 39.5522 cv
397.921 40.3906 396.638 40.8184 395.184 40.8184 cv
394.739 40.8184 394.329 40.8013 393.986 40.7158 cv
393.986 45.334 li
392.498 45.334 li
392.498 33.9419 li
cp
f
407.367 33.8052 mo
407.367 38.6289 li
412.943 38.6289 li
412.943 33.8052 li
414.449 33.8052 li
414.449 45.334 li
412.943 45.334 li
412.943 39.9287 li
407.367 39.9287 li
407.367 45.334 li
405.879 45.334 li
405.879 33.8052 li
407.367 33.8052 li
cp
f
423.759 45.334 mo
423.759 40.4419 li
420.115 33.8052 li
421.81 33.8052 li
423.434 36.9868 li
423.879 37.8589 424.221 38.5605 424.58 39.3643 cv
424.614 39.3643 li
424.939 38.6118 425.333 37.8589 425.777 36.9868 cv
427.437 33.8052 li
429.13 33.8052 li
425.265 40.4248 li
425.265 45.334 li
423.759 45.334 li
cp
f
307.318 68.9888 mo
307.318 80.0601 li
307.318 81.3242 307.047 82.4302 306.505 83.3779 cv
305.962 84.3262 305.178 85.0557 304.152 85.5664 cv
303.126 86.0776 301.899 86.333 300.472 86.333 cv
298.35 86.333 296.699 85.7715 295.521 84.6479 cv
294.343 83.5244 293.754 81.9795 293.754 80.0132 cv
293.754 68.9888 li
296.563 68.9888 li
296.563 79.8145 li
296.563 81.2266 296.891 82.2681 297.546 82.9395 cv
298.201 83.6104 299.208 83.9458 300.565 83.9458 cv
303.203 83.9458 304.521 82.561 304.521 79.791 cv
304.521 68.9888 li
307.318 68.9888 li
cp
f
319.14 82.4126 mo
319.14 83.6768 318.679 84.646 317.759 85.3208 cv
316.838 85.9956 315.52 86.333 313.803 86.333 cv
312.079 86.333 310.694 86.0718 309.648 85.5488 cv
309.648 83.1733 li
311.17 83.8755 312.586 84.2266 313.896 84.2266 cv
315.59 84.2266 316.437 83.7158 316.437 82.6934 cv
316.437 82.3657 316.343 82.0928 316.155 81.874 cv
315.968 81.6558 315.66 81.4297 315.231 81.1953 cv
314.802 80.9614 314.205 80.6963 313.44 80.3994 cv
311.95 79.8223 310.941 79.2451 310.415 78.6675 cv
309.888 78.0903 309.625 77.3413 309.625 76.4204 cv
309.625 75.3125 310.071 74.4526 310.965 73.8398 cv
311.858 73.2275 313.073 72.9214 314.61 72.9214 cv
316.132 72.9214 317.571 73.2295 318.929 73.8457 cv
318.04 75.917 li
316.643 75.3398 315.469 75.0513 314.517 75.0513 cv
313.066 75.0513 312.34 75.4648 312.34 76.2915 cv
312.34 76.6973 312.529 77.0405 312.908 77.3218 cv
313.286 77.6025 314.111 77.9888 315.383 78.4805 cv
316.452 78.894 317.228 79.2725 317.712 79.6152 cv
318.196 79.959 318.555 80.355 318.789 80.8032 cv
319.023 81.252 319.14 81.7886 319.14 82.4126 cv
cp
f
326.303 75.0044 mo
325.429 75.0044 324.729 75.2813 324.202 75.8354 cv
323.676 76.3892 323.362 77.1968 323.26 78.2578 cv
329.135 78.2578 li
329.12 77.189 328.862 76.3794 328.363 75.8296 cv
327.863 75.2793 327.177 75.0044 326.303 75.0044 cv
cp
326.806 86.333 mo
324.793 86.333 323.219 85.7461 322.084 84.5718 cv
320.949 83.3975 320.381 81.7808 320.381 79.7207 cv
320.381 77.6064 320.908 75.9448 321.961 74.7354 cv
323.015 73.5259 324.462 72.9214 326.303 72.9214 cv
328.012 72.9214 329.361 73.4399 330.353 74.4775 cv
331.343 75.5156 331.839 76.9434 331.839 78.7612 cv
331.839 80.2476 li
323.213 80.2476 li
323.252 81.5039 323.592 82.4692 324.231 83.144 cv
324.871 83.8188 325.772 84.1563 326.935 84.1563 cv
327.7 84.1563 328.412 84.0845 329.071 83.9399 cv
329.73 83.7954 330.438 83.5557 331.195 83.2202 cv
331.195 85.4556 li
330.524 85.7754 329.845 86.0015 329.159 86.1343 cv
328.472 86.2666 327.688 86.333 326.806 86.333 cv
cp
f
340.57 72.9214 mo
341.124 72.9214 341.581 72.9604 341.939 73.0381 cv
341.67 75.6011 li
341.28 75.5078 340.875 75.4609 340.453 75.4609 cv
339.353 75.4609 338.462 75.8198 337.779 76.5376 cv
337.096 77.2554 336.755 78.1875 336.755 79.3345 cv
336.755 86.0991 li
334.005 86.0991 li
334.005 73.1553 li
336.158 73.1553 li
336.521 75.4375 li
336.662 75.4375 li
337.09 74.665 337.65 74.0527 338.341 73.6001 cv
339.031 73.1475 339.774 72.9214 340.57 72.9214 cv
cp
f
357.108 78.9365 mo
355.505 74.2788 li
355.389 73.9668 355.227 73.4751 355.02 72.8042 cv
354.813 72.1333 354.67 71.6416 354.593 71.3296 cv
354.382 72.2891 354.074 73.3389 353.668 74.4775 cv
352.123 78.9365 li
357.108 78.9365 li
cp
359.555 86.0991 mo
357.847 81.3477 li
351.304 81.3477 li
349.63 86.0991 li
346.681 86.0991 li
353.083 68.9185 li
356.126 68.9185 li
362.527 86.0991 li
359.555 86.0991 li
cp
f
366.484 86.0991 mo
361.569 73.1553 li
364.472 73.1553 li
367.104 80.6807 li
367.558 81.9443 367.83 82.9668 367.924 83.7466 cv
368.018 83.7466 li
368.087 83.1851 368.36 82.1631 368.837 80.6807 cv
371.47 73.1553 li
374.396 73.1553 li
369.457 86.0991 li
366.484 86.0991 li
cp
f
379.405 84.2266 mo
380.404 84.2266 381.206 83.9478 381.811 83.3896 cv
382.415 82.832 382.718 82.0498 382.718 81.0435 cv
382.718 79.9199 li
381.056 79.9897 li
379.761 80.0366 378.818 80.2534 378.229 80.6396 cv
377.64 81.0259 377.346 81.6167 377.346 82.4126 cv
377.346 82.9902 377.518 83.4365 377.86 83.7524 cv
378.204 84.0684 378.72 84.2266 379.405 84.2266 cv
cp
383.502 86.0991 mo
382.952 84.2969 li
382.858 84.2969 li
382.233 85.085 381.606 85.6211 380.974 85.9063 cv
380.342 86.1909 379.53 86.333 378.54 86.333 cv
377.269 86.333 376.274 85.9897 375.562 85.3032 cv
374.847 84.6167 374.49 83.6455 374.49 82.3892 cv
374.49 81.0552 374.985 80.0483 375.977 79.3696 cv
376.968 78.6909 378.478 78.3203 380.506 78.2578 cv
382.741 78.1875 li
382.741 77.4971 li
382.741 76.6704 382.548 76.0518 382.161 75.6421 cv
381.776 75.2324 381.177 75.0278 380.365 75.0278 cv
379.702 75.0278 379.066 75.1255 378.458 75.3203 cv
377.849 75.5156 377.265 75.7456 376.702 76.0107 cv
375.813 74.0444 li
376.515 73.6782 377.283 73.3989 378.118 73.208 cv
378.953 73.0166 379.741 72.9214 380.482 72.9214 cv
382.128 72.9214 383.371 73.2803 384.21 73.998 cv
385.048 74.7158 385.468 75.8433 385.468 77.3799 cv
385.468 86.0991 li
383.502 86.0991 li
cp
f
393.17 84.1094 mo
393.841 84.1094 394.512 84.0044 395.183 83.7935 cv
395.183 85.8652 li
394.878 85.998 394.486 86.1089 394.007 86.1987 cv
393.526 86.2881 393.029 86.333 392.515 86.333 cv
389.908 86.333 388.605 84.96 388.605 82.2134 cv
388.605 75.2383 li
386.839 75.2383 li
386.839 74.0215 li
388.734 73.0146 li
389.671 70.2764 li
391.368 70.2764 li
391.368 73.1553 li
395.054 73.1553 li
395.054 75.2383 li
391.368 75.2383 li
391.368 82.167 li
391.368 82.8301 391.533 83.3193 391.864 83.6357 cv
392.196 83.9517 392.632 84.1094 393.17 84.1094 cv
cp
f
400.813 84.2266 mo
401.812 84.2266 402.613 83.9478 403.218 83.3896 cv
403.823 82.832 404.125 82.0498 404.125 81.0435 cv
404.125 79.9199 li
402.463 79.9897 li
401.168 80.0366 400.226 80.2534 399.637 80.6396 cv
399.048 81.0259 398.753 81.6167 398.753 82.4126 cv
398.753 82.9902 398.925 83.4365 399.269 83.7524 cv
399.611 84.0684 400.126 84.2266 400.813 84.2266 cv
cp
404.909 86.0991 mo
404.358 84.2969 li
404.266 84.2969 li
403.642 85.085 403.013 85.6211 402.382 85.9063 cv
401.749 86.1909 400.938 86.333 399.946 86.333 cv
398.675 86.333 397.683 85.9897 396.968 85.3032 cv
396.255 84.6167 395.897 83.6455 395.897 82.3892 cv
395.897 81.0552 396.394 80.0483 397.384 79.3696 cv
398.374 78.6909 399.884 78.3203 401.913 78.2578 cv
404.148 78.1875 li
404.148 77.4971 li
404.148 76.6704 403.955 76.0518 403.569 75.6421 cv
403.183 75.2324 402.584 75.0278 401.772 75.0278 cv
401.109 75.0278 400.474 75.1255 399.864 75.3203 cv
399.257 75.5156 398.671 75.7456 398.109 76.0107 cv
397.22 74.0444 li
397.923 73.6782 398.69 73.3989 399.525 73.208 cv
400.36 73.0166 401.148 72.9214 401.89 72.9214 cv
403.536 72.9214 404.778 73.2803 405.617 73.998 cv
406.456 74.7158 406.876 75.8433 406.876 77.3799 cv
406.876 86.0991 li
404.909 86.0991 li
cp
f
416.321 72.9214 mo
416.874 72.9214 417.331 72.9604 417.69 73.0381 cv
417.421 75.6011 li
417.03 75.5078 416.625 75.4609 416.204 75.4609 cv
415.104 75.4609 414.212 75.8198 413.53 76.5376 cv
412.847 77.2554 412.505 78.1875 412.505 79.3345 cv
412.505 86.0991 li
409.755 86.0991 li
409.755 73.1553 li
411.909 73.1553 li
412.271 75.4375 li
412.412 75.4375 li
412.841 74.665 413.401 74.0527 414.091 73.6001 cv
414.782 73.1475 415.524 72.9214 416.321 72.9214 cv
cp
f
556.341 640 mo
657.5 640 li
657.5 740 li
556.341 740 li
556.341 640 li
cp
1 1 1 rgb
f
607.123 701 mo
609.449 705 li
614.912 694.3 li
613.294 692.4 li
607.123 701 li
cp
0 0 0 rgb
f
595.895 670.5 mo
596.299 670.8 596.703 671 597.108 671.1 cv
597.411 671.2 597.614 671.2 597.917 671.2 cv
610.461 671.2 li
611.371 671.2 612.181 670.7 612.585 669.9 cv
612.585 669.9 612.585 669.8 612.687 669.8 cv
612.687 669.8 li
612.687 669.8 612.687 669.8 612.788 669.7 cv
612.788 669.7 li
612.788 669.7 612.889 669.7 612.889 669.6 cv
612.889 669.6 li
612.99 669.6 li
612.99 669.6 li
613.091 669.6 613.091 669.6 613.192 669.6 cv
613.192 669.6 li
613.192 669.6 li
613.294 669.6 li
613.294 669.6 li
613.395 669.6 li
617.138 671.4 li
617.138 669.5 li
612.788 665.6 li
612.687 665.5 612.687 665.4 612.585 665.3 cv
612.585 665.2 612.484 665.1 612.484 665.1 cv
612.383 665 li
611.979 664.2 611.068 663.3 610.057 663.3 cv
594.175 663.3 li
594.175 667 li
594.175 668.3 594.781 669.7 595.895 670.5 cv
cp
f
610.765 672.5 mo
610.663 672.5 610.663 672.5 610.563 672.5 cv
597.917 672.5 li
597.816 672.5 597.715 672.5 597.715 672.5 cv
597.715 672.5 597.715 672.5 597.614 672.5 cv
597.513 672.5 597.513 672.5 597.411 672.5 cv
597.411 672.5 597.411 672.5 597.311 672.5 cv
597.209 672.5 597.209 672.5 597.108 672.5 cv
597.108 672.5 li
597.007 672.5 597.007 672.5 596.906 672.5 cv
596.906 672.5 596.906 672.5 596.805 672.5 cv
596.703 672.5 596.703 672.5 596.603 672.5 cv
596.603 672.5 li
596.501 672.5 596.501 672.5 596.4 672.4 cv
596.4 672.4 li
596.299 672.4 596.299 672.4 596.197 672.3 cv
596.197 672.3 596.197 672.3 596.097 672.3 cv
595.995 672.3 595.995 672.2 595.895 672.2 cv
595.895 672.2 li
595.793 672.7 595.793 673.1 595.793 673.6 cv
595.793 676.9 596.906 681.1 598.625 684.3 cv
600.143 687 602.672 690.3 606.516 690.3 cv
610.36 690.3 612.889 687.1 614.406 684.3 cv
616.126 681.1 617.238 676.9 617.238 673.6 cv
617.238 673.5 617.238 673.3 617.138 673.1 cv
613.395 671 li
612.788 671.9 611.776 672.4 610.765 672.5 cv
cp
f
597.816 694.3 mo
603.178 705.1 li
605.707 700.9 li
599.334 692.4 li
597.816 694.3 li
cp
f
615.924 695 mo
609.955 706.7 li
609.955 706.9 609.651 707 609.449 707 cv
609.449 707 li
609.449 707 li
609.247 707 609.146 706.9 609.045 706.8 cv
609.045 706.8 li
609.045 706.8 li
609.045 706.8 609.045 706.8 609.045 706.7 cv
606.516 702.2 li
603.784 706.7 li
603.784 706.7 603.784 706.7 603.784 706.8 cv
603.784 706.8 li
603.784 706.8 li
603.784 706.8 li
603.784 706.8 li
603.784 706.8 li
603.784 706.8 li
603.784 706.8 li
603.784 706.8 li
603.784 706.8 li
603.784 706.8 li
603.784 706.8 li
603.784 706.8 li
603.784 706.8 li
603.784 706.8 li
603.784 706.8 li
603.684 706.8 603.481 706.7 603.38 706.6 cv
603.278 706.5 603.278 706.5 603.178 706.4 cv
596.805 695 li
594.275 696 li
594.275 696 li
584.868 699.3 li
584.868 715.7 li
591.241 715.7 li
591.241 705.1 li
591.241 704.8 591.544 704.5 591.848 704.5 cv
592.151 704.5 592.455 704.8 592.455 705.1 cv
592.455 715.7 li
620.273 715.7 li
620.273 705.1 li
620.273 704.8 620.577 704.5 620.881 704.5 cv
621.184 704.5 621.487 704.8 621.487 705.1 cv
621.487 715.7 li
627.86 715.7 li
627.86 699.3 li
615.924 695 li
cp
f
428.881 640 mo
530.04 640 li
530.04 740 li
428.881 740 li
428.881 640 li
cp
1 1 1 rgb
f
468.434 698 mo
470.559 696 472.885 694.7 475.313 694 cv
472.177 692.6 470.053 689.6 470.053 686 cv
470.053 681.2 473.998 677.2 478.954 677.2 cv
483.811 677.2 487.856 681.1 487.856 686 cv
487.856 689.6 485.732 692.6 482.596 694 cv
486.137 695 489.374 697.3 491.902 700.8 cv
493.724 695.2 li
493.825 694.9 494.027 694.8 494.331 694.8 cv
494.634 694.8 494.836 695 494.938 695.2 cv
497.467 702.9 li
500.097 702.9 li
502.929 698.6 504.446 693.7 504.446 688.6 cv
504.648 674.5 493.016 663 478.752 663 cv
464.488 663 452.855 674.5 452.855 688.6 cv
452.855 696.6 456.599 703.7 462.364 708.4 cv
463.578 704.2 465.703 700.6 468.434 698 cv
cp
0 0 0 rgb
f
482.697 704 mo
482.495 703.8 482.394 703.6 482.495 703.3 cv
482.596 703 482.799 702.9 483.102 702.9 cv
491.296 702.9 li
491.498 702.3 li
488.261 697.5 483.811 694.8 479.056 694.8 cv
472.177 694.8 465.905 700.6 463.376 709.3 cv
467.321 712.2 472.177 714 477.336 714.3 cv
477.438 714.3 li
477.64 714.3 477.74 714.3 477.943 714.3 cv
478.044 714.3 li
478.246 714.3 478.448 714.3 478.651 714.3 cv
481.888 714.3 485.024 713.7 488.059 712.6 cv
489.272 708.9 li
482.697 704 li
cp
f
479.056 678.5 mo
483.246 678.5 486.643 681.857 486.643 686 cv
486.643 690.143 483.246 693.5 479.056 693.5 cv
474.865 693.5 471.469 690.143 471.469 686 cv
471.469 681.857 474.865 678.5 479.056 678.5 cv
cp
f
498.377 708 mo
503.84 704.1 li
500.603 704.1 li
497.163 704.1 li
496.859 704.1 496.657 703.9 496.556 703.7 cv
494.432 697.4 li
492.308 703.7 li
492.206 704 492.004 704.1 491.7 704.1 cv
485.024 704.1 li
490.486 708 li
490.688 708.2 490.79 708.4 490.688 708.7 cv
488.564 715 li
494.027 711.1 li
494.128 711 494.229 711 494.432 711 cv
494.634 711 494.735 711 494.836 711.1 cv
500.299 715 li
498.175 708.7 li
498.073 708.5 498.175 708.2 498.377 708 cv
cp
f
301.42 640 mo
402.579 640 li
402.579 740 li
301.42 740 li
301.42 640 li
cp
1 1 1 rgb
f
374.356 707.1 mo
374.255 707.1 374.153 707.2 374.053 707.2 cv
374.053 707.2 374.053 707.2 373.951 707.2 cv
373.851 707.2 373.749 707.3 373.648 707.3 cv
373.648 707.3 373.648 707.3 373.547 707.3 cv
373.445 707.3 373.345 707.4 373.243 707.4 cv
373.243 707.4 li
373.143 707.4 373.041 707.5 372.939 707.5 cv
372.939 707.5 372.939 707.5 372.839 707.5 cv
372.737 707.5 372.637 707.5 372.434 707.6 cv
372.434 707.6 li
372.333 707.6 372.231 707.6 372.131 707.6 cv
372.131 707.6 372.131 707.6 372.029 707.6 cv
371.929 707.6 371.827 707.6 371.625 707.6 cv
371.625 707.6 371.625 707.6 371.523 707.6 cv
371.423 707.6 371.321 707.6 371.119 707.6 cv
366.364 707.6 362.521 703.8 362.521 699.1 cv
362.521 699 362.521 698.8 362.521 698.7 cv
362.521 698.6 li
362.521 698.5 362.521 698.4 362.521 698.3 cv
362.521 698.2 362.521 698.2 362.521 698.1 cv
362.521 698 362.521 697.9 362.521 697.9 cv
362.521 697.8 362.521 697.8 362.521 697.7 cv
362.521 697.6 362.521 697.5 362.521 697.5 cv
362.521 697.4 362.521 697.4 362.521 697.3 cv
362.521 697.2 362.521 697.1 362.622 697.1 cv
362.622 697 362.622 697 362.622 696.9 cv
362.622 696.8 362.622 696.7 362.723 696.7 cv
362.723 696.6 362.723 696.6 362.723 696.5 cv
362.723 696.4 362.824 696.3 362.824 696.3 cv
362.824 696.2 li
362.824 696.1 362.925 696 362.925 695.9 cv
362.925 695.9 362.925 695.9 362.925 695.8 cv
363.026 695.7 363.026 695.6 363.128 695.4 cv
363.128 695.4 363.128 695.3 363.229 695.3 cv
363.229 695.2 363.33 695.1 363.33 695.1 cv
363.33 695.1 363.33 695 363.431 695 cv
363.431 694.9 363.532 694.9 363.532 694.8 cv
363.633 694.7 li
363.633 694.6 363.734 694.6 363.734 694.5 cv
363.836 694.4 li
363.836 694.3 363.937 694.3 363.937 694.2 cv
364.038 694.1 li
364.038 694 364.139 694 364.24 693.9 cv
364.342 693.8 li
364.342 693.8 li
360.193 691 355.439 689.5 350.381 689.5 cv
337.028 689.5 326.104 700.1 325.8 713.2 cv
375.267 713.2 li
375.165 711 374.862 709.1 374.356 707.1 cv
374.356 707.1 li
cp
0 0 0 rgb
f
350.685 665.9 mo
356.887 665.9 361.914 670.869 361.914 677 cv
361.914 683.13 356.887 688.1 350.685 688.1 cv
344.483 688.1 339.456 683.13 339.456 677 cv
339.456 670.869 344.483 665.9 350.685 665.9 cv
cp
f
373.749 699.9 mo
371.726 699.9 li
371.726 701.9 li
371.726 702.2 371.423 702.5 371.119 702.5 cv
370.815 702.5 370.512 702.2 370.512 701.9 cv
370.512 699.9 li
368.489 699.9 li
368.186 699.9 367.882 699.6 367.882 699.3 cv
367.882 699 368.186 698.7 368.489 698.7 cv
370.512 698.7 li
370.512 696.7 li
370.512 696.4 370.815 696.1 371.119 696.1 cv
371.423 696.1 371.726 696.4 371.726 696.7 cv
371.726 698.7 li
373.749 698.7 li
374.053 698.7 374.356 699 374.356 699.3 cv
374.356 699.6 374.053 699.9 373.749 699.9 cv
cp
371.119 692 mo
369.197 692 367.376 692.7 365.96 694.1 cv
364.544 695.5 363.734 697.3 363.734 699.3 cv
363.734 703.3 367.072 706.5 371.018 706.5 cv
372.231 706.5 373.345 706.2 374.356 705.7 cv
376.784 704.5 378.302 702 378.302 699.2 cv
378.402 695.2 375.165 692 371.119 692 cv
cp
f
173.96 640 mo
275.119 640 li
275.119 740 li
173.96 740 li
173.96 640 li
cp
1 1 1 rgb
f
219.38 663.3 mo
225.023 663.3 229.598 667.822 229.598 673.4 cv
229.598 678.979 225.023 683.5 219.38 683.5 cv
213.738 683.5 209.164 678.979 209.164 673.4 cv
209.164 667.822 213.738 663.3 219.38 663.3 cv
cp
0 0 0 rgb
f
237.69 703.1 mo
237.589 703.1 237.488 703.1 237.387 703.1 cv
237.286 703.1 237.286 703.1 237.185 703.1 cv
237.083 703.1 236.982 703.1 236.881 703.1 cv
236.78 703.1 236.78 703.1 236.679 703.1 cv
236.578 703.1 236.477 703.1 236.375 703 cv
236.274 703 236.274 703 236.173 703 cv
236.072 703 235.971 702.9 235.87 702.9 cv
235.769 702.9 235.769 702.9 235.667 702.8 cv
235.566 702.8 235.465 702.7 235.263 702.7 cv
235.162 702.7 li
235.06 702.6 234.858 702.6 234.757 702.5 cv
234.656 702.5 234.656 702.5 234.555 702.4 cv
234.453 702.4 234.352 702.3 234.251 702.3 cv
234.15 702.3 234.15 702.2 234.049 702.2 cv
233.947 702.2 233.846 702.1 233.846 702.1 cv
233.745 702.1 233.745 702 233.644 702 cv
233.543 702 233.543 701.9 233.442 701.9 cv
233.341 701.9 233.341 701.8 233.239 701.8 cv
233.138 701.8 233.138 701.7 233.037 701.7 cv
232.936 701.7 232.936 701.6 232.835 701.6 cv
232.733 701.6 232.733 701.5 232.632 701.5 cv
232.531 701.5 232.531 701.4 232.43 701.4 cv
232.329 701.4 232.329 701.3 232.228 701.2 cv
232.126 701.2 232.126 701.1 232.025 701.1 cv
231.924 701 231.924 701 231.823 700.9 cv
231.722 700.9 231.722 700.8 231.621 700.7 cv
231.52 700.6 231.52 700.6 231.418 700.5 cv
231.317 700.4 231.317 700.4 231.216 700.3 cv
231.115 700.2 231.115 700.2 231.014 700.1 cv
230.913 700 230.913 700 230.913 699.9 cv
230.812 699.8 230.812 699.8 230.71 699.7 cv
230.71 699.6 230.609 699.6 230.609 699.5 cv
230.508 699.4 230.508 699.4 230.508 699.3 cv
230.508 699.2 230.407 699.2 230.407 699.1 cv
230.407 699 230.306 699 230.306 698.9 cv
230.306 698.8 230.205 698.8 230.205 698.7 cv
230.205 698.6 230.104 698.6 230.104 698.5 cv
230.104 698.4 230.002 698.4 230.002 698.3 cv
230.002 698.2 229.901 698.2 229.901 698.1 cv
229.901 698 229.8 698 229.8 697.9 cv
229.8 697.8 229.699 697.8 229.699 697.7 cv
229.699 697.6 229.598 697.6 229.598 697.5 cv
229.598 697.4 229.497 697.3 229.497 697.3 cv
229.497 697.2 229.396 697.2 229.396 697.1 cv
229.396 697 229.294 696.9 229.294 696.9 cv
229.294 696.8 229.193 696.8 229.193 696.7 cv
229.193 696.6 229.092 696.5 229.092 696.5 cv
229.092 696.4 229.092 696.4 228.991 696.3 cv
228.991 696.2 228.991 696.1 228.89 696.1 cv
228.89 696 228.89 696 228.789 695.9 cv
228.789 695.8 228.789 695.7 228.688 695.6 cv
228.688 695.5 228.688 695.5 228.688 695.4 cv
228.688 695.3 228.688 695.2 228.688 695.1 cv
228.688 695 228.688 695 228.688 694.9 cv
228.688 694.8 228.688 694.7 228.688 694.6 cv
228.688 694.5 228.688 694.5 228.688 694.4 cv
228.688 694.3 228.688 694.2 228.688 694.1 cv
228.688 694 228.688 694 228.688 693.9 cv
228.688 693.7 228.688 693.6 228.688 693.4 cv
228.688 693.3 228.688 693.1 228.688 693 cv
228.688 693 228.688 693 228.688 692.9 cv
228.688 692.8 228.688 692.6 228.688 692.5 cv
228.688 692.4 li
228.688 692.3 228.688 692.1 228.688 692 cv
228.688 692 li
228.688 691.9 228.688 691.7 228.789 691.6 cv
228.789 691.6 228.789 691.6 228.789 691.5 cv
228.789 691.4 228.789 691.2 228.89 691.1 cv
228.89 691 li
228.89 690.9 228.991 690.7 228.991 690.6 cv
228.991 690.6 li
228.991 690.5 229.092 690.4 229.092 690.2 cv
229.092 690.2 229.092 690.2 229.092 690.1 cv
229.092 690 229.193 689.9 229.193 689.7 cv
229.193 689.7 li
228.08 689.4 226.968 689.2 225.855 689.2 cv
212.603 689.2 li
206.027 689.2 200.666 694.5 200.666 701 cv
200.666 711.6 li
200.666 713.8 202.386 715.5 204.611 715.5 cv
208.658 715.5 li
208.658 704.1 li
208.658 703.8 208.961 703.5 209.265 703.5 cv
209.568 703.5 209.872 703.8 209.872 704.1 cv
209.872 715.8 li
228.89 715.8 li
228.89 704.1 li
228.89 703.8 229.193 703.5 229.497 703.5 cv
229.8 703.5 230.104 703.8 230.104 704.1 cv
230.104 715.8 li
234.251 715.8 li
236.477 715.8 238.196 714 238.196 711.9 cv
238.196 703.2 li
238.095 703.2 237.994 703.2 237.994 703.2 cv
237.893 703.1 237.792 703.1 237.69 703.1 cv
cp
f
243.76 692.4 mo
239.106 694.6 li
239.005 694.6 238.904 694.7 238.803 694.7 cv
238.702 694.7 238.5 694.7 238.398 694.6 cv
235.263 692.4 li
234.959 692.2 234.858 691.8 235.06 691.5 cv
235.263 691.2 235.667 691.1 235.971 691.3 cv
238.803 693.2 li
243.153 691.2 li
243.457 691.1 243.861 691.2 243.962 691.5 cv
244.165 691.9 244.063 692.2 243.76 692.4 cv
cp
238.803 684.8 mo
235.465 684.8 232.329 686.7 230.913 689.8 cv
230.407 690.9 230.104 692.2 230.104 693.4 cv
230.104 698.1 234.049 702 238.803 702 cv
243.558 702 247.503 698.1 247.503 693.4 cv
247.503 688.6 243.558 684.8 238.803 684.8 cv
cp
f
46.5 640 mo
147.659 640 li
147.659 740 li
46.5 740 li
46.5 640 li
cp
1 1 1 rgb
f
90.7065 696.5 mo
93.8423 695.4 96.0679 692.5 96.0679 689.1 cv
96.0679 684.8 92.5273 681.2 88.0762 681.2 cv
83.7266 681.2 80.085 684.7 80.085 689.1 cv
80.085 692.5 82.3101 695.5 85.4463 696.5 cv
76.8477 697.7 70.2725 705.1 70.2725 713.8 cv
70.2725 714.1 70.5757 714.4 70.8794 714.4 cv
71.1826 714.4 71.4863 714.1 71.4863 713.8 cv
71.4863 704.8 78.8711 697.5 87.9751 697.5 cv
97.0796 697.5 104.464 704.8 104.464 713.8 cv
104.464 714.1 104.768 714.4 105.071 714.4 cv
105.375 714.4 105.678 714.1 105.678 713.8 cv
105.779 705 99.2036 697.7 90.7065 696.5 cv
cp
0 0 0 rgb
f
107.903 679.8 mo
110.837 678.7 112.961 675.8 112.961 672.5 cv
112.961 668.2 109.421 664.6 104.97 664.6 cv
100.519 664.6 97.0796 668.1 97.0796 672.4 cv
97.0796 675.7 99.2036 678.6 102.137 679.7 cv
99.4063 680.1 96.7759 681.2 94.5503 682.8 cv
94.2471 683 94.2471 683.4 94.4492 683.7 cv
94.6519 684 95.0562 684 95.3599 683.8 cv
98.1924 681.7 101.53 680.7 105.071 680.7 cv
114.175 680.7 121.56 688 121.56 697 cv
121.56 697.3 121.863 697.6 122.167 697.6 cv
122.47 697.6 122.774 697.3 122.774 697 cv
122.774 688.4 116.401 681.1 107.903 679.8 cv
cp
f
556.341 514 mo
657.5 514 li
657.5 614 li
556.341 614 li
556.341 514 li
cp
1 1 1 rgb
f
613.496 564.5 mo
613.294 564.4 613.091 564.3 613.091 564 cv
613.091 563.8 613.091 563.5 613.294 563.4 cv
616.126 560.9 617.744 557 617.744 552.9 cv
617.744 545.6 612.687 539.7 606.415 539.7 cv
600.143 539.7 595.085 545.6 595.085 552.9 cv
595.085 557.1 596.703 560.9 599.536 563.4 cv
599.738 563.6 599.738 563.8 599.738 564 cv
599.738 564.2 599.536 564.4 599.334 564.5 cv
590.533 567.1 583.755 574.5 582.137 583.4 cv
581.935 584.3 582.237 585.3 582.845 586 cv
583.452 586.8 584.362 587.2 585.374 587.2 cv
592.354 587.2 li
592.354 576.5 li
592.354 576.2 592.657 575.9 592.961 575.9 cv
593.264 575.9 593.567 576.2 593.567 576.5 cv
593.567 587.3 li
618.857 587.3 li
618.857 576.5 li
618.857 576.2 619.161 575.9 619.464 575.9 cv
619.768 575.9 620.071 576.2 620.071 576.5 cv
620.071 587.3 li
627.254 587.3 li
628.265 587.3 629.176 586.9 629.782 586.1 cv
630.39 585.4 630.693 584.4 630.49 583.5 cv
629.074 574.5 622.297 567.1 613.496 564.5 cv
cp
0 0 0 rgb
f
428.881 514 mo
530.04 514 li
530.04 614 li
428.881 614 li
428.881 514 li
cp
1 1 1 rgb
f
478.954 563.4 mo
466.31 563.4 455.891 573.5 455.587 585.9 cv
502.322 585.9 li
502.019 573.5 491.6 563.4 478.954 563.4 cv
cp
0 0 0 rgb
f
478.954 541 mo
484.877 541 489.678 545.746 489.678 551.6 cv
489.678 557.454 484.877 562.2 478.954 562.2 cv
473.032 562.2 468.231 557.454 468.231 551.6 cv
468.231 545.746 473.032 541 478.954 541 cv
cp
f
301.42 514 mo
402.579 514 li
402.579 614 li
301.42 614 li
301.42 514 li
cp
1 1 1 rgb
f
374.963 583.6 mo
374.862 583.7 374.761 583.7 374.559 583.7 cv
374.559 583.7 374.559 583.7 374.457 583.7 cv
374.356 583.7 374.153 583.8 374.053 583.8 cv
374.053 583.8 li
373.951 583.8 373.749 583.9 373.648 583.9 cv
373.547 583.9 li
373.445 583.9 373.243 584 373.143 584 cv
373.041 584 li
372.939 584 372.737 584.1 372.637 584.1 cv
372.637 584.1 li
372.535 584.1 372.333 584.1 372.231 584.2 cv
372.131 584.2 li
372.029 584.2 371.827 584.2 371.726 584.2 cv
371.625 584.2 li
371.523 584.2 371.321 584.2 371.22 584.2 cv
366.264 584.2 362.217 580.2 362.217 575.3 cv
362.217 575.2 362.217 575.1 362.217 574.9 cv
362.217 574.8 li
362.217 574.7 362.217 574.6 362.217 574.6 cv
362.217 574.5 li
362.217 574.4 362.217 574.4 362.217 574.3 cv
362.217 574.2 li
362.217 574.1 362.217 574.1 362.217 574 cv
362.217 573.9 li
362.217 573.8 362.217 573.8 362.217 573.7 cv
362.217 573.6 li
362.217 573.5 362.217 573.5 362.318 573.4 cv
362.318 573.3 li
362.318 573.2 362.419 573.1 362.419 573 cv
362.419 573 362.419 573 362.419 572.9 cv
362.419 572.8 362.521 572.7 362.521 572.6 cv
362.521 572.5 li
362.521 572.4 362.622 572.3 362.622 572.3 cv
362.622 572.2 li
362.622 572.1 362.723 572.1 362.723 572 cv
362.723 572 362.723 571.9 362.824 571.9 cv
362.824 571.8 362.925 571.8 362.925 571.7 cv
362.925 571.7 362.925 571.6 363.026 571.6 cv
363.026 571.5 363.128 571.5 363.128 571.4 cv
363.128 571.4 363.128 571.3 363.229 571.3 cv
363.229 571.2 363.33 571.2 363.33 571.1 cv
363.33 571.1 363.33 571 363.431 571 cv
363.431 570.9 363.532 570.8 363.532 570.8 cv
363.532 570.8 363.532 570.8 363.532 570.7 cv
363.532 570.7 li
362.015 569.9 360.295 569.2 358.474 568.6 cv
356.451 568 354.934 566.1 354.934 563.9 cv
354.934 561.6 li
354.934 561.4 355.136 561.1 355.338 561 cv
358.271 559.7 360.699 557 361.813 553.7 cv
361.913 553.4 362.116 553.3 362.419 553.3 cv
362.419 553.3 li
363.229 553.3 364.24 551.9 364.544 550.8 cv
364.848 549.7 364.24 548.5 363.128 548.2 cv
363.128 548.2 li
362.824 548.1 362.723 547.9 362.723 547.6 cv
362.622 540.7 357.665 535.7 350.887 535.7 cv
344.211 535.7 339.254 540.7 339.052 547.5 cv
339.052 547.8 338.849 548 338.647 548.1 cv
338.849 548.1 li
338.343 548.3 337.838 548.6 337.534 549.1 cv
337.231 549.6 337.231 550.2 337.332 550.7 cv
337.737 551.9 338.849 553.3 339.659 553.2 cv
339.962 553.2 340.266 553.3 340.367 553.6 cv
341.581 556.9 343.907 559.5 346.841 560.9 cv
347.043 561 347.246 561.2 347.246 561.5 cv
347.246 563.8 li
347.246 565.9 345.829 567.9 343.806 568.5 cv
333.083 571.7 326.407 580.5 326.104 591.4 cv
376.278 591.4 li
376.278 588.6 375.772 586.1 374.963 583.6 cv
374.963 583.6 li
cp
0 0 0 rgb
f
374.659 577.8 mo
374.862 578 374.862 578.4 374.659 578.7 cv
374.559 578.8 374.356 578.9 374.255 578.9 cv
374.153 578.9 373.951 578.8 373.851 578.7 cv
371.523 576.4 li
369.197 578.7 li
369.096 578.8 368.894 578.9 368.792 578.9 cv
368.691 578.9 368.489 578.8 368.388 578.7 cv
368.186 578.5 368.186 578.1 368.388 577.8 cv
370.715 575.5 li
368.186 573.2 li
367.983 573 367.983 572.6 368.186 572.3 cv
368.388 572.1 368.792 572.1 369.096 572.3 cv
371.423 574.6 li
373.749 572.3 li
373.951 572.1 374.356 572.1 374.659 572.3 cv
374.862 572.5 374.862 572.9 374.659 573.2 cv
372.333 575.5 li
374.659 577.8 li
cp
371.423 567.9 mo
369.096 567.9 366.87 569 365.353 570.8 cv
364.24 572.2 363.734 573.8 363.734 575.5 cv
363.734 579.7 367.174 583.1 371.423 583.1 cv
372.737 583.1 373.951 582.8 375.064 582.2 cv
377.593 580.9 379.11 578.3 379.11 575.5 cv
379.11 571.3 375.671 567.9 371.423 567.9 cv
cp
f
173.96 514 mo
275.119 514 li
275.119 614 li
173.96 614 li
173.96 514 li
cp
1 1 1 rgb
f
224.034 556.7 mo
223.326 556.7 222.618 557 222.112 557.5 cv
220.999 558.6 220.999 560.3 222.112 561.3 cv
222.618 561.8 223.326 562.1 224.034 562.1 cv
224.742 562.1 225.45 561.8 225.956 561.3 cv
227.069 560.2 227.069 558.5 225.956 557.5 cv
225.45 557 224.742 556.7 224.034 556.7 cv
cp
0 0 0 rgb
f
226.866 562.2 mo
226.158 562.9 225.146 563.4 224.034 563.4 cv
224.034 563.4 li
222.921 563.4 222.011 563 221.202 562.2 cv
219.684 560.7 219.684 558.1 221.202 556.6 cv
221.91 555.9 222.921 555.4 224.034 555.4 cv
225.146 555.4 226.158 555.8 226.866 556.6 cv
228.384 558.2 228.384 560.7 226.866 562.2 cv
cp
224.034 551.1 mo
220.696 551.1 217.56 552.4 215.132 554.7 cv
212.805 557 211.49 560.2 211.49 563.5 cv
211.49 566.5 212.603 569.4 214.525 571.6 cv
215.031 570.9 215.537 570.2 216.144 569.5 cv
218.268 567.4 220.999 566.3 224.034 566.3 cv
227.069 566.3 229.8 567.4 231.924 569.5 cv
232.531 570.1 233.138 570.8 233.543 571.5 cv
235.465 569.3 236.578 566.4 236.578 563.4 cv
236.578 560.1 235.263 557 232.936 554.6 cv
230.508 552.4 227.372 551.1 224.034 551.1 cv
cp
f
224.034 567.6 mo
221.404 567.6 218.875 568.6 217.054 570.5 cv
216.447 571.1 215.84 571.8 215.436 572.6 cv
215.436 572.6 li
215.537 572.7 215.739 572.8 215.84 573 cv
215.84 573 li
215.941 573.1 216.144 573.2 216.245 573.3 cv
216.245 573.3 li
216.548 573.5 216.852 573.8 217.155 574 cv
217.155 574 li
217.357 574.1 217.458 574.2 217.661 574.3 cv
217.661 574.3 li
217.863 574.4 217.964 574.5 218.167 574.6 cv
218.167 574.6 218.167 574.6 218.268 574.6 cv
218.47 574.7 218.571 574.8 218.774 574.8 cv
218.774 574.8 218.774 574.8 218.875 574.8 cv
219.077 574.9 219.178 574.9 219.38 575 cv
219.38 575 219.38 575 219.482 575 cv
219.684 575.1 219.785 575.1 219.988 575.2 cv
219.988 575.2 219.988 575.2 220.089 575.2 cv
220.291 575.3 220.392 575.3 220.595 575.4 cv
220.595 575.4 220.595 575.4 220.696 575.4 cv
220.898 575.4 220.999 575.5 221.202 575.5 cv
221.202 575.5 221.202 575.5 221.303 575.5 cv
221.505 575.5 221.606 575.6 221.809 575.6 cv
221.809 575.6 221.809 575.6 221.91 575.6 cv
222.112 575.6 222.213 575.7 222.416 575.7 cv
222.416 575.7 222.416 575.7 222.517 575.7 cv
222.719 575.7 222.921 575.7 223.022 575.8 cv
223.022 575.8 li
223.225 575.8 223.427 575.8 223.629 575.8 cv
223.629 575.8 li
223.832 575.8 224.034 575.8 224.236 575.8 cv
224.438 575.8 224.641 575.8 224.843 575.8 cv
224.843 575.8 li
225.045 575.8 225.248 575.8 225.45 575.8 cv
225.45 575.8 li
225.652 575.8 225.855 575.8 225.956 575.7 cv
225.956 575.7 225.956 575.7 226.057 575.7 cv
226.259 575.7 226.36 575.6 226.563 575.6 cv
226.563 575.6 226.563 575.6 226.664 575.6 cv
226.866 575.6 226.967 575.5 227.17 575.5 cv
227.17 575.5 227.17 575.5 227.271 575.5 cv
227.473 575.5 227.575 575.4 227.777 575.4 cv
227.878 575.4 li
228.08 575.4 228.181 575.3 228.384 575.2 cv
228.384 575.2 228.384 575.2 228.485 575.2 cv
228.687 575.1 228.789 575.1 228.991 575 cv
228.991 575 228.991 575 229.092 575 cv
229.294 574.9 229.396 574.9 229.598 574.8 cv
229.598 574.8 229.598 574.8 229.699 574.8 cv
229.901 574.7 230.002 574.7 230.205 574.6 cv
230.205 574.6 li
230.407 574.5 230.508 574.4 230.71 574.3 cv
230.71 574.3 li
230.913 574.2 231.014 574.1 231.216 574 cv
231.216 574 li
231.418 573.9 231.52 573.8 231.722 573.7 cv
231.722 573.7 li
231.924 573.6 232.025 573.5 232.228 573.4 cv
232.228 573.4 li
232.329 573.3 232.531 573.2 232.632 573.1 cv
232.632 573.1 li
232.733 573 232.936 572.9 233.037 572.7 cv
233.037 572.7 li
232.632 571.9 232.025 571.2 231.418 570.6 cv
229.193 568.6 226.664 567.6 224.034 567.6 cv
cp
f
233.846 573.1 mo
233.846 573.1 li
231.216 575.7 227.676 577.1 224.034 577.1 cv
224.034 577.1 li
220.291 577.1 216.852 575.7 214.222 573.1 cv
214.121 573.1 li
214.121 573.1 li
211.591 570.5 210.175 567.1 210.175 563.5 cv
210.175 559.8 211.591 556.4 214.222 553.8 cv
216.852 551.2 220.291 549.8 224.034 549.8 cv
227.777 549.8 231.216 551.2 233.846 553.8 cv
236.477 556.4 237.893 559.8 237.893 563.5 cv
237.893 567.1 236.477 570.5 233.846 573.1 cv
cp
242.546 568.2 mo
242.647 567.9 242.85 567.8 243.052 567.7 cv
250.335 567 li
250.335 560 li
243.052 559.3 li
242.748 559.3 242.647 559.1 242.546 558.8 cv
242.142 557.1 241.433 555.4 240.523 554 cv
240.422 553.8 240.422 553.5 240.624 553.3 cv
245.277 547.7 li
240.219 542.7 li
234.555 547.3 li
234.352 547.5 234.049 547.5 233.846 547.4 cv
232.329 546.5 230.71 545.8 228.991 545.4 cv
228.688 545.3 228.586 545.1 228.485 544.9 cv
227.575 537.4 li
220.493 537.4 li
219.785 544.6 li
219.785 544.9 219.583 545.1 219.279 545.1 cv
217.56 545.5 215.84 546.2 214.424 547.1 cv
214.222 547.2 213.918 547.2 213.716 547 cv
208.051 542.4 li
202.993 547.4 li
207.646 553 li
207.849 553.2 207.849 553.5 207.747 553.7 cv
206.837 555.2 206.129 556.8 205.724 558.5 cv
205.623 558.8 205.421 558.9 205.218 559 cv
197.732 560 li
197.732 567 li
205.016 567.7 li
205.319 567.7 205.421 567.9 205.522 568.2 cv
205.926 569.9 206.635 571.5 207.545 573 cv
207.646 573.2 207.646 573.5 207.444 573.7 cv
202.791 579.3 li
207.849 584.3 li
213.513 579.7 li
213.716 579.5 214.019 579.5 214.222 579.6 cv
215.739 580.5 217.357 581.2 219.077 581.6 cv
219.38 581.7 219.482 581.9 219.583 582.1 cv
220.291 589.3 li
227.372 589.3 li
228.08 582.1 li
228.08 581.8 228.283 581.6 228.586 581.6 cv
230.306 581.2 231.924 580.5 233.442 579.6 cv
233.644 579.5 233.947 579.5 234.15 579.7 cv
239.814 584.3 li
244.873 579.3 li
240.219 573.7 li
240.017 573.5 240.017 573.2 240.118 573 cv
241.433 571.6 242.04 570 242.546 568.2 cv
cp
f
46.5 514 mo
147.659 514 li
147.659 614 li
46.5 614 li
46.5 514 li
cp
1 1 1 rgb
f
96.4727 547.1 mo
100.328 547.1 103.453 550.189 103.453 554 cv
103.453 557.811 100.328 560.9 96.4727 560.9 cv
92.6177 560.9 89.4927 557.811 89.4927 554 cv
89.4927 550.189 92.6177 547.1 96.4727 547.1 cv
cp
0 0 0 rgb
f
106.993 567.1 mo
102.036 567.1 li
96.9785 578 li
96.877 578.2 96.6748 578.4 96.3716 578.4 cv
96.0679 578.4 95.8657 578.3 95.7642 578 cv
90.8076 567.1 li
85.8506 567.1 li
82.6138 567.1 79.9834 569.7 79.9834 572.9 cv
79.9834 579.8 li
80.085 579.9 li
80.186 580 80.186 580 80.2871 580.1 cv
80.3882 580.2 80.3882 580.2 80.4893 580.3 cv
80.5908 580.4 80.5908 580.4 80.6919 580.5 cv
80.793 580.6 80.793 580.6 80.894 580.7 cv
80.9951 580.8 80.9951 580.8 81.0962 580.9 cv
81.1973 581 81.1973 581 81.2988 581.1 cv
81.3999 581.2 81.3999 581.2 81.501 581.3 cv
81.6021 581.4 81.6021 581.4 81.7031 581.5 cv
81.8047 581.6 81.8047 581.6 81.9058 581.7 cv
82.0068 581.8 82.1079 581.8 82.1079 581.9 cv
82.209 582 82.3101 582 82.3101 582.1 cv
82.4116 582.2 82.5127 582.2 82.5127 582.3 cv
82.6138 582.399 82.7148 582.399 82.7148 582.5 cv
82.8159 582.6 82.917 582.6 82.917 582.7 cv
83.0186 582.8 83.1196 582.8 83.1196 582.899 cv
83.2207 583 83.3218 583 83.3218 583.1 cv
83.4229 583.2 83.5244 583.2 83.5244 583.3 cv
83.6255 583.399 83.7266 583.399 83.7266 583.5 cv
83.8276 583.5 83.9287 583.6 83.9287 583.6 cv
84.0298 583.7 84.1309 583.7 84.2324 583.7 cv
84.3335 583.7 84.4346 583.8 84.4346 583.8 cv
84.5356 583.8 84.6367 583.899 84.7383 583.899 cv
84.8394 583.899 84.9404 584 84.9404 584 cv
85.0415 584 85.1426 584.1 85.2437 584.1 cv
85.3452 584.1 85.4463 584.2 85.4463 584.2 cv
85.5474 584.2 85.6484 584.3 85.7495 584.3 cv
85.8506 584.3 85.9521 584.399 85.9521 584.399 cv
86.0532 584.399 86.1543 584.5 86.2554 584.5 cv
86.3564 584.5 86.458 584.6 86.458 584.6 cv
86.5591 584.6 86.6602 584.7 86.7612 584.7 cv
86.8623 584.7 86.9634 584.8 87.0645 584.8 cv
87.166 584.8 87.2671 584.899 87.3682 584.899 cv
87.4692 584.899 87.5703 585 87.6719 585 cv
87.7729 585 87.874 585.1 87.9751 585.1 cv
88.0762 585.1 88.1777 585.2 88.2788 585.2 cv
88.3799 585.2 88.481 585.3 88.582 585.3 cv
88.6831 585.3 88.7842 585.399 88.8857 585.399 cv
88.9868 585.399 89.0879 585.5 89.189 585.5 cv
89.29 585.5 89.3916 585.6 89.4927 585.6 cv
89.5938 585.6 89.6948 585.7 89.7959 585.7 cv
89.897 585.7 89.9985 585.8 90.0996 585.8 cv
90.2007 585.8 90.3018 585.899 90.4028 585.899 cv
90.5039 585.899 90.6055 585.899 90.7065 586 cv
90.8076 586 90.9087 586 91.0098 586.1 cv
91.1113 586.1 91.2124 586.1 91.3135 586.2 cv
91.4146 586.2 91.5156 586.2 91.6167 586.3 cv
91.7178 586.3 91.8193 586.3 91.9204 586.399 cv
92.0215 586.399 92.1226 586.399 92.2236 586.5 cv
92.3252 586.5 92.4263 586.5 92.5273 586.5 cv
92.6284 586.5 92.7295 586.5 92.8306 586.5 cv
92.9321 586.5 93.0332 586.5 93.1343 586.5 cv
93.2354 586.5 93.3364 586.5 93.4375 586.5 cv
93.5391 586.5 93.6401 586.5 93.7412 586.5 cv
93.8423 586.5 93.9434 586.5 94.0449 586.5 cv
94.146 586.5 94.2471 586.5 94.3481 586.5 cv
94.4492 586.5 94.5503 586.5 94.6519 586.5 cv
94.7529 586.5 94.854 586.5 94.854 586.5 cv
94.9551 586.5 95.0562 586.5 95.1572 586.5 cv
95.2588 586.5 95.3599 586.5 95.3599 586.5 cv
95.4609 586.5 95.6631 586.5 95.7642 586.5 cv
95.8657 586.5 95.8657 586.5 95.9668 586.5 cv
96.1689 586.5 96.3716 586.5 96.5737 586.5 cv
96.7759 586.5 96.9785 586.5 97.1807 586.5 cv
97.2817 586.5 97.2817 586.5 97.3828 586.5 cv
97.4839 586.5 97.5854 586.5 97.7876 586.5 cv
97.8887 586.5 97.9897 586.5 97.9897 586.5 cv
98.0908 586.5 98.1924 586.5 98.2935 586.5 cv
98.3945 586.5 98.4956 586.5 98.5967 586.5 cv
98.6982 586.5 98.7993 586.5 98.9004 586.5 cv
99.0015 586.5 99.1025 586.5 99.2036 586.5 cv
99.3052 586.5 99.4063 586.5 99.5073 586.5 cv
99.6084 586.5 99.7095 586.5 99.8105 586.5 cv
99.9121 586.5 100.013 586.5 100.114 586.5 cv
100.215 586.5 100.316 586.5 100.417 586.5 cv
100.519 586.5 100.62 586.5 100.721 586.5 cv
100.822 586.5 100.923 586.5 101.024 586.399 cv
101.126 586.399 101.227 586.399 101.328 586.3 cv
101.429 586.3 101.53 586.3 101.632 586.2 cv
101.733 586.2 101.834 586.2 101.935 586.1 cv
102.036 586.1 102.137 586.1 102.239 586 cv
102.34 586 102.441 586 102.542 585.899 cv
102.643 585.899 102.744 585.899 102.846 585.8 cv
102.947 585.8 103.048 585.8 103.149 585.7 cv
103.25 585.7 103.351 585.6 103.453 585.6 cv
103.554 585.6 103.655 585.6 103.756 585.5 cv
103.857 585.5 103.958 585.399 104.06 585.399 cv
104.161 585.399 104.262 585.3 104.363 585.3 cv
104.464 585.3 104.565 585.2 104.667 585.2 cv
104.768 585.2 104.869 585.1 104.97 585.1 cv
105.071 585.1 105.172 585 105.273 585 cv
105.375 585 105.476 584.899 105.476 584.899 cv
105.577 584.899 105.678 584.8 105.779 584.8 cv
105.88 584.8 105.981 584.7 105.981 584.7 cv
106.083 584.7 106.184 584.6 106.285 584.6 cv
106.386 584.6 106.487 584.5 106.487 584.5 cv
106.588 584.5 106.689 584.399 106.791 584.399 cv
106.892 584.399 106.993 584.3 106.993 584.3 cv
107.094 584.3 107.195 584.2 107.296 584.2 cv
107.397 584.2 107.499 584.1 107.499 584.1 cv
107.6 584.1 107.701 584 107.802 584 cv
107.903 584 108.004 583.899 108.004 583.899 cv
108.106 583.899 108.207 583.8 108.308 583.8 cv
108.409 583.8 108.51 583.7 108.51 583.7 cv
108.611 583.7 108.713 583.6 108.814 583.6 cv
108.915 583.6 109.016 583.5 109.016 583.5 cv
109.117 583.5 109.219 583.399 109.219 583.399 cv
109.32 583.399 109.421 583.3 109.421 583.3 cv
109.522 583.2 109.623 583.2 109.623 583.1 cv
109.724 583.1 109.826 583 109.826 583 cv
109.927 582.899 110.028 582.899 110.028 582.8 cv
110.129 582.7 110.23 582.7 110.23 582.6 cv
110.331 582.5 110.433 582.5 110.433 582.399 cv
110.534 582.3 110.635 582.3 110.635 582.2 cv
110.736 582.1 110.837 582.1 110.837 582 cv
110.938 581.9 110.938 581.9 111.04 581.8 cv
111.141 581.7 111.141 581.7 111.242 581.6 cv
111.343 581.5 111.343 581.5 111.444 581.4 cv
111.545 581.3 111.545 581.3 111.646 581.2 cv
111.748 581.1 111.748 581.1 111.849 581 cv
111.95 580.9 111.95 580.9 112.051 580.8 cv
112.152 580.7 112.152 580.7 112.253 580.6 cv
112.354 580.5 112.354 580.5 112.456 580.4 cv
112.557 580.3 112.557 580.3 112.658 580.2 cv
112.759 580.1 112.759 580.1 112.86 580 cv
112.961 579.9 li
112.961 572.8 li
112.86 569.7 110.23 567.1 106.993 567.1 cv
cp
f
96.4727 562.1 mo
91.9204 562.1 88.2788 558.5 88.2788 554 cv
88.2788 549.5 91.9204 545.9 96.4727 545.9 cv
101.025 545.9 104.667 549.5 104.667 554 cv
104.667 558.5 101.025 562.1 96.4727 562.1 cv
cp
119.941 563.5 mo
119.941 550.7 109.421 540.4 96.5737 540.4 cv
83.6255 540.4 73.2061 550.8 73.2061 563.5 cv
73.2061 569 75.1279 574.3 78.7695 578.5 cv
78.7695 573 li
78.7695 569.1 82.0068 565.9 85.9521 565.9 cv
91.3135 565.9 li
91.5156 565.9 91.8193 566 91.9204 566.3 cv
96.4727 576.3 li
101.025 566.3 li
101.126 566.1 101.328 565.9 101.632 565.9 cv
106.993 565.9 li
110.938 565.9 114.175 569.1 114.175 573 cv
114.175 578.8 li
117.918 574.5 119.941 569.2 119.941 563.5 cv
cp
f
556.341 388 mo
657.5 388 li
657.5 488 li
556.341 488 li
556.341 388 li
cp
1 1 1 rgb
f
606.415 439.1 mo
594.377 439.1 584.666 448.8 584.666 460.6 cv
584.666 460.9 584.969 461.2 585.272 461.2 cv
585.576 461.2 585.88 460.9 585.88 460.6 cv
585.88 449.4 595.085 440.3 606.415 440.3 cv
617.744 440.3 626.95 449.4 626.95 460.6 cv
626.95 460.9 627.254 461.2 627.557 461.2 cv
627.86 461.2 628.164 461 628.164 460.6 cv
628.164 448.8 618.453 439.1 606.415 439.1 cv
cp
0 0 0 rgb
f
606.415 413.7 mo
611.778 413.7 616.126 417.998 616.126 423.3 cv
616.126 428.602 611.778 432.9 606.415 432.9 cv
601.052 432.9 596.703 428.602 596.703 423.3 cv
596.703 417.998 601.052 413.7 606.415 413.7 cv
cp
f
428.881 388 mo
530.04 388 li
530.04 488 li
428.881 488 li
428.881 388 li
cp
1 1 1 rgb
f
500.603 449.9 mo
493.116 449.9 li
492.813 449.9 492.51 449.6 492.51 449.3 cv
492.51 449 492.813 448.7 493.116 448.7 cv
500.603 448.7 li
500.906 448.7 501.209 449 501.209 449.3 cv
501.209 449.6 500.906 449.9 500.603 449.9 cv
cp
496.859 442.1 mo
494.634 442.1 492.51 443.1 491.094 444.8 cv
490.082 446.1 489.475 447.6 489.475 449.3 cv
489.475 453.3 492.712 456.5 496.759 456.5 cv
497.973 456.5 499.187 456.2 500.198 455.6 cv
502.524 454.3 504.042 451.9 504.042 449.2 cv
504.143 445.3 500.906 442.1 496.859 442.1 cv
cp
0 0 0 rgb
f
500.198 457.1 mo
500.097 457.1 499.995 457.2 499.895 457.2 cv
499.793 457.2 li
499.692 457.2 499.591 457.3 499.389 457.3 cv
499.389 457.3 li
499.287 457.3 499.187 457.4 499.085 457.4 cv
499.085 457.4 499.085 457.4 498.984 457.4 cv
498.883 457.4 498.781 457.5 498.579 457.5 cv
498.479 457.5 li
498.377 457.5 498.175 457.5 498.073 457.6 cv
498.073 457.6 li
497.973 457.6 497.871 457.6 497.669 457.6 cv
497.669 457.6 497.669 457.6 497.567 457.6 cv
497.467 457.6 497.365 457.6 497.163 457.6 cv
497.163 457.6 497.163 457.6 497.062 457.6 cv
496.961 457.6 496.759 457.6 496.657 457.6 cv
491.902 457.6 488.059 453.8 488.059 449.1 cv
488.059 449 488.059 448.9 488.059 448.8 cv
488.059 448.7 li
488.059 448.6 488.059 448.5 488.059 448.5 cv
488.059 448.4 li
488.059 448.3 488.059 448.3 488.059 448.2 cv
488.059 448.1 li
488.059 448 488.059 448 488.059 447.9 cv
488.059 447.8 li
488.059 447.7 488.059 447.7 488.059 447.6 cv
488.059 447.5 li
488.059 447.4 488.059 447.3 488.16 447.3 cv
488.16 447.2 li
488.16 447.1 488.261 447 488.261 446.9 cv
488.261 446.9 li
488.261 446.8 488.362 446.7 488.362 446.6 cv
488.362 446.5 li
488.362 446.4 488.463 446.4 488.463 446.3 cv
488.463 446.2 li
488.463 446.1 488.564 446.1 488.564 446 cv
488.564 446 488.564 445.9 488.666 445.9 cv
488.666 445.8 488.767 445.8 488.767 445.7 cv
488.767 445.7 488.767 445.6 488.868 445.6 cv
488.868 445.5 488.969 445.5 488.969 445.4 cv
488.969 445.4 488.969 445.3 489.07 445.3 cv
489.07 445.2 489.172 445.2 489.172 445.1 cv
489.172 445.1 489.172 445 489.272 445 cv
489.374 444.9 489.374 444.8 489.475 444.7 cv
487.958 443.9 486.44 443.2 484.721 442.7 cv
482.697 442.1 481.382 440.3 481.382 438.2 cv
481.382 436 li
481.382 435.8 481.585 435.5 481.787 435.4 cv
484.619 434.1 486.845 431.6 487.958 428.5 cv
488.059 428.2 488.261 428.1 488.564 428.1 cv
488.564 428.1 li
489.272 428.1 490.284 426.8 490.588 425.7 cv
490.892 424.6 490.284 423.5 489.272 423.2 cv
489.272 423.2 li
488.969 423.1 488.868 422.9 488.868 422.6 cv
488.767 415.9 483.811 410.6 477.64 410.6 cv
471.469 410.6 466.613 415.9 466.411 422.6 cv
466.411 422.9 466.208 423.1 466.006 423.2 cv
465.702 423.3 li
465.197 423.5 464.792 423.8 464.488 424.3 cv
464.186 424.8 464.186 425.3 464.286 425.8 cv
464.59 426.9 465.702 428.3 466.512 428.2 cv
466.815 428.2 467.119 428.3 467.22 428.6 cv
468.333 431.7 470.559 434.2 473.391 435.5 cv
473.593 435.6 473.795 435.8 473.795 436.1 cv
473.795 438.3 li
473.795 440.4 472.48 442.2 470.457 442.8 cv
460.341 445.9 453.867 454.2 453.665 464.5 cv
501.412 464.5 li
501.412 461.8 501.007 459.4 500.198 457.1 cv
500.198 457.1 li
cp
f
301.42 388 mo
402.579 388 li
402.579 488 li
301.42 488 li
301.42 388 li
cp
1 1 1 rgb
f
344.818 439.5 mo
334.297 439.5 325.699 447.9 325.294 458.1 cv
333.387 458.1 li
333.387 452.4 li
333.387 452.1 333.69 451.8 333.994 451.8 cv
334.297 451.8 334.601 452.1 334.601 452.4 cv
334.601 458.1 li
354.833 458.1 li
354.833 452.4 li
354.833 452.1 355.136 451.8 355.439 451.8 cv
355.743 451.8 356.047 452.1 356.047 452.4 cv
356.047 458.1 li
364.139 458.1 li
363.937 447.9 355.338 439.5 344.818 439.5 cv
cp
0 0 0 rgb
f
344.818 420.8 mo
349.678 420.8 353.619 424.695 353.619 429.5 cv
353.619 434.305 349.678 438.2 344.818 438.2 cv
339.957 438.2 336.017 434.305 336.017 429.5 cv
336.017 424.695 339.957 420.8 344.818 420.8 cv
cp
f
368.792 416.8 mo
363.937 416.8 359.891 419.6 359.891 423.1 cv
359.891 425.3 361.509 427.3 364.139 428.4 cv
364.442 428.5 364.645 428.9 364.442 429.2 cv
363.229 432.1 li
367.68 429.4 li
367.781 429.3 367.882 429.3 368.084 429.3 cv
368.388 429.3 368.59 429.3 368.894 429.3 cv
373.749 429.3 377.796 426.5 377.796 423 cv
377.694 419.7 373.648 416.8 368.792 416.8 cv
cp
f
173.96 388 mo
275.119 388 li
275.119 488 li
173.96 488 li
173.96 388 li
cp
1 1 1 rgb
f
227.473 449 mo
227.473 447 li
227.473 446.8 227.575 446.5 227.777 446.4 cv
230.407 445.2 232.329 441.9 233.239 439.4 cv
233.341 439.1 233.543 439 233.846 439 cv
233.846 439 li
234.453 439 235.263 437.9 235.566 436.9 cv
235.87 436 235.364 435 234.352 434.7 cv
234.352 434.7 li
234.049 434.6 233.947 434.4 233.947 434.1 cv
233.846 427.8 229.294 422.5 223.933 422.5 cv
218.672 422.5 214.019 427.8 213.918 434 cv
213.918 434.3 213.716 434.5 213.513 434.6 cv
213.21 434.7 li
212.299 435 211.793 435.9 211.996 436.9 cv
212.299 437.9 213.21 439.1 213.918 439 cv
214.222 439 214.525 439.1 214.626 439.4 cv
215.537 441.9 217.458 445.2 220.19 446.4 cv
220.392 446.5 220.595 446.7 220.595 447 cv
220.595 449 li
220.595 450.9 219.38 452.5 217.56 453.1 cv
214.121 454.1 211.085 455.9 208.658 458.2 cv
212.603 461.1 217.458 462.9 222.618 463.1 cv
222.719 463.1 li
222.921 463.1 223.022 463.1 223.225 463.1 cv
223.326 463.1 li
223.528 463.1 223.73 463.1 223.933 463.1 cv
224.135 463.1 224.337 463.1 224.54 463.1 cv
224.641 463.1 li
224.843 463.1 224.944 463.1 225.146 463.1 cv
225.248 463.1 li
230.407 462.8 235.162 461.1 239.106 458.2 cv
236.679 455.9 233.644 454.1 230.306 453.1 cv
228.688 452.5 227.473 450.9 227.473 449 cv
cp
0 0 0 rgb
f
224.034 411.9 mo
209.771 411.9 198.137 423.4 198.137 437.5 cv
198.137 445.5 201.88 452.7 207.748 457.4 cv
210.377 454.9 213.615 453 217.256 451.9 cv
218.47 451.5 219.38 450.3 219.38 449 cv
219.38 447.4 li
216.75 446 214.727 442.9 213.716 440.3 cv
212.299 440.1 211.288 438.5 210.883 437.3 cv
210.681 436.5 210.782 435.7 211.085 435 cv
211.49 434.3 211.996 433.9 212.704 433.6 cv
212.906 430.5 214.121 427.5 216.042 425.2 cv
218.167 422.7 220.999 421.3 223.933 421.3 cv
229.8 421.3 234.858 426.9 235.162 433.7 cv
236.477 434.3 237.185 435.8 236.78 437.3 cv
236.477 438.4 235.465 439.9 234.251 440.2 cv
233.239 442.8 231.216 445.9 228.586 447.3 cv
228.586 449 li
228.586 450.3 229.497 451.5 230.71 451.9 cv
234.352 453 237.589 454.9 240.219 457.5 cv
246.086 452.8 249.83 445.6 249.83 437.6 cv
249.931 423.4 238.297 411.9 224.034 411.9 cv
cp
f
46.5 388 mo
147.659 388 li
147.659 488 li
46.5 488 li
46.5 388 li
cp
1 1 1 rgb
f
104.869 446.3 mo
102.542 445.7 100.923 443.6 100.923 441.2 cv
100.923 439.2 li
92.3252 439.2 li
92.3252 441.2 li
92.3252 443.6 90.7065 445.7 88.3799 446.3 cv
78.4663 448.8 71.6885 455.6 71.3853 463.6 cv
121.762 463.6 li
121.256 455.6 114.58 448.7 104.869 446.3 cv
cp
0 0 0 rgb
f
89.5938 437.9 mo
103.655 437.9 li
105.476 437.9 107.903 436.1 109.219 433.8 cv
109.724 432.8 109.724 431.6 109.117 430.6 cv
105.981 425.6 106.184 424.6 106.386 424.2 cv
106.689 423.1 106.791 422 106.791 420.9 cv
106.487 415.8 102.34 411.7 97.1807 411.5 cv
96.9785 411.5 96.877 411.5 96.6748 411.5 cv
91.1113 411.5 86.5591 416 86.5591 421.5 cv
86.5591 422.4 86.6602 423.4 86.9634 424.3 cv
87.0645 424.7 87.3682 425.7 84.0298 430.6 cv
83.3218 431.6 83.3218 433 83.9287 434.1 cv
85.2437 436.1 87.7729 437.9 89.5938 437.9 cv
cp
f
556.341 262 mo
657.5 262 li
657.5 362 li
556.341 362 li
556.341 262 li
cp
1 1 1 rgb
f
606.921 288.3 mo
613.233 288.3 618.352 294.479 618.352 302.1 cv
618.352 309.722 613.233 315.9 606.921 315.9 cv
600.607 315.9 595.489 309.722 595.489 302.1 cv
595.489 294.479 600.607 288.3 606.921 288.3 cv
cp
0 0 0 rgb
f
620.071 310.9 mo
619.768 310.9 619.464 311.2 619.464 311.5 cv
619.464 311.8 619.768 312.1 620.071 312.1 cv
625.736 312.1 630.288 316.6 630.288 322.2 cv
630.288 329 li
630.288 331.4 628.265 333.4 625.837 333.4 cv
588.004 333.4 li
585.576 333.4 583.553 331.4 583.553 329 cv
583.553 322.2 li
583.553 316.6 588.105 312.1 593.77 312.1 cv
594.073 312.1 594.377 311.8 594.377 311.5 cv
594.377 311.2 594.073 310.9 593.77 310.9 cv
587.498 310.9 582.339 316 582.339 322.2 cv
582.339 329 li
582.339 332.1 584.868 334.6 588.004 334.6 cv
625.938 334.6 li
629.074 334.6 631.604 332.1 631.604 329 cv
631.604 322.2 li
631.604 316 626.444 310.9 620.071 310.9 cv
cp
f
428.881 262 mo
530.04 262 li
530.04 362 li
428.881 362 li
428.881 262 li
cp
1 1 1 rgb
f
478.954 284.8 mo
485.1 284.8 490.082 289.725 490.082 295.8 cv
490.082 301.875 485.1 306.8 478.954 306.8 cv
472.809 306.8 467.827 301.875 467.827 295.8 cv
467.827 289.725 472.809 284.8 478.954 284.8 cv
cp
0 0 0 rgb
f
487.553 313 mo
486.035 313 li
479.46 327.5 li
479.359 327.7 479.157 327.9 478.854 327.9 cv
478.651 327.9 478.348 327.8 478.246 327.5 cv
471.873 313 li
469.951 313 li
462.264 313 456.093 319.1 456.093 326.6 cv
456.093 338.3 li
501.614 338.3 li
501.614 326.6 li
501.614 319.1 495.342 313 487.553 313 cv
cp
f
301.42 262 mo
402.579 262 li
402.579 362 li
301.42 362 li
301.42 262 li
cp
1 1 1 rgb
f
336.017 310.3 mo
338.748 310.3 li
338.748 297.8 li
336.017 297.8 li
333.387 297.8 331.161 299.9 331.161 302.6 cv
331.161 305.5 li
331.161 308.1 333.286 310.3 336.017 310.3 cv
cp
0 0 0 rgb
f
339.962 297.1 mo
339.962 298.8 li
341.884 293.7 346.335 290.1 351.494 290.1 cv
356.451 290.1 360.699 293.4 362.723 298.2 cv
362.723 297.1 li
362.723 296.8 363.026 296.5 363.33 296.5 cv
366.466 296.5 li
366.162 289.6 360.396 284 353.315 284 cv
349.471 284 li
342.39 284 336.522 289.6 336.219 296.5 cv
339.355 296.5 li
339.659 296.5 339.962 296.8 339.962 297.1 cv
cp
f
364.038 303.6 mo
364.038 303.9 364.038 304.3 364.038 304.6 cv
364.038 304.9 364.038 305.3 364.038 305.6 cv
364.038 310.2 li
366.77 310.2 li
369.399 310.2 371.625 308.1 371.625 305.4 cv
371.625 302.5 li
371.625 299.9 369.5 297.7 366.77 297.7 cv
364.038 297.7 li
364.038 303.6 li
cp
f
375.772 335.2 mo
374.153 326.3 367.376 318.9 358.575 316.3 cv
358.373 316.2 358.171 316.1 358.171 315.8 cv
358.171 315.5 358.171 315.3 358.373 315.2 cv
361.003 312.9 362.622 309.4 362.824 305.6 cv
362.824 303.7 li
362.419 296.8 357.563 291.4 351.595 291.4 cv
345.323 291.4 340.266 297.3 340.266 304.6 cv
340.266 308.8 341.884 312.6 344.717 315.1 cv
344.919 315.3 344.919 315.5 344.919 315.7 cv
344.919 315.9 344.717 316.1 344.514 316.2 cv
335.713 318.8 328.936 326.2 327.317 335.1 cv
327.115 336 327.418 337 328.025 337.8 cv
328.632 338.6 329.542 339 330.554 339 cv
337.534 339 li
337.534 328.2 li
337.534 327.9 337.838 327.6 338.141 327.6 cv
338.445 327.6 338.748 327.9 338.748 328.2 cv
338.748 339 li
364.038 339 li
364.038 328.2 li
364.038 327.9 364.342 327.6 364.645 327.6 cv
364.948 327.6 365.252 327.9 365.252 328.2 cv
365.252 339 li
372.434 339 li
373.445 339 374.356 338.6 374.963 337.8 cv
375.671 337.1 375.975 336.1 375.772 335.2 cv
cp
f
173.96 262 mo
275.119 262 li
275.119 362 li
173.96 362 li
173.96 262 li
cp
1 1 1 rgb
f
224.135 311.9 mo
227.979 311.9 230.609 308.8 232.126 306.2 cv
233.846 303.2 234.959 299.2 234.959 296.1 cv
234.959 295.4 234.858 294.7 234.757 294 cv
234.15 294.1 233.543 294.1 232.835 294.1 cv
230.002 294.1 227.372 293.3 225.248 291.9 cv
223.225 293.2 220.696 293.8 218.065 293.8 cv
216.548 293.8 215.031 293.6 213.716 293.2 cv
213.412 294.1 213.311 295.1 213.311 296.1 cv
213.311 299.2 214.424 303.2 216.144 306.2 cv
217.762 308.8 220.291 311.9 224.135 311.9 cv
cp
0 0 0 rgb
f
224.843 322.8 mo
227.271 325 li
232.632 316.2 li
230.913 314.7 li
224.843 322.8 li
cp
f
226.462 291.1 mo
228.283 292.2 230.508 292.9 232.936 292.9 cv
233.543 292.9 234.049 292.9 234.555 292.8 cv
233.644 290 231.621 287.7 228.991 286.4 cv
228.89 288.2 227.979 289.8 226.462 291.1 cv
cp
f
227.777 286 mo
227.777 286 li
226.664 285.5 225.45 285.3 224.135 285.3 cv
219.684 285.3 215.739 288.1 214.121 292 cv
215.334 292.4 216.649 292.6 218.065 292.6 cv
223.427 292.6 227.777 289.6 227.777 286 cv
cp
f
233.644 316.9 mo
227.878 326.3 li
227.777 326.5 227.575 326.6 227.473 326.6 cv
227.372 326.6 li
227.372 326.6 li
227.372 326.6 li
227.271 326.6 li
227.271 326.6 li
227.17 326.6 li
227.17 326.6 li
227.069 326.6 li
227.069 326.6 li
227.069 326.6 226.968 326.6 226.968 326.5 cv
224.034 323.8 li
220.797 326.9 li
220.797 326.9 220.696 326.9 220.696 327 cv
220.696 327 li
220.595 327 li
220.595 327 li
220.493 327 li
220.493 327 li
220.392 327 li
220.392 327 li
220.392 327 li
220.291 327 li
220.089 327 219.886 326.9 219.785 326.7 cv
214.424 316.8 li
201.172 321.9 li
201.172 337.6 li
207.545 337.6 li
207.545 327 li
207.545 326.7 207.849 326.4 208.152 326.4 cv
208.456 326.4 208.759 326.7 208.759 327 cv
208.759 337.6 li
239.106 337.6 li
239.106 327 li
239.106 326.7 239.41 326.4 239.713 326.4 cv
240.017 326.4 240.32 326.7 240.32 327 cv
240.32 337.6 li
246.693 337.6 li
246.693 321.2 li
233.644 316.9 li
cp
f
215.436 316.3 mo
220.493 325.4 li
223.124 322.8 li
217.155 314.7 li
215.436 316.3 li
cp
f
46.5 262 mo
147.659 262 li
147.659 362 li
46.5 362 li
46.5 262 li
cp
1 1 1 rgb
f
103.756 316.3 mo
101.834 315.7 100.417 313.9 100.417 311.8 cv
100.417 309.6 li
100.417 309.4 100.519 309.1 100.721 309 cv
103.554 307.7 105.779 305.2 106.892 302.1 cv
106.993 301.8 107.195 301.7 107.499 301.7 cv
108.207 301.7 109.219 300.4 109.522 299.3 cv
109.826 298.2 109.219 297.1 108.207 296.8 cv
108.207 296.8 li
107.903 296.7 107.802 296.5 107.802 296.2 cv
107.701 289.7 102.947 285 96.5737 285 cv
90.2007 285 85.5474 289.7 85.3452 296.2 cv
85.3452 296.5 85.1426 296.7 84.9404 296.8 cv
84.6367 296.9 li
84.1309 297.1 83.7266 297.4 83.4229 297.9 cv
83.1196 298.4 83.1196 298.9 83.2207 299.4 cv
83.5244 300.5 84.6367 301.9 85.4463 301.8 cv
85.7495 301.8 86.0532 301.9 86.1543 302.2 cv
87.2671 305.3 89.4927 307.8 92.3252 309.1 cv
92.5273 309.2 92.6284 309.4 92.6284 309.7 cv
92.6284 311.9 li
92.6284 313.9 91.3135 315.8 89.29 316.4 cv
79.1743 319.3 72.8013 327.6 72.5991 338 cv
120.346 338 li
120.042 327.6 113.771 319.3 103.756 316.3 cv
cp
0 0 0 rgb
f
556.341 136 mo
657.5 136 li
657.5 236 li
556.341 236 li
556.341 136 li
cp
1 1 1 rgb
f
619.97 184.7 mo
618.453 186.6 616.53 188.1 614.406 189.2 cv
611.979 190.4 609.247 191.1 606.516 191.1 cv
603.784 191.1 601.054 190.4 598.625 189.2 cv
596.501 188.1 594.579 186.5 593.062 184.7 cv
588.813 188.5 586.386 193.9 586.386 199.6 cv
586.386 209.7 li
626.849 209.7 li
626.849 199.5 li
626.646 193.8 624.219 188.4 619.97 184.7 cv
cp
0 0 0 rgb
f
606.415 161.4 mo
612.504 161.4 617.441 166.28 617.441 172.3 cv
617.441 178.32 612.504 183.2 606.415 183.2 cv
600.325 183.2 595.389 178.32 595.389 172.3 cv
595.389 166.28 600.325 161.4 606.415 161.4 cv
cp
f
428.881 136 mo
530.04 136 li
530.04 236 li
428.881 236 li
428.881 136 li
cp
1 1 1 rgb
f
495.545 204.3 mo
495.646 204.2 495.747 204.1 495.949 204 cv
496.859 203.2 497.669 202.4 498.479 201.7 cv
498.681 201.5 498.883 201.4 499.085 201.2 cv
502.12 198.5 504.244 196.4 504.244 193.5 cv
504.244 191.3 502.423 189.6 500.299 189.5 cv
500.299 189.5 li
502.524 189.5 504.346 191.3 504.346 193.5 cv
504.346 196.4 502.221 198.5 499.187 201.2 cv
498.984 201.4 498.781 201.5 498.579 201.7 cv
497.77 202.4 496.859 203.2 496.051 204 cv
495.747 204.1 495.646 204.2 495.545 204.3 cv
495.545 204.4 495.545 204.4 495.545 204.3 cv
cp
494.938 192.6 mo
495.039 192.8 495.241 192.9 495.443 192.9 cv
495.443 192.9 li
495.241 193 495.039 192.8 494.938 192.6 cv
493.724 190.3 492.712 189.5 490.892 189.5 cv
490.892 189.5 li
492.712 189.5 493.825 190.3 494.938 192.6 cv
cp
505.458 193.5 mo
505.458 190.6 503.132 188.3 500.198 188.3 cv
497.871 188.3 496.556 189.4 495.545 191.1 cv
494.533 189.4 493.218 188.3 490.892 188.3 cv
489.576 188.3 488.362 188.8 487.351 189.6 cv
486.744 189.3 486.035 189.1 485.327 188.9 cv
484.013 188.5 483.001 187.2 483.001 185.8 cv
483.001 184.1 li
485.631 182.8 487.856 180.3 488.969 177.4 cv
490.284 177.1 491.296 175.5 491.7 174.3 cv
491.902 173.5 491.802 172.7 491.498 171.9 cv
491.194 171.3 490.688 170.8 489.98 170.5 cv
489.778 167.3 488.564 164.4 486.44 162.3 cv
484.215 160.2 481.281 159 478.044 159 cv
474.807 159 471.873 160.2 469.749 162.3 cv
467.625 164.4 466.31 167.3 466.208 170.5 cv
465.5 170.8 464.894 171.3 464.488 172 cv
464.084 172.7 463.983 173.6 464.286 174.4 cv
464.691 175.6 465.804 177.3 467.22 177.5 cv
468.434 180.5 470.559 182.9 473.29 184.2 cv
473.29 185.9 li
473.29 187.3 472.278 188.6 470.963 189 cv
470.053 189.3 469.143 189.6 468.333 189.9 cv
468.029 190 467.827 190.4 468.029 190.7 cv
468.131 191 468.535 191.2 468.839 191 cv
469.647 190.7 470.457 190.4 471.367 190.1 cv
473.29 189.5 474.604 187.8 474.604 185.8 cv
474.604 183.7 li
474.604 183.5 474.402 183.2 474.2 183.1 cv
471.57 181.9 469.345 179.5 468.333 176.5 cv
468.231 176.2 467.928 176 467.625 176.1 cv
466.917 176.2 465.905 175 465.5 173.9 cv
465.399 173.4 465.399 172.9 465.602 172.5 cv
465.804 172.1 466.208 171.7 466.714 171.6 cv
467.018 171.5 li
467.321 171.4 467.423 171.2 467.423 170.9 cv
467.523 164.7 472.076 160.2 478.044 160.2 cv
484.113 160.2 488.564 164.7 488.666 171 cv
488.666 171.3 488.868 171.5 489.07 171.6 cv
489.07 171.6 li
489.576 171.7 489.98 172.1 490.183 172.5 cv
490.386 172.9 490.486 173.4 490.284 173.9 cv
489.98 174.9 489.07 176.2 488.362 176.1 cv
488.059 176.1 487.856 176.3 487.755 176.5 cv
486.643 179.5 484.519 181.9 481.888 183.1 cv
481.686 183.2 481.585 183.4 481.585 183.7 cv
481.585 185.8 li
481.585 187.8 482.899 189.5 484.721 190.1 cv
485.227 190.3 485.732 190.4 486.238 190.6 cv
486.238 190.6 486.238 190.6 486.238 190.7 cv
486.238 190.7 486.238 190.7 486.238 190.8 cv
486.137 190.9 li
486.137 190.9 li
486.137 191 486.035 191 486.035 191.1 cv
486.035 191.1 li
486.035 191.2 485.935 191.2 485.935 191.3 cv
485.935 191.3 485.935 191.3 485.935 191.4 cv
485.935 191.4 485.935 191.5 485.833 191.5 cv
485.833 191.5 485.833 191.5 485.833 191.6 cv
485.833 191.7 485.833 191.7 485.732 191.8 cv
485.732 191.8 li
485.732 191.9 485.732 191.9 485.631 192 cv
485.631 192 485.631 192 485.631 192.1 cv
485.631 192.2 485.631 192.2 485.631 192.3 cv
485.631 192.3 485.631 192.3 485.631 192.4 cv
485.631 192.5 485.631 192.5 485.631 192.6 cv
485.631 192.6 485.631 192.6 485.631 192.7 cv
485.631 192.8 485.631 192.8 485.631 192.9 cv
485.631 192.9 li
485.631 193 485.631 193 485.631 193.1 cv
485.631 193.1 485.631 193.1 485.631 193.2 cv
485.631 193.3 485.631 193.3 485.631 193.4 cv
485.631 193.4 485.631 193.4 485.631 193.5 cv
485.631 193.6 485.631 193.7 485.631 193.7 cv
485.631 197.4 488.463 199.9 491.802 202.9 cv
492.914 203.9 494.027 204.8 495.14 205.9 cv
495.241 206 li
495.241 206 495.241 206 495.342 206 cv
495.342 206 li
495.443 206 li
495.443 206 li
495.545 206 li
495.646 206 li
495.646 206 li
495.747 206 li
495.747 206 li
495.747 206 495.747 206 495.848 206 cv
495.848 206 495.949 206 495.949 205.9 cv
496.051 205.8 496.253 205.6 496.354 205.5 cv
496.455 205.4 li
496.556 205.3 496.657 205.2 496.759 205.1 cv
496.859 205 li
496.961 204.9 497.062 204.8 497.163 204.7 cv
497.265 204.7 497.265 204.6 497.365 204.6 cv
497.467 204.5 497.567 204.4 497.567 204.4 cv
497.669 204.3 497.669 204.3 497.77 204.2 cv
497.871 204.1 497.973 204.1 497.973 204 cv
498.073 203.9 498.073 203.9 498.175 203.8 cv
498.275 203.7 498.275 203.7 498.377 203.6 cv
498.479 203.5 498.479 203.5 498.579 203.4 cv
498.681 203.3 498.681 203.3 498.781 203.2 cv
498.883 203.1 498.984 203 499.085 203 cv
499.085 203 499.085 202.9 499.187 202.9 cv
500.198 205.4 500.703 208.1 500.805 210.9 cv
455.283 210.9 li
455.385 205.6 457.205 200.8 460.645 196.9 cv
460.847 196.6 460.847 196.3 460.544 196 cv
460.24 195.8 459.835 195.8 459.633 196.1 cv
455.891 200.3 453.968 205.6 453.968 211.5 cv
453.968 211.8 454.271 212.1 454.575 212.1 cv
501.311 212.1 li
501.513 212.1 501.614 212 501.715 211.9 cv
501.816 211.8 501.918 211.6 501.918 211.5 cv
501.918 208.1 501.311 204.9 499.995 201.9 cv
503.232 199.1 505.458 196.8 505.458 193.5 cv
cp
0 0 0 rgb
f
301.42 136 mo
402.579 136 li
402.579 236 li
301.42 236 li
301.42 136 li
cp
1 1 1 rgb
f
360.699 186.5 mo
342.086 186.5 li
329.947 193.3 li
329.947 210.3 li
338.849 210.3 li
338.849 201.9 li
338.849 201.6 339.153 201.3 339.456 201.3 cv
339.76 201.3 340.063 201.6 340.063 201.9 cv
340.063 210.3 li
364.139 210.3 li
364.139 201.9 li
364.139 201.6 364.442 201.3 364.746 201.3 cv
365.05 201.3 365.353 201.6 365.353 201.9 cv
365.353 210.3 li
372.939 210.3 li
372.939 193.3 li
360.699 186.5 li
cp
0 0 0 rgb
f
352 160.8 mo
357.028 160.8 361.104 164.83 361.104 169.8 cv
361.104 174.771 357.028 178.8 352 178.8 cv
346.972 178.8 342.896 174.771 342.896 169.8 cv
342.896 164.83 346.972 160.8 352 160.8 cv
cp
f
173.96 136 mo
275.119 136 li
275.119 236 li
173.96 236 li
173.96 136 li
cp
1 1 1 rgb
f
238.398 177.6 mo
210.681 177.6 li
209.265 177.6 208.051 178.8 208.051 180.2 cv
208.051 191.7 li
208.051 193.1 209.164 194.3 210.681 194.3 cv
215.941 194.3 li
216.245 194.3 216.548 194.6 216.548 194.9 cv
216.548 210 li
216.548 211.2 217.56 212.2 218.875 212.2 cv
230.205 212.2 li
231.418 212.2 232.531 211.2 232.531 210 cv
232.531 195 li
232.531 194.7 232.733 194.4 233.138 194.4 cv
238.398 194.4 li
239.814 194.4 241.029 193.3 241.029 191.8 cv
241.029 180.3 li
241.029 178.8 239.814 177.6 238.398 177.6 cv
cp
0 0 0 rgb
f
224.54 158.6 mo
228.339 158.6 231.418 161.645 231.418 165.4 cv
231.418 169.155 228.339 172.2 224.54 172.2 cv
220.741 172.2 217.661 169.155 217.661 165.4 cv
217.661 161.645 220.741 158.6 224.54 158.6 cv
cp
f
46.5 136 mo
147.659 136 li
147.659 236 li
46.5 236 li
46.5 136 li
cp
1 1 1 rgb
f
104.869 191.2 mo
102.643 190.5 101.126 188.5 101.126 186.2 cv
101.126 184 li
101.126 183.7 101.429 183.3 101.733 183.3 cv
108.207 183.3 li
107.802 182.3 li
106.285 178.5 105.577 176.1 105.577 172.3 cv
105.577 169 li
105.577 164.7 102.036 161.1 97.6865 161.1 cv
95.4609 161.1 li
91.1113 161.1 87.5703 164.6 87.5703 169 cv
87.5703 172.5 li
87.5703 176.8 86.6602 179.8 84.9404 183.4 cv
91.7178 183.4 li
92.0215 183.4 92.3252 183.7 92.3252 184.1 cv
92.3252 186.3 li
92.3252 188.6 90.9087 190.6 88.6831 191.3 cv
77.0498 194.8 71.4863 198.5 71.2837 210 cv
121.964 210 li
121.863 204.4 120.548 200.5 117.716 197.7 cv
114.58 194.5 109.623 192.7 104.869 191.2 cv
cp
0 0 0 rgb
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 16.0.0
%%For: (Zee Abbasi) ()
%%Title: (Glyph_8-Template_898078372980.eps)
%%CreationDate: 12/9/2022 7:08 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6l`OPaE[CKfJDT8_0i7R;*UgXRedMa*%nX58^7i^;p:t>I1e!b]/Wp/]fi.M7'5PQ5p\kY&`Ngo01G8'4(V_r?F5J_tj0E.U
%+8sU9GMg16nuK77IerL4rl*^>e'[T4hKus%nrM;dkF__#+8qP0IeiipgLg,mpOT4'4rk$u<K^%+';)sbp&1B3Dnl1=p[;G%rq>*%
%G@/+3s6VK-*e*_OmG2-`r3cIajk]t0qWk?BrTi:gY@#$?T5r5@5AsoAq!.1s0AaBloCBN*IXb0r^>R+_pT9r3*T5h>O"^M1NJN&V
%qRc4WhP>'Hs.`s#g!fO=7EXY's7"4`^]*NQn(thWm]1PMs8*n5l'"@#g@_XUJ+HS<+J&Jj0$3W>q;^;;fDkL6qldc`CYnGZo$?e(
%p^UU-06_pE%4'j%X=b;]4:XIF=.1<%j6$aKD`<%@0DmohQ+O'Jq4#-EL21=:d#YfmjNlLS8<5A'aj53qG_:MCqTUs+^\mLW^L1s"
%r@I'ukP.PM7t3)[e)Y<.8'aiBpJLCJr'L[=rI'1VfDkEll[SlPh1'_Ko#oYRm9;c"s4slmqL@RqNFUe2;X\5cpGpK4J,eX)?b_'i
%GAk7m:>VRKEU!5mbBI=-r`Yn:p[dD1Qi+^uLW0;d(4Z5PrNBRX-R8<?fAGV0r8MT8L]-VD^45_j07WR3K.ktJrq`,9Du]OeJ)q^N
%]Zd+&G;^JdngaKAC/s-X;4;tsH#.repqkTFqEdu,NA9q9r^I+S?bcX+f3c5i`QqIIFM=Opn%n,kL@:bJs6@cjH:P]=qLA9fp[e%W
%QiDP^!-oUBIJ<T?^S6t-GkfJ24?2d/nlN>ZkAS+_GkVCakZdt4.Pp"b9TH=6rS%7^J+.C)`V89BF&DGG?bMX:^3Y]t5QC)RoPa>Z
%^\R_Qq;\*\J+rn#J,]/6hL5CVc^oO[mN5fnrR]Z)^3fT\55COhJ,PH.6[nt'h9S&Nn,E%Zb?*,Ir/N]00>IAGO+0ZTnso/Uhs"M0
%>lKufr?qO3a.+dr=EM[Q5c)farlaW2hgKS23$^07IX1\F?G?I%@ljXZY@#"lq>QD(Lq`oKX+-8H]TcL+Hf),il;iYe2tE,V'&22H
%ijUa(rTU(0p%#_E(@D"qm?c^"n+uY<k#M12?2j+JDuT:_f3`t'-9=7^inki'GMg)_s7WYRl>=98rnDq:qqH>`^>:M0)q^eV7t1K/
%T(=&d,160Q(Q^l\a6if`jk!jhp$;?*^\R&r?@AdP&,\RCoE49*e0oX^\,N'O?N1]UH[Nh_V!IduHN*#-UATIJ>6!/3^\ZQKhnAl!
%;(qtEroO$\?N6%rLsPro?bM`$q!M5@J+_X`rOq($q$+joh66hRjYmaGjbm'\h/E0W(5VP`nFN:Pp8+J<4ahZpnRq;tIef814hnN(
%g#'Jkqso`J$GSK]XK71^jhl+ArS$)V00fL'+$T_kJ,fGQ"97JX*pjM#icoK+*%t2^-+,SX8l*o'HCg1&Em6bNr%pX]cc]0XBr0#,
%rj4ePkOkdQf%TDf:Hnf[5-</ro6.LrC27[neXj3^rTL6D?@2"5YPt=^oOn,JIkctG7NQ]ZdDm)>4;gr8_g")2cXWi?VcX\?bUQ,P
%A'VXGGVYo:L\YaMT.f>bFf_t2elGpr2'./T1g=`YOlND\%rsdrj1--_56#H4=>-8e_`gY4A2t!Xb+nLj49gj\a,7e7H`G-LT?7+]
%YiD,lcS*<H5Frp_,CT@^r3N<sd8<)Pe/p[(ooL5uP5\>!pu+Sdr1UmMJ(l,0IXLJS0o,Dr;=-RHpd:*,eDgM\)C:58.ABggBU*5)
%=,rMD%F+H#4\IFr[q*l=/J"8d:\$l%SmR^-qPBX8&WIuer0_8e,'p+Rc`!//03W,=;"RG";l9O-);#Je=aNnliu1GcK0H8WSr2BM
%q"uqu4ed@tHV.tD0d\bSkTDllN#0u3cp]6;O`X*1AGSi=PR^<!V.Zs!W1+:^-e2%nUUHJ?T(6CFU&R]FVJ?&%5/d!8NotDpn:Ndh
%#gINQ6q?@f;*JsK+#quLKA'1Klp#`RO$;\iUrW:X*p^9Wdc9e0nbX@Lh;_$*-Tuq<s8N&Gj)<<n:IV$@V`msNA]b"&0O#iW[IT"E
%apYIU1A/bN$+u.sf!&?#$dg?Tm$9*sj?^/p6%)Y1:W?P0Zkq4=-1o;tdjV@t<3&^A.SkPl<cPf.&B$<jo&QNJT(BJB/R,tT_j$(F
%;*?.m7Pr9=2#cARY#ddXluG4<FAU_j*Hfaj5GW_u%idMH8B/TgBr'X_TAkqRJ'24!%EED=HN0l&%mBo=om"k4TCBVQg1.E5o-c^N
%4g%OsVA@Snl85o3N[1Y_F^$`j[U^#e(OKa4/rPI:bquE[*l;g;k*^ABFKh7iEY?\l'Ur3#PEY,pm&(Y.5?6*TYb3\gU$nRMh^*A4
%O)7^M^`dqL#II_Sd\H"dBXpFTD2EF_TQYtVG#5A"H>PX7Frkma"uG)3\k9@E3tRCGs/?d.Xtbpq)T1aNIoBEVk)"fdoh<%N)&)MM
%[V'aVSBg!<eUP-;DGU:h-&hkqIGfALiT&nlXbV/2&,Du]qD!ctpegE"qSsZ*j%$TWcd\_*PSYuZ4F?Tt(;o[:]dPP^o,#`FaerK$
%)4F78o^'Q'B/2l@/E6V2I?pKG%keuq4Zo!<5,FnJ:`e'6(G]/8A8Ejoem3[u+sZf+nm"ZU;_a**=NaFYIZYB<OHoR.b`O8.>GfW8
%-7aNW45^\)i47(;Vd_Y;YoneF^a_,PEKi9jYrnW$/:B#AaHC6tA84'.<JoE[BcLTu4I>mB^mY0iB)Im]haIX'g(6u?73`dH*`23s
%B2,HK:7WafI50-)BFt)CWDTs7QIHE.)"H)9O_)$G/:kpT@.&j$2:*q_;AIN\<4PN(a@,8Y4Vi=&csEHaE6&FHUkMsEM?=2tn:6te
%716^VqHq5c[U.rZ[@:OmGg>?;*Bpknbi5YB9r]'99tS_9j8\g4g?GQ6UKii6s3a*,8,ViGpdd&ei->6*O(YbE4T"@&iF<A^nY=h:
%5WJ'3L\1AhD>uEbp]lfL#EA9ZNUd=6o'(JuK1>Zh7eq[+q1D04F?NNse@RsAip$?d5<DX?0DYYFnULHA&`8XSB*'ulpUWi15FRNt
%8B,>&s%#YL1On=)q5taZH)!_L[_DN9rB:*[mM&d2EnAb<+hB6XE?k1C4l%L]n#k1;Sm&fa^\sXo1Sg(tqcuDR94$Y!cL'NeS-B8T
%\KM.OldKJcGMq,)O2hpp+2AP#i!IO4:E\tU*]s@@NKH@$Y/=>A;^BDELYqQVShr3ErU74,DB<AW]Vjpu<lum!5<hAC[?TcO<_QX?
%q.R9,%@GI$`pIc'5^Gnp=VPg1.&N-BV\U7u(<?%$j$.?U5(PF,oUB1I@l?[5lWh3YjblWu%q.,_3;,\naP39Vm[qRS*osB7OP@k_
%I``J]EF8NXncWF)aAYfY`eHo%M\op5T<QR?M3U8)f8S,XGSTUeeCFXbXf3jBN`Obo5Oa^E.Bu[s+-_BLeII,$V(49rZqk5nJVH<c
%YD*@Ldu*A73H=WS7XkB$mA`DI#sRbRq!fi>bR\GZ&PM<[U`_7gj[jPiJG[,_<Fli[LRTUeXtZc&8`g3'.F*2[n>PB3,2?i.q=:/M
%A'%M@"?]d!TJ60@eAD3=iVk^o3]*\>RF0@*KRQ8:\XUtTEuCkGo7,A5c>!Wg7e<PshH+BS#6#>gV$R11Y2.7:r'h;b!F3>=3S\C'
%,*PdJi:h&0IO\6`VRi@((6oI`GM?lS:0@.W/j8DZ+oUqi%b(Tq/\5(YO\E>b3'+f$ga[^-KWdPJC>IKU+1teNX7:Kh/@hh5N%:@g
%-J+Drn*BcaP@'SM?$n:dN*16J$imksnufr3PkPJSEQNW/\c*c(H]Tbn3@rSdgd8N'7GL-fJP/I:P>N]^Tf@MIjKgEUO%i)T&f4=`
%4F+"W,8R%!q6cE_ap9Xm";i:fesS3rQ83g,PhBJ:1PHbWH)r@r2*N6Mi#kDfWO'as)1VdHi1gO0*s"'W0l-be?i)\3W/DWdnBA]M
%"q'jarsrhZWt$D2;F[q--Z9!KB1V)$n9B[>##I"\@_':`<WFZl2Jh[aFmZ<>I=Sc^YgO2\oY[?M*mZo#i2$Fb&.Gk<+<r"@q]:5X
%X5E48%3j8>E<^H"aMrsH49iTm?s\/'#0:!b31_L^R83a4oqOZR6'*R^0?YV\@rh?q8`@NS0[d_^RI[IRn04ii'Q.?JFtrfMUahP$
%EH_fkmI1X=58!\<Yg8)+OEJ0i0Vn<!+JG\Aj@k;H)M9pc@2al5ShV5VKYa"k&5-R?,r$\9S3`(2J%3*4H$:&l]$#KB[-uGJB]&LC
%W"Tf31Sqp7(U]ONpqT+-kcK,;;XGjln^I01VJWMlkXB46H:ek%Z+N5FZgs0?L>'i1ZIb=*n.56EoDQh2SF?!3okER_O,ehaFH<9o
%P=ATc:OA.X3)g?J.S>E@e'_)/5KD0L54]C?Fai6jO'I?6dG+,/&Ur&P%T[ghc(LB"S@f2mS372qh5th7HDu*uhUgW-?*<j,'W:jR
%om7RuSI^,B7/uH=rtYS2^&ILVf"_6Err,.Dhu?'>s!n$+h-]%;_gao=^AOL6r=TS;9&B*o)b;&Vn*Vh]@_]+]3-XmYiO&b%[s[_D
%:YpTqm&O2914Aut2g<$`.+Y"SIJ</Fe-t))pd0m`^3KMFec1m.aZA-/I`[2_rtT2EDtlQegjen.p@:m!qQG$,j=8G*^A;gpd;'T%
%<FulE;.[PcO2Opr?p11jes,-6p\->KYNqZ/.GZ)BpU_c@i/eWF7EKU_=nqF=]'lr5h2/Cq9%A+:L:i$^047ELREJlOpIS?Gh(,'U
%gV)f[nWpLT+e1L7I2+Vb=4b,6X"K!QT1#I2eT*=c1])I`rfG\'Y/jrT],u@44RZJi0/u`Fp1pM:4RPY--Tc7rq_D":gnDdLH<m[p
%LdEUpD[V0Fk.3)6,ittJSk)9hNB?t,;cHEXiuW"9?'WIJ*6Z%:pMC"a>c'_lQWYsgb?aN05i1@/Gs?$9GurIC&bG0<>*L?`f[!1a
%ict1,p"UKq$6!)u)rLO@9rm-I-Jqk<Kq6f`="=.YQUl2fSto0HCt:*4]9R^N?-(/%B@X"8mcWgu[=gJFk.PH.FB@Qub,Qci\I[7K
%1CDRs7!\GG+!qGDP^;,CD^-:DVoL<Rh\@%5++F$@/!pn=>31&*=j[\VMd07=^AP/1h.jQgS+Z5Nd_5R?iRHu^MX&H,r_,)GH^4%I
%9:7?2EZ+,ObN7dugNbRPP.\N@dBUP_^.MOR/'\h&:'<=X`LE$N\dZ)*p@seRe'T,!k?U+/Tp?+;=lk:ZkE9Ppi@MlF(3B@nEbD+p
%jjhOfXEYI+j)X^4;bh6d]S[+[Npi*Q!:"k#V8_66>e5[&Kn=Ls=-MB'>01uLAfX\E-_9AFo]o9WJ8biCcC9_kL)FHE*'+ICQ]*X]
%8*5.XijXmm\N-ohG9`MK<Bg?K`<:Xp)!rf<Z+N,d=[+\4pipd9([Q^2HeQaB=e_[\LYIks'&JFlTi"2ka=qs^Pu\o;@QMSDQM2s4
%n[q;1LdH"M771H):e"`Rag.C9^%1U4"a3$jc_^G$MeRFF4%f6IL;N2$-F!+>[\B2IG]\'!I/D=kjR;Sfs6fV`9E+in=ZX9BrURSP
%?\/X$QB2V9r6(G4P!?VVju6Y[q^4!_<^1n9FV^>frr0\2^]GdVV=ap/k7GnE@$A[q*V,f+nqaRi\XceCnX*iAns-+JZ&tJ+W0g9/
%7eE"`kTdc-OdRVUZ"Ua572=!Mf+uFbM3Y8_/;`B.ONJ-_o45!J&9Be!Fru<I/bD/l-886b`/Fk+f(>3<8OPl<]M9)&[G'WT)p3]^
%L<%ej$],_OF._\p;+$iRn^J4UESWd(2imT^poEsh5Q[)0rJK`_F-VUd"21!gD,tY'>d#G)9_*VuV`fg:;8)EVGa1]5Z03G9G-1__
%.2?&G9jGm=3HQ%W`K&EKhKK[9r19[URn()]&iYHIP[d`R4(A,R76@FWA`06/6#)A.qIC.Cr.m1H#\I4Zq0JMmkolKiPq(q)/3laR
%ar2f,lB"5gPB,80`j!Z/Z9$,(JQk=$CXke:\bHPV>[*lOP%]3DOK6N]4CuKr\\;Ub\m)ITL_4+Z@EFV/>bXJoTt',d-k"T=P=_9=
%q(8TjM%(_gc<An&0ThARFla4cFI-DR%=,sMA[t)LmAH=$U03LSrB-3CH)`r/-kZL<jn][l6^HS3@8PdoPfIPOjpW#:\TU'q*o:.u
%G\jJ?o!ke;N[kO5/BT[*jkK6*nZp3Z]91_Nn-aFn0!L8eBeG[S4iAt2IKnYKmJCWNYk.4QFu-o!kih0fDF\'FHh,E/d!c:EW3!D2
%>f:`gq&@a/hb:bl4MZB613V_':(1n$RNZ0$"K'/VcB]VnC*p-jMg;]lEe.NBc?&6[7pPt0G9dB;PL6V<B*(0@D_%:PNCQJtcZa\p
%k/-@uqukJ.ak1;]TJ;0hHg7Ybl[]e_bBFTj22U$'A!hJ-`5.d3/;ct^(M<?WKWtP%ismPA<-6%A(L-`"A"q)Pk_Dj!1m*[]3<]1J
%i'G/#nl@N:W8^J?[D<"*$Ct6"PDTOn];UGe4-c8Lg3I.+c%-TtZu[c%i6RhoS3p7ElsG^V_*tB'KtJ^7L3/DR6S(,R^h-iI(;:A;
%0>arhk?;>jDMar7Mt3;l(j89Wc-^:f)G/!5,S<OWV<4\eR-LMu!_c&h*s$Gn-$U?fmHH[$oNURZ1(t$#[B-AK2NiIKqbj[Salki"
%pm7;M]P3mB;a08HM=0JEUq8!=jG]MZE+$7!p,7qR>&$&+n3,6OBUW%\;"%!R972LlA[Wshd`3%L5SWlRP0YQP<P.%]3627rKWJkX
%c=C'[LYfl7BRRP#_^XQ+9t8\lb@lfBC<FG<BXja.Jf6h0;Fc<%QGd11=:%_3Zb2!`:47i3Y%_O'=PcOsl0d&fR'^/]dHRAPYuB]N
%U1$/LFE[PWqdkT`X02gSr+Ob7IsgJ5TO;"UrjLJM#:)&A<kCnWH?&Xm6B'#EgYJhbR3;kYB4'17G&"S6U@$89AQ>m0XLkg#>d#(*
%\@q)W*oZfq:[^Rr%c<C.b]JBm>c%"WiTDQ_%sZoQWkY1EjX:t3/dO=70nZ6(TDF8:UCc)N?MWMXBp%oeF#c;(p/H#p'A0\dgPTTl
%j5/2NoDK/7mmdPni/&L!^BD$=rntqEC^U_B.l%r)[[!j0E8nlC@p?0TAYiWDgJShU1k`oX@-Se'Xk22@H<W)u4LPE)b3O=h.ktW[
%3ogq.U-=9/o[oHlr]RL(&_hm[kF9h!b#Q\O$Z/30MF!=JZpiLnI`s[V7Em=UB8!^tXN7HC&_`*XVpH3DC9;R7H-0Sb/Ol9f[["-l
%LNSSm5rPTREK=pin_gZ(9Y4Hi]#M1ORp2:pa0oMjXc+s*Ksi\aA<",h[U__5"7OP;>G;mD+D6aNaj3j&R68HrTI:.dN>C*.5"b(_
%UKXDHjb&P.:eU.tjtf,s[:j67#\hEWJH:-)BMgXiOWpHP(C2P@j&pEqHfUKqnZ3uPjtu[S<g'^<VU>mF::)a2n0OZki#@^tcGE2#
%b[)NaQ"JSjI0jOp8Y^"di@MOFXPe-N*m]-hd2jr]1+W[CRS,anU`PB0d$RPoBF@h:bf!Aj`3Z\LA_;^n-m=%sR%O-4JkLK*9.^Pe
%rHOtbY',Y7`BEU#r[cpRmDE5[\X67e)UI,8$U[3u(,7R,:*g[V3/MEV_cb?s5Vnq!*I?]#Nsj7lV(K)'eF(E;<;V")E)tao[.;t3
%IVtbFs&7=H*t_$T"ct)HPm%NP>f8DJ)(ge`LFi3U\=dAqNZi)9ei^#C+/NSh!6R?ajH(02"t.]3`?M0a^SQXc0TjAZ/-Y$*9iOi_
%)T6:I9GN7+GFh_=/4fh_J*^3lr=<lRk-Xc9$eE`6lkBJrQmYDEIEKtc8nl]7THSq)EUG3*4l@%KL%F'R`>_Jd6%Af-*sX"0Tg;a2
%(h,m9'Pr[rH&>Ns28IEM8'[F=JH"meD2GqlUe=<E2p@`<3-F?r^M60e9fsu-(nJJhj*-H_]#7A:gP^g`ah4rMch\:n8s,0bc.r2r
%2ebPP5#h0:#=QIm!@.)%+O&WlH=ZY!'.>BD=HYYo;h7Nc8=CO*fn"9:49j,"GqtJY@c92!>H_=fF//osNJLFH'?Tfrn=ofqW:GTa
%F<GKT14iWI:'!7K$"C;8)!-ko'MCe_6>8M3LgYjos7i+MoRj1l(?O1o6(&[4H-T*%K9/fMD]pHD4GP9hl&*U%cIp%.fr/\4OQJ&Q
%M*4(ZP['Jh7tNGBC@PBd#srt-E,?db#l@V&YC+J(<kK,*+*NN<(-[-rcOkcN=9KqUKT']R'Zid:'B876"lsqq"9DQCJG2_\hVqC"
%2gVKc:=I($HEJqD"X`Nga[/k0@Q+&Q("pIJFO!QA?-#t7b`OPHN-C=-cPN=n3HF!`6\J+spI*/#<^JP54J3BK_jo\%b*!Z7_[Nr@
%Qk"5/QOY%5f<c]1:c)08D[=Ckb$2W-4AgSfF,205B5_\+;c`M&G4#o='0]=To0RKB+.aBSC@K_U8F3A.*$Vc-Cs6?mB5j(QDiUlQ
%jI/P#22k%]c>K9I".@(Yn#XXc]1F:mjMRZ.8\:L';''H7p0;R]-15BR:7Z\<M-]\@9uQ44Yd\g`E-+uA?.&l-FQ.0R2]k3=5378,
%'.fEEJ^[R0S+L-Lookslr[n[/(?5Lj6MUBINo;WI$;QFk84paee^U6#g=^/XLuPUoonXsB+Y";W\>)^@+"Ne>g^TAsUi-6udh\1F
%WO:6KT]9!kRI!mU]6I=9odGV4+^g5)ld;IkG-;5m2MC>KEE^.RihS(<qEgPh;;meM$m6.6OJtmsl&hB6Ndb^kg1eEhgjO%]EDf81
%/.\I*IWSUZ?0"s\=*;V8s/<TBh9I)bqKhe0^V_]#,WTY9RlD[r8S^_\olGK2)Hhds$)^<u-S_>,S[cdG1P3kM4X1ELU;JT/V4@io
%LoV%A:L3/G.b%DK+h=JQG=,.tB?lBTQBZA-AQt,>g<RfT/:9socZOY15FfL60WTd)HugN%Q6Q'o_2a6#e&iiDB!HPA:JgMo[_seE
%c"(l]B##NMK<`\ZSmTtNf4=TS>s(CEFo.t!=[!cC:"71qEC3+[DJ0/"h$q=W@79;<L-iS0muYErKt!AF-q\\N&a3Wdo&>Bn7+'i;
%#Re4rM%KLHH!K0%31%\-=[f!db4p-5e:1hq:`"isMAUY0DDHT4Ah2'i2bkbfBqs\]U1(]!G=!Cdd18XN\qWh[:?WJ*hoM`-L0=;;
%pdZuSgc1u94-c71%F`i%j6eHD(O,?o2SX6Uk.]rklGX(c\$m<rP=9,nchbQ4nK/LEYK\a\Ll!@+rT6R3bb(ocF.?N!'25k;G#(XQ
%>0j/5W?LU.U_S)d+gJ)&Ahih]W'teTbEhA&I_)OP,1^\Cen>n]&=qW@lVEltc^;Pm1Wu4Qa$H6sECn_(\14Q,OUFPDK?4BR:D`^&
%(ed^*TX"X5,,9iP1rT<5;WXqPMS*]o_D8A5.qa9D"ptINOc_rK)Qlp[_E'@aiR;4C^s^c"&$L(F\cBiT=[>RK`.`2b?A>%4<j0^[
%1C/t!/8rbQ3Pl(+:F69uHMC%Y9hLLI8%;q9NFTg2'-G^E8F[=(GtC]l/'dp_%EZReJ]_I!,9m1E/qrVSTQh&E(\aL3JOO</C"b;L
%V?19)Ju:^@ou#$;a'M-u-mq!>fQRX)<<N:6U.7UICtHN87k*D*2eFHfmqh8*XU9HK@B#:Pm9k2*4Q`e+)4XYrFZfF7H^FjZL`pGW
%2$8Q]FFt<7?kOD370,rWL9cW4g!6.B`3*jQL:A'oG^#HrD*;/^T2s^qm7"p;K]qdr=arb21,m67*91R$L)=S)HJULs<7!!>4rOUl
%rlC[o_$HMNO^A62WYQkY?$Z4%n4K+o'[LaQF"g`%I2\K:)WPe/#0r2iin5?4P8-*ANnrN1/B:L<]`uNV!]/EHMB"QaW(MI]1/?Bd
%%>i<*D+/@4-uQ">m>!ebMMO$cJg*#6`RZ(7[R%i/n$i2mb!5Nmo<:`-8LTR<&Sol/lNj5NM*XDqCn9B;-mme(>QK9&A`!]Z')a_D
%QViQ&.</>tpnLRn7`fAEQIT9^2Q`Z`95]\e19_[pWe),QSmfnhgH4ZEK0%7?c$XPY))J<I+crX7oKTlZ$>%EU".X'G&=<9rL5Vj_
%b(*k.o5)>;n\BXUF>,t2jhi;tI.ubm/.9h+)JJAXl;t"lIUW?*Dr;7t*qI;UPj<3H1aRP7/0s<s1u.)FMQ:iCl3n7R'H-8<R`%s\
%gP^gV#gq>mZ^u2k15qWd_Z\n\p?"iW1o:UV%eFt%<&CIV3oH\7p6`d+*(dD-VhQs^F1ZN0'"_nKC>rYV[ce-6?c67E<F'(3qX*[)
%nHdOqmB`D@K7'EDYWdtP8W`)(Wu)6??mak%p^B>9Qd&*<7gMEn*!A.cG-WG=$GZHFM-nb-%5CO'jug=5^dLZGf<jG45lB3GeUAq8
%kg<o.=+CSG,iT7epu6SZPISJ]<k+k@URDI^KoR9mSn2_pW?h[D&A33A!H#J,n*D=)X4jNrc=R^WcB+kfC1L]%,d7-#mIm8_4G%_L
%pfUD]Tcd4''uM>HOD"JXN8PanGppf;,>mSGNBH-obH]K]]Q-Z"d"PCc?p'P$N4qX<(CckN`"jKKSV_(bZuf[)"I?p/Hh1;8TtI-j
%O85!Y$j,jV'nmO:.gR2s>0j<f'Kd/3hN69.(d+N7AO_!]Jai.G2"ffuGbEV,_L)B<cXJrB2:MOCJ4@@UKgk**Ge>cU`]=qX/PD"D
%P(DR0FK)rk1cu3l^hWu]%ujfE/K>g-7uUL,i=V0X9AR=U&$/k;)TP)+eQj?gE/BHu6A@_fdLOK<i7(-b.c*D@Ki:?k]Uq6+M-i-q
%.MGU+S'dR-Mtu+U;3uqNWHYfj`e/PD[nlk<&V*Z/O(YUJ#7,L2'oEVpFGqpl9PYm(6Xl/i6aiU*)YeaT'`u"ESJbm>pcDp)dFYV4
%oY0NKa056n7DjA#kj8"7:[/EuA0`W:)\>0l\<7D]q:1LY@SAN(L;k-qAO)<oMeS?X`!@KHgA@jX3=NV??%p5#)+mQ@M!b<)[QDD%
%Wp>%4Q^CpS2]'`up7nZYchS6o5QZIqWC>b@V-nhn*2Ag+0nB)K$F=eS1'"6:</'Tp"3a,!5t'*#Cnrq/hGjY$1"/\:#'N']#_:`K
%Oa3:pFRc"t9Q^`d3_BWjGH-""[0+d]gJ![f!Ta71,Oq3&HjEoL>LF,)Lf6YlG0lA>G-U$-5adEiLuNuIR,qkt"1t8Y"QX"\M(S8e
%7MoDX:A7.OHgO(12@?AfY8mTGWUK`Wg&^8*1dL63"%[j)dG(fEJ891GB"W9eYQ<`MU3;&N9Z^jI&"rgebXD+(TG.h&Gjtbt";PiS
%%q*'OZ&G/Q<^$LB^X#jS!*1r5`T,qS3$dn$H@4"kEg/LA@e&g#_@[o=55I<?&@`he$pjp*RFMJ2H4#L7d`r9+H]6>gY[[E5[1Es4
%eaI?6N;J[]DBJN32)qNUkdHqS^sk+=+ca,69F#0N:6Ke'SCqAibE/j]S\\ha]IC!u&j+Vts/1TP(NAXj,hK)O3,UB1Mat:*f$etb
%J3AY8W"D\[@aT(Hq`%V`XC.IN0^Bb.+-KH(`;]4[?66=4gCh-`.j'?i:):1hSK7EKql1tt,nRO%%HA&5ZU`@<47)**;GD*6aa#m4
%@-"&R+>@h5:iOCp77BLMjJ&Fm0QN;e]40iqW$!d7;,n/E\L8u<@cX8d+>@h5=:c<0Y:R1MjJ'"(+EC=a&.lCn"^W?m;*5C$\Yq.e
%LtllhJ]L880chQs$j%Xi<<d)h>a-*/6>kBm3(>M-%5&L.-o;3gS/3(H6nTqu/dT!92/n)9f,=cUcDqDWpc'oc#^Dlk)[&4I.h8`?
%3%m8tCn0)s">nD]%^*UWW&b2lS<k6!/hZE!0"AEi3s](r'HZTt]U'[EEH,<3&?rYm4pY7q<$,@RED_/rYdgVr#[H0F\bUfhXb$,J
%\@@aTTPT2R&%Gin"^H%e;*V9(HATK+CeN%Z[?K79CscD$h;YG9>[6(@WF7o@GP:6'YNl:3>ut:d8Si&u8,k[-/SYD@Ydc)-fZgMM
%i7(Upc5<sQfYD=80>kEh9:fR3EF[BGDEU%lIE!B">'Jg:JNcpP*af=0iY=fiZpn=W:^(@FSs_Q09k#7M?O(aAd9rfJF(ZZ$X7#2)
%MIiAFfq1;])rYnhZdj$+4`@hP_)m#9XJ\Y\UV->*IP/3hV.q8h5T.5F&LX\b6JuJV5)M";'K)7l*eYd_53A>'_djm]h,d/6U9?[[
%B]>b__PbZt%"WT9W_)PV^Un.q%hO0F53_m6rWoD:H-9]rrur5V>I.OmJ/T:qJB5cO%Nmr@Lj#/4l4S1"S7*]^Z>d)A;eK<D=#IDS
%icQY%H?U^!Z(Qd0W\1QWqX*[)rWp-BgLiZ`X#eK`_$Yn,oB&N$[qp<$eXH$B!99VPigSGafY[^T1\8/N/4kfSm`n..=,l;p`3U,k
%ka`l52c&&ThfbIGRQ!8jPBCsDPb2]&hX\A-+k:C9;>eq5)_nR(E97bDA[8cl,75kJ[mQt@-$t+6SBhX1WT`OYm49N+eVGr6=;fM\
%YKAVpdkt,:g;*.$S"6-C41]jao*bLO?GN\C;jWTBY?!1Mk!fc8?-uPkAI+B949.sGo1pUf-0>1K$7UgTdfI;4f9Y&X,AV.*ERYU1
%,ju,'?8EMdRO3=AcEl>31lMZq^2BS8-QAie`?<2Q4p4tg4o+3fWp:P.:ihnD#Bs^Y#=`!8^[9.]<ZH/)B[eo][!QeD>qCAQQ-'65
%9]CC`6YfEie],.=543-08W)E5FnFnVc3`F1rq/TX:ujc,.^/7'R^"GIDIm5Z(JP"\6["$[hPJM;1]smiW\^=hKtsj(kID9o"o9]0
%_PCB$F?L:*``R.0Re_qi8%6h=;b]leb-6!G]eHS]k!fdVYZoLP7]$NQc]Q`X;,TNCKU1r#P]K4)K[nA=KuC,4>0b&R61:_sVHG,?
%Wq/W4Ek8qt(lo6!h*1-PZ9W<bBl4gtVqmBsm$k$mJK:PmiV1lMBXEeCHM0mi$-ZjIY-5!,ZU;'FVk./QQaAP9SG>-g].XAJauitY
%-$H<GgMRjh'qO/EkYGb:6a_*tr(2Hdg!X[B%A]DKP)O-ATPJl,!qQiDI8Bgi%Ps/N/C@Nim$cm4RM\U8_E4MK:u/!o\u5r%bdb2s
%kP$'(h)sgq1I)iH3NTet-;=KH6`f(lHjA)Z`ZhfW&h2C3qNfd?EEefQDKmj1EpCgOG0N#:n,[hH#jXX16p1*f\ti!Y6g25NL2m7@
%g$OE@Z@s.2V4oif/-(*>PtpM%kSC[=a]-f`1)T_o`!hgoA;no4$oG1VSN7.8>r89>.[F.+p:T4L86A-bYNh9PI_U2U]:hC(md'"$
%pDa#nlfERh);HT5EWR7b/GQkthS?^&9M("bb@;UrBI65p",5=!%kf'oM9;+:2TC(t]N-r/Hf44S)h>Ck$8EUm`cm'b'+FO7n*XT-
%+Q!!SmRBKIa7jUn2ZgEq0+VkX1*g@o)e_0^i.lrp8EW[*B%auf7[X/aXBR<$nDcU1RjG&EDcCocpjp``$.V1p=K<Cj4Vi3XRN'^M
%A"3#11Sbu;j>C]0R-mA`-.BYqp*:9LYB>K_"ro$92"%#SQu]TN8GAn*r[@+n&Hml`\cB=Ne7.\cj5^GfPVrm8b=FR*mXb:(?X#SP
%"t)NBmq<*ST^"*dnFc4jnCd\bB,pZ[/T2C`DB1ld^>G%RqJdXCI"U=2`1bq)&-B:'gD-qU=DUn;Y:[=*]LIJ'-7_p,_.k2\PDj@@
%:i.'/)h!^nN]o'<D40#anbA1]ci]kif-oUh7;%snkh)!`is(EiC_/Mod1]0C@B_Q#RTfnQr:Gu_c?:QFW<OMHml/>R8s7%C"?1fg
%W%DH0eU"cVXpqHu6.8mS?u)DWaQe)sp1$@J<]AHQg<DV&)WU*2klt`_VG2>'=l\n>1"PD6mPbDe;(jMtYlWF3:A;K]eT9Au4PsQk
%irG6Y%^+s`F'SBL/3]Nqcq)\BFW42kV1sOJI2%c>%[2XaIY=T<=KV0?*@MaqC%nq;B2J2c)YeT%AGGAug_iSpDp"mQ[]Q/l:Ucr<
%&\Q]K%>9%#*V@Qhq$@grWeGGNSeeYTUicl;bG*b;h1X\nST^ubS\:f66eg_*Y\C]s([dd$DB:sqIdFq7lP"O=bsgn?B?W=b'ZWKU
%:d0qhK9o'S/^73E/8*21H9X$l+IBRe&C0-n6(m7IB:sA%OuJ7GnP3sDD*KoA[aMEu5gikOY\(PpF9Y,l(3uLEctX>h4G*R22a^K.
%DQ@sqJhp5K9+B7\4#5%O^>9_H]l2)``Jo47\'MN**T<ha51hYD3i!6sQ5R"9)2SdhN2Y?9qYcA1(1gS=3(]7%4k^3L*J+YaGtSUf
%*$#pH3A,Nq6cVoHUNdRCjn@Y^.!paAI3oiI"Y[F*%WXrtDlR-7%3VIJf%@Y$"u(o3GoCs$-Wmt3$$dD?$Z[ttNc9r;*!@/2]0I\:
%ICXU[]6ErC+ofg4b"kOq+ZJuiF57\sq:dR)Vp@S>VkC["J\?Y'811(rj*+OF_['RI6-=JM@P3oEcXjR.6R;]G]*?q'^&O)\\Qi20
%r!@Auhd;nbpn7-1_8#<55n'<A;A*Qd%DYdD$<pVV\Uk6:=]NIA0-i&B$%tT(=G+"$;HQ.+)[D'D":5eEa>BqVM:hMV<=h]m8ounC
%GqriR=RQn3<uP\e7W"N'0Y\]O22*iT\R0m"f#jLe!WUUK#6UJo=X"&:`\>qX`*bia!FQ\=bI2O9\k*%%*CKnH.fuG^p3D0(K!275
%"T]'MqGPO+_3+pX0EickVc/KLJl$=D\t'Hh#,"ql&ncS#d;VtNqJ`_s/8U'TJ06-a:"#j$,!0R;!@d*f.b"G8T#J)b4gWY7P/bhr
%P&Y:YN$Y#iD3IRHA(UFuL2(.k@C,eZA\CS-[JLaCR5p-)YRad`ia2n0^bjH(#)qCh3)BCZLJXX/HPL?n?0Or6/fdA3WMX(c%Yu]a
%j&#kShn*a,_6VU_/;QjNJcf.(/[Eru6@]M9620%QG+@?qm!'U_lpGf%<g-LJ+NL]^XUOqMC^45tcq=.D&9&Z5Y0&LL89/tA=M)1l
%EnNW<CWn4EC0qs.*JrNB"<8cA=sXue$u:g)rW1kIc#c%YnYdHDg!NY"Cu?`<U!&ru:cBmgm=E?668qQBX\/B9/Q@H]<Rk!FOg-<u
%*-UT+4#fs49dE>Wgb6HUG%+r+AV*>MXXT!hjUI;jEO=1+dQfVlT7.]%:mhe(jJ@t)S`YSW"HK>G6_%;uO'8?g=4CG7^fRh'GZGe"
%_0@BkY<?XI@$cK3"CW4#f++p+!PWbic-_XXKlB3$^/IWJ?U4:ip5U:gLm]%4*H4OD]12K0a\a/`jdQ^l:aEZgCUZjgWr.Xp&rJpK
%2^G^p!N.Xr.pbSr\Md%*@21&!9R:RG4t-Z]'k143'g#^'"G@I[Cn+m)bA2g)Vc1DDZh9E3\5.PajHe1(!IYO/U)_(E4LAdu;.l5j
%(e>\VDj*#uM2BYpYpnl>Hb.'^4WLn_`FVse_4dHTjf2n.,8>XZ0*WS-RcDad#6D`ML^kuo^^o>T9*@E7aaon+q(nhcc4`RQT$EhJ
%cf%%%no#Z:3l@Kp?PK-B2]4@V=,j(KI)`G3;Qn$10'W$5.S-jr-=P"?5bAS+9,7YnJ;-:?r=Ms(iIK3^CUV-H2A(`teY!(-K&D"p
%#r4T*L)Rt&R>aUH>+m#2VF80r^'J=#`$E?2@+/,KBc"8&W*5>-$oRSa4TISHqcD]b!3rc\*att_D8@FoR6Xu4)!"_1OCfAs[Hf>U
%PVh^gH/_d5""Gr2YSm5ep]H]n;MGU,=2IS"2j+Jl]af"%hMQN.-<'oQe)`h+ej>U1dqJ"i%tn.*"%'"en>X6/4L$q#9k0&T^b=I[
%.dpYufO-F1o7_PD!)!!],=6q/ArEgk<JKd2r01I-bt(rmGVo@u`Y6Cm6[['C8.20@S_l&rE\a0s@>5>NNP?#&j>%Yh5t!I9&X3k=
%ki`GFm8Mud;s#0);>%)Y\0ZA,nNNs9S%MiD.3pDb$rh5%<90jZ=MWd_UnR4)o@;$iL86%\SVP5QaX/m<0tJ"*>`?cp;(EOlJ.!ZV
%Eap2MWhjg*:eho/GlaM+5bG6fcs0F'Br^b_3jcV&e0oE""TY?N;Mg\S"KZB5d+D4#!2l't,qPE^,Ou*6ecM,Jg&gN3l_oD:mLL#U
%\S-_G!m'NWTT?"V%3gs;jS=umC7I^@Vcl.A$)hH-/(Pmph'Y`E"0`DgqJHF'i*\>Cjd<,CMVj8eG#dQQ@G#7a-]G!tc*XpDgWugX
%PUgND6m&m'nTC[a6M552lAO'BAB#sgIUc0+e@'K-_lU]tbo4+/G0AOC5`Au#*NRs<dG/-AbJN0ei^GG'\-:Zg&CAUT9ncApduNA7
%7i`MVk9BGUKk\'-@tdf\g'"Fp;K\tGB:G?'`MdE3VP3R\ONcPq:=_6Gk4TcB95ef)f),W!ie)cEPgR5U>Bt6TAOJ`-iiVt:c]YgB
%*.GB"=oS]o/I7ARZO\'^+9SLP_=nS+#Fc+FU?Y4W<1FkKI;i+LiQX7V:l5]F?u*S)V08noQ`i/i`!Q)-%P=]U:JhOnLrkV0XaDOp
%Yc<AP5s<Zt;jmA&*=SE2/\Zq3@1j9Mkcgdjr0F_93ro2sg;M&C"@-uX7U578&kq)#kjt3k9D6fGqB**pgG:UBZg3'bHr$,gX+Z'\
%S3.V7b^@I8]+hI!GjZJnBf(BI9r@VNV._\Q=X[<)W[-d:#-<o=3#e%9C.OSjHm6iNBF(^9[Fr\n\u<h)4%^>EO:J'e+YB@"6YSXF
%(^_.E$<U8g6EtNhI3.YFC:-hG!B0#tb=Tj;a"gKtAcVXjRV7Z`cAf(oqBOK-bk5T(fEYRu?C\`&0fP4kCY2DHd*;k]e!47G7]g2@
%lFOa\AY-OQKUeN>:;C[s?okc.lKr2KLD1gM38:2bCR-@[CI>Yf:tCQ^1YsG1"/+d1N8^,_"-^l2"upIj/O2mG/A!'rk!B]ANs53L
%eVmre2;%Q1NFjuJU6.Gq$j_s#bQZeD,mptPMYID2).c1#c7;"Eo%Vp'X8jT,dj?URA/lfD<13NHULV>OQp^pj_V0am_+VU'M<(tt
%-A5iJX(SA8oa]/$*7OWZ)0gL<T>mrm3bq/I5%4if:%C+AC7eoGDA<?s#+31s806TkX4[*<d'$?*J]`T2Pf3l0L.46i_0pgc!!BiL
%2H(['MlMW]S@BL"*39?4F1TCl-V0\]RB;7,>N3:1;"nHKoc^-!rp:op$'aW]DELZ]<!T7.Vob-qLU#g=LO%ip_']E@?WU3kd\$2r
%#Cp_f"A^(Va!J,<Z-,m?3`N9&geau[IRY1n4C>21_eARrc-;2eBi;GBnK>irWooMD,s<X^B-Vj<+H7o./^Aq[%GpW\e&+UQla40Z
%dXp^qgduo_Nd+Hl-`T.)cA+1a5]9b2Ls5K>C)]cm1V,4=a4;Xk"l\gL$F9-Cj)1KLKp/n6AQlN@3@2]Z$3n+^\17130F\A?DO.,:
%=e%uP5tNhjE0dp/_q&?LNoYO*0X:c2:HK&k%p?QHcB)7T,*V2uHq/T+aqN_t`o=#K(8-7oMF16B$/rt%3*?mG]-'3\7Rq[/V,9(f
%B/EJ"!`WL6W4WKeiiZ!9#\EtnIHmK;Z+Efr<)>S(>?oSGB4UR>BU(Wr9;i6]Su76a@HGa5/'Z.'Vn$$5S*(7g3@Qcjr52.uNl"'L
%+OFrFL-/6t7#61_\hJ6=2Fn_oWA>5+C4\^Q8Tk))NnEBs+sGS(oi+i[lSYQ2RWZLt<:9R8iAJ-+)7)'+jT0/,YWd4]5sY#S/db%#
%77*WR9WP<"lfHQc&XZ/mZ>pZKfo$3:8u+VX/%m9/%F`=E$C4I)C4qb=FGC(gqh-b,ON7G"JOrXWj5(99C>$ZtMf.pfl5[ORT!#'N
%c*#22m0X()D\rBh8j\I';8o2fSXS'H;R<+&\?2DnQC>C(j+@Qr;W3hMD(<qBd9"O&N(h$.aW(fMFhDNe[5'3?b2*E0U'=@Oe%hDK
%=adlgdKC1$`'@UDPab)1rD[g3@9\P'\(VNcD"/Wb.C,F^)bB2`a/QEY+`7ZuV<Ek"6BOZLC5Er9C#O4I6-b8QR1?&LcRg*^%ccjp
%DI%O='Vu>?d(K+rNJW@3LLE_Ab)dE5)!q_E!K79`.Ws"N]^hGZ7YOc"6k&uC>*@[0:s4N;]*K"oHoeM^0/-mNCo*L4KEQ?Sb".u(
%9rCD_VXusV4:X$2]50+M*s?tbEfLM@k!b'9?m2mcZ\(=l@T%_dN)]tY24go:9r8!=lOc,Y`)0[C_DfBT1,q'Y(N3TeYrsHbXU\Ca
%T=>fYE7]i4[dc,BMsL@U-K/ouEPGt*6\:&K<b+bZ3Ft?@ZR>qV+;?=J\MLS:FKdqZ?9t'Lr@#^[V^h`=@C?`AFU[TY>@:-Ca7(E6
%-!^oa,4J-pX@8.R'?n>)mhM&`0X;QqXAE,r)oe>'bVH3@Wo`5g%j3,AcrX-j".W2X(X&$Qju%QeI\P]sq*6o6HC*[=YS.4".Lm9h
%I+314/d"LGL#PH4L=Pu8/7;3<^hmF0H>aLJ49^H4_jP*bA^VUB*f6AZ"K[Qr=64:%`u$9sVn"[SDS;V(Taur!ag)$mM[2"h((^ip
%ZGG>`]s69\UV6KM)+cGXHS$(rUStk88t`/M#6Z'(^/-gNoJ[D7XGfZpL/l*qkn]Y&l#[]RMbYTU!n%(bD,i+O)6X$W_N'1[m/KUa
%k:uIBYV;arVSukDKQ<.UT'/$.F@P5L)!S9l_R\GFMHZH#>+!^M>3&:`0#Mmao\f^46fSLV$M3FGL'<(Qj`D7IOhmS!FR+K(,85[=
%)L%errD9T<L`\np0Og#m=Hu$^Yr5+R&O`>^98qra$u"pLNs49I2RXc=#cJaVN*?QQr4*AM$ALT6Vs`Jt==<u3[1@G+-\;mG6]&6`
%UZ-=hF6;Q*K8a)/_g'BJ'\Y_2!Eqo2R!geKg()9XKCmKX$iQN+/eMa.R.G&)GCajfr>F%<X@tGLj0^^F7C3-fZ6R"k$@t]42O=dX
%3[ZZU_32&l8aj)@ZKT>R\n!*n?p;Yj+!PPP=qI.d^_PgUk%/flcf)_>bH(b7)&8J\OSR<1,23a#'>Ul$QejUoIR';(&kJ(@cCA]@
%X9B6Q#]WbXU5VL%6f'3EQDTFlK%Um,2kf4*IW/$41IJIOM-u.FQ,(/P>d&$G&@%dkaI@icCMK*_beL"W*Y1m37sDtqg&0s2,Z;'Z
%!J7_QY*!8H4k3ERMTLO-,YI$;k8MPl##:Z9=N[-uD$\d9#>Ar34*=IUV&<o5P7/b3bG_YtBBl?G#n/0uBoj_SW@5pTYqp?>'VNjS
%qoqkcOWDsTllH0*&.lV6beV,.dE%bu'N^#Q:MS)sWi'Sr&KAgIo^"+]<tLU&p1]3"6CM_U62VOi_nkMSk/mJAcQRc<;Yu:J[%b*&
%XX9u]LbT8cbmS`EG'epO?3ZXW'`fqc`K'/8fcZ_B1P&^=TK'1rXu6@s"("NRAZTH-/C"Lfq[r?q8F^lXTbpYfU+e4SU#BB)Ait>$
%is7uSSuC1P]PqBjbulQop5nQ+Y8b:XE],m0J2&gd9Ia8+LGPHS_H!Z_p=me7gYL0pOjXH,`ak>Z/q@:GY9S^f!6,>\Kj),")Dj\k
%ckU_T]uIp^q/-AJ8=lUWXcCbn$a;p&>PmN_&F9>BW[/iB!DLXn<+gljY+9E`O>@rpB)-fETd"X"U(dn&U9R59EB^STX'ZW66:WH"
%`aVBX.u5%.Sp-'+c`6I78=AcGQ!iV&hkS)V*/KXuX^_)<N@For"hV?lE!:j(=;3QYmi&R%):T`Q2LQH"RdY?nd*>[N::G%Qh-ld<
%681=0hm+eP[RB7[Rbd"UQ1Qtk<P`rNI"S+n7g8MjQ=H#?F>XNt[+s/T.7E@8a(3/n5Z+7^m8/=]aU5#B?tjTX#V61C"Y`?\He?"7
%&<I@l"q7?*.2iN=lZ<p6`/(atY2qd!"d$_sIu4kOYG]$A=,rA?/8Bl$3FPJo=f7s3QCf,ADBo2_nc:N\F&Um3B;!83]W-9@\QPH3
%QthMjU^_u.C[%;V4r@1af<4$Y.pBl)hqOMc$Io077DeC7JG#q]-M?.kUOR"0Z[=7nN,:"^(Geh,ed.$UFUjD"[!S@$I!aN*Nn?*@
%%!*^RJZ/]!:i\^&ZSg6h"+sUCb-jm&93.``U;W/53Wc[WS)\E$[tAC368pOACN(/O`:th)oRR!UZe\9B=9,$41M+`fX=s2_6Hp[\
%bpPT/4]DqQEA)CQX@%LhcT#beU;CJ48%MN\"+#p%bJhia3#+_rWsj_CM&6s_%7cP%5<D+5jM+?'$lDYHc\='0`SU)gpIKkS_16IS
%>U`E02R+]UDO,H8gP-tj4H2u7IhslZa\\QV5#a-G#g6n;_UuoMdkQScTGf^B6p4i1:H-,2M/oA/<35_Bi,hZ\5sp;FhpRCq0?B9-
%k!bV-DR9Rt=#PPdcmcJkgk@qN<eNDSG@M+*2PZ!p`.\JtCk,)&d>npl6a9a'eH>Jf[Zm,GG`5E^Z@*e2/G_&G[s[*jQ0A91c6$6I
%)0MK5,JCrgYs<Wn[H"Q+hiJfdXbfENnaJ-\.:ijn)mY?p_Sg%,MO>'l)*c#C,bt]rc<cK(R@P.[kU>i7@aYn\hd,3:JHY%l/,?3h
%>=AQ,c21sSLXf$c(7X2\$9J56,[*6.?r9PV-ENOVA_$Pdpk=iJA`piB5`iPaW&#ihV`5o`D!7EDZD="6MupmR8"pB:-cEpsZ^Id"
%S"aF4M[J>a"p3h:)@J`MkfL.F9+$.ng<[I^L=$u[?g4DN/5GNH+_?T+A?rsYQeS?5%18aq&F)B(=Kfo0)+g_3@=&8mP#5[:f+oA]
%R>`TA$])8H!6OFQ)$6is")n%)`[4!OeT9ddcnf9_MAc'Ug:AViFD`'jiC&o)4[kOT35V(eQ/-6@[\]u8fE)s@F56N=H,TP!L@@kP
%^;WaHeZK-7%7(<8NF>?FD5/gT&iarJ@gJ<V,?NUdpNnKC65nLW'D_e]2!e.e[4#<+49cBKhY5IJWigOor'a]tT*A^X5[)9&QiS4]
%2$;Q*Jsa\0S-LJX+PnH=9E7q5%Q7J$]@OW=ZG(l)pf(8>`(/Bt#7KS&$#`[k.g:Wkh>4_C2!1t2Ke^V>dE*$KA3_+#BS5d^no6gO
%0:\B-bSBp^;G`$";;OaCdBMgXk3(,e^qg+M0[ACT'FB^m@^:(",G@D5'cKf=I3-s%^r6fVFU5-$VKj:l8sFqKNfB`e,a-6%.nmkg
%jWfYoP=<HhPl\c^FPc9"EP$'u;O[lXOI_l.:rpKU#_;7]d;XWiV:[=7d\_g_bq1,rLO^0QSlO*HVunVZ=iYg+.mQ.Tm[NoW0:&/]
%!,_imTOGu$:]iW@@tNKlH:,Q,7+^K%XF[&&`4+p!RM(416Z59lJsE2&"D%UrK[^M4m3d9aVUNqV@BK'Hn[ARA\s:8.UunhN<A\%b
%HLk)NWC:@jq)m&2=ZbKuc-A@sEB+tUh7\K-%>uur0$K<d/6ndB=)6=nC]Q7Z'GBY%Q;dNI0>1/Pc`d81F4LBVbe!^iM\_E"7-_US
%mgAJDV87/8;\>U,)_o/HLee;2,-fn-2k`:Vj$01;(B#H2FH#;.j-`NQd$BDJbgKJ*XBQ67GJHSIZn"t;(h<?-cl$EXDOQ/sTj!i(
%_lceF4u<fT%KoIZ5S-fT!ru3/B*]BW3\7Y!I\uKRebsN:muY"8<sc5PEs/(<5S2+eC0'jKq2a\tNJTri(_'S8X_S]+T:DT/Xu$u'
%D4P_1YRksPGc:R;EjC3ZB<+j;'laWQ->OO,)`eHU_#YfUT5HDn[P\PP*_8[i=iUXoQ`45a?6>G1.]D'BKJdpcf^jZk!oc'cA`g_+
%<_J0DN'%>b9GW'F0ilecAnlU3BOlk)$<Wo5TgW,ZdDSBR"B'DMCjBe3%!Z;5m`=4>9$i%\F406n!;PTd5Q0,Vn%X2GlarcPIJW$T
%X7+sDo%eLCdJ10DbdU&m@6n]6K!5NA]Q*IPrCK'*kShI?P7@aDdZu$S1]k&c3+>"1\.4=-<MP2f?*3n,.Kg[#/F?$@KVL%i&J<4/
%-pOoX)BcPVbCYS>">u%(*mS`;)_RZ^V!h.Cb7e@;PAQ!3f\sMWArukBmMGKhfMr]&JVH.N<mLE%_f&1/]X_J=TuJ#h8LR+V+jBfV
%bX31JLku,+UihYr>@g@RJe^fnfa+cWMn5beU[\=@=cj`D..lBscpQ98I9ZduR)DiN:G>("8Bs*iSqD_Lj*nVe\nC`4P]0"rnC@%j
%g"0f'(/Cp<mF)CrS)iP/H5[q7L_J:62'(2]bMYSXFDqR#pJ2e*F@F(r_ZS`A@F2bkdPfs8Gd2m"QLJ0<U[#r>4er'8/DV^F[crX\
%LK);Scp3F.FW0hL%7TIh/Rf$^n&s7VWFc74&)M%[64_l];_r/^&O1q)gl8IjRq*HGL0%\sN]*$lY5j;!Vic4YPR\PQoT9nh<b8'-
%O=mK'I[jp7`?<\/0YIck&`FH]j4@g&Uu:u0K%Lo,`58_a*_3W_8K/*BK^78"/Ei\tiU!qh??n>6-<gf>!5]?A4m[,cC&gF\4j*t)
%"\_rLeP#S/`lFF3*b;!D&Y*+(=p43iJ]a?nKuLMK1/MXn):f2h#XM0P=?W&S5dV)Sqi1K.bV;*:F9r.'4mZYogVq(()uuT#o]Z\2
%NmhfHQCPSJ//H=i^"jHkD_S4')<XTu!C.(GSY7(XOg5(3ocbTD8M5LS4#-X6((45Ij%qfC.E[4%^u0Zd#RVG71!21UjRG*9=/QrN
%#JbQ=<<i+-ZYGe203=&MT!UR54TW.V>ucU/;h/Nl/;alDWluSaWXpL8>N?E)*1]5ojYC5F_Tlqsm`>!V[gk591'd:NQpl%H(m>C&
%fQf)$(.5$$:4d=3!9ME-R4IWNQdu/o75HQb(%\:,0uNT.5V[)bVCnE6P6I@'MIS')!->us-?:7[2T#^X+%=3U'G<R[&#DXGq8aa=
%GTPL:PjVuD,GYI#IKuFra9ZrHj;>dE>&Q6H^Kj(AZ&`bgd2Ui]Pi,(#=_@rDO8*m&LLJUa-EjJr16!.n*Zfk1Jr-uS8q6=`/gaY/
%.g/B]#$0<]F97T<:fHu?-%_BY"sRL%k5aCcA"f`&aK2A`9Y'UAoM!#7Z83]E.0,87')5GmXKl;f\u-'FpX%1K0aNmn,iD@T!QD2B
%DdTBi>&8*ZhcoW1#?XC*ngMt!`Ej+Pl(2-bQOt'i?"$?A.8"8JS**&3Br2m#4*\Mo"hD4&`O;*EYX4Ht`B#h5=io/R*$kpt0gtFl
%S3HX*]/Ik?;4Qo>;o6R+<l7;H#m88a#mne@m^?A`)*D#DFAom(Fk%#08TB-BJOp-1!T9QYb)]Y,?EGp(^oh_p-'#(&R2ZJI*alrM
%4H\Qt<)7*%'_=+(7U?TOb$Wpl!YTpbLFPV_:,0>R_>com@O]hVPm<.Ee;q\>*42H$[b"_8c:8S0cNR,dZ%KhO)W<h^Q!LTrD@FX6
%Zbp_sM4h_3QGBJ%o2P0mibfLE(kD\9,i+kSXl6=cros@_Q5+@[S#N1;LsqO<]tlNP!<>sG"@Ekrc!e(!ir?$a-`Q.)F_R4e=t@Lm
%C?QkX:S#')4`(=-#@c;DY$8eWRADYV1@'+&.Zr?pI[j;,P^V-J9KDoO6b360EtoZg,]2S(=(D4U45XLFi#5F^9[9o=P!_c-FS^(Z
%ek^17UNq856DW(e.6u7[+kDN^S+LGH-sXF.TM=LUR"a!P)aO_Wl3+Ia_+CuW=?9R68#eNq`Nj+9+\6i*j]#09Wtj\9$U^(j7#9F.
%a_;H#LIR['1b<_'X;_Y\P+a<XJsR1Gncrh25XKY1&+TqW'4tAb"ct"^mg'Id`kel*%HGrsK#DBRR'r*!30XGb!`sBWR`;[BUNH^p
%8P-1fqPp5T:qNCr6\,1K91Gd<C,@oE0kX8*"q]gC+u.9^)Y\8RVNoF1&X!/%!t]h1>ni+Q*3An,+8<?4!X&BbUek;F(D]Atp/TId
%qh.8+Bce,3isnmd[&9bu#Xt?Cjgp3c2ab#])bLshrm;E96p]p(b8R==o*-0Y\;Qs:AoKkTVo4tBiF+:445@jE3h5I[CCV#S![Ll^
%[YtZi0J%*E3V%5LJkL?(Lpd?8W$1lP2OhtSf\QaaPWQcdmN19mh%*Q&h%[ZrcBfFUTFO"A/OG/VmS65\(?k?u]9%$FAeKK][YJ25
%(bW"a23(J8hR4(3GZn?V5PV]tr=7$(P#dVV#ZE8[b9T40b9`d.B.!QX8;3;)<l>1V-?kjA<:E4e[%8Ft*JBrW*)"k_b:&B(*X*TS
%SUlb6:1GSaCq+TInVS7IUAgJ0O2>Y<(qr1@>m_P3IL`Fq7PS?qY,>CX1"A6A9K\=KmgAC8MO3ZS-B2TNR!ZjhJ>3/H3qe#V`ck^S
%ii1ToalA]WTqK\6-=C!!V6OOq0W5>ElE!cObGeS^P4eEFEt<qUg"4E9c))OQ[bEcR?8F>:J0?WS0h(7;qOsr/#Z=fkldW'[Q3Kqq
%I$JG\,ID,?n+-fVLK*T'N00cIWfFh+d:bll)Km%Y,,24YdEu,;X*>1'q5MAOJKeA:nb2?(duXRWH5sB1d`%"pQEF,.rjHeVr?KQS
%qTY_Z1B\+K5euqD#a"J*+Q@4!dO7D"XID\i2F=JVq"5@!2A?Ysb*P_HSJ=O<;n:1rLeZ=*&3U=O<fFOT:J7K@=)"qV"@W:2l*R>d
%:+Rb44*LlXW\_</O9-WOL6p'bNI\+_cm`hp%4,,l?@:53],CAg:Fka9]C,I2K'L8(+"Up(!c2DYb_Ie.`G9t8@a"k'MXV$K4[d\[
%lWn-"(&b8F1]6A@:RVBEe$rNaWY`3dTV'>rEn+NM;&(Sp1`Iek$jplDAee6#i)2J5VJLs!SrsHhNc[+Z;4:Z8<#TuZem'bG^BXk,
%kOf),([RKN4XG7'`do[AbZ6c6=lsmt.mY&#A]:(L72XrR7SbPi+p'5uA0db-[[*:s$SDg(32Yo?V28<t?;tP=3Ft*Rf3t8Ao,+Y?
%b*V"M7Uac7*r5qbT>RM;NPc<>-5,'4F#USES@&tbOe_Vd=!=(p'j=!j2=57^HqU.sr(ULsWUhf=X%Z3&blE67_`Hu6\i&5l!m^jM
%)H.`LGfd4_VMmEl.rOV)27(H%GVj%D3t,<IPj#q!JO;"O":JA\NF3u)ls@)OS=CEuj%-sC:-;r9CP1-(1Dj1_n')#0oX0mDK\hPR
%5W8O"CdSB%.7c$d!+]!a/6!nuA;1E;Y-`:uB^V2mFc&FYDFUt5R6U\ZFPma6BPk/3]bN-0eW"3\q4pm'a<IX(SnuY;1Q6':!T@(R
%+ok&KfJn02$RcrJ*`+/%7lHMr5AN^h1_'9fg]c,PoO!?`SD9kNZ&W8"1aMb5+uCo72.NZ^'@"l)&p=Bq@T9sIf#r=c-1a0fM5ff'
%E#U&tT=.a^$d@=o)Np.nld0T-.Z[\2*eNF*4:CCqL0ql,!E5H+m'19K,Vu&Ka0V`,R,mrpiaQb)8(Tm8=Q;TK`ba&n_O6D<?lG+5
%O@j7M>]/bN4)Bqh+p.tD!;E`>%Y`Ni>e1m.&SUiO3>`d*+GB$=""Ia*.a$(@maXO4[FSkRF(9;?`GEJjU4j$Wo'=r\Q22K]L<*)O
%0L+^c.[JFf$n2geM%h7bP=0F+`S-uWc!k6B$aNMQ:'K6R@EP\)d^X)p1FNoM6]B:C1dpH5F0*-n806jU8fI#aQ>3`6-4T04>PWOc
%i$X?8_Z>LB<o^Quo/MeVDb-!.ArYW_=5I&dRC.^&m!A&`YfmBKJOE4J0<6k'?kF_?"^`pln&n(H@XC5tDhD.TUuhRn,RA'u\KE;<
%&Gue>\DGnD()*+)`?u<$-'S(c(#mD%akBn.XD<%&b.q?IJ83d*4SLWgJSh%91V/*9)XBG*>?iZf5c)S2'A,)f&$'fSQGA0,WX#2X
%p($4*\I)VOH=@^qAi)m[#C[gJ/Y\]2H?-OG?$/P;HaV:;ou<D7W`i:pp(!\ZA_/:Hq:qgul@_FG0tRh&O!YP(moYR>k8>Ouo!`/U
%alJr&j@f79TeF/,l!.&iV-0eJLN4gejiaPG2S45P&csEVC6;@D$r`Xr".(j#+P#=_<n#*FlBir4P1@WTj4]#nV6l\1$C7u$W@c#d
%CM[M:L/Jqc<;/8/hU>#4fS8/=!W19QCMLp$`/^+ZX=p[_7r^'rDBckeA9(q4$'J=K5U!o\jR":0VtBpZR3qa\p:b33&RMP<UK%ft
%QtiK9*BeF)BR"PIUsDd^rGFiJ#1WAU9uZG*D?^J[VEZVQDJ$[gZc"6u_k7!2\!!.`/*c)W)eslnK/D'WQJVVYE)o289E$lu,X:"3
%Y3R.m(Y3+jjYUS2->.4_<J!"ETk<Z,FeMJ]966_#R>fs$0ftm[\T?)[IN_C>T8qmtI*(l"jiTlU%'OL4L5;<N3O?f)#$E^1j)1D<
%)8E4M/8qP!Ss3D4-)9WX<Y-Qi(B7`UP(C>(^-uWq&`6%P?:g<L_9gIIaT.1HN&HQ('UBqXisa&[Y[(=^jKk*KaL)lNY1"WIU4M>T
%4)uoVb7NaU@"P:\k1n&.de$UUA7kl4E+\0G#UL]bDRT%@G`dOo<RtKO7<[\$?q!Om89Me;'H)Ia>fPnok3bKUD+\=?#>2O86uH$S
%'84H/."X/JO=BD\L(:a/A$9i0A9=(!k!EqiMRub0@m_:`K2<n*J3+.&Mai@.7o/q0c900Ac^):ZOBG(22@4Dr%`:>K+N&7K#.if/
%4,2a0SH0VO[Vc7f-:$_ahWs;gAmLl>:1MFlq:h25fPA$VrYS(GF)rGpVq!Wm"9ApAc-%$s0fG`Q2:mYF7qF7:6@1gG(uhX;fKB7N
%X-4S,%tJE&$g7&cSNEA4GU;KgSF@@[\R_4El>Y%Kc??j`/k8BS%*K$=c@tS/G"n/]eM62C4BZ;X`iW<*GnV2#AVR.Co,P*((c03X
%Nk$Eu<U[dDc%WH`i&Tp\BnXId3As--\ag^R%u5FK4NBk-,mAUpM[BKiRIe9;f%&`%Sn#G4_r._Rk3A?=5I2=_gY^%SNcegsVHBq=
%i@9jYg4eZkV/leX0a*0FpY\"m<9IP#N]Cp30K5G1g,VQeS^(`Po0RN2N2kW8N^8PbFG:?@MrKGfrnHQp?<OJn'Z]?13Pk6S"p6sY
%)afG'jn-Ou=eGiQfo9trX^&Aq!=rQl7]DA%'+XDqn6UYF#hqKS)_Y1i[1p9n*(SO^NNo"jLHKVrK2L2X(1Lga/[`lodC=&)]WINh
%JJk$)(d&A>XOA%G758,iN11%)SB;\VdC>2m)<3ZZF/CobV?FtRk:uD=a-,OP?rWA1+YiDn6'-.)GKX)LKeWYs(d/Z>@oacIi<7.#
%<S8qMAM7b@nNpSfXgZ@)MnqGEbbC49.kb>AEYhe%EH1F+C)&g*?&[[6c+,ME7o)TZbZ"shhF_$XX7?U&G`.KZ9rBR4&A4=sXMlm'
%g<m+*`H8=bERNk%FTa[:nZ=+HK:iEm`Yq%a%:q8/6P'DW`aWn,2!$)3@<&Wu&2/FMUu"(CckSJij)VS;S<SjV4r#*UERF_:Q)ba'
%lJ0cn3J^m?-f[m"9[\b2ST-N5A#CbF4rlA\1J9H;p<0C#;N/bB#-a)^fXErS:_\P&'a)YsM4<lt]71IkGMsnR*Hg'%`%>26e]<U;
%RoSBZDW5DFE2P&FUd]F=1)%^S1GNm?RN?Q[@e%.=B%XV5RMA\)BShk*#9U"q&iZkdE)pH#Y'BaY;IUJ+]`oc;1^l/h7S/P'2^L69
%N5W4Fo)'@K0bS^ZTQWNY<Z+$4YRs7B8S3(_pl1X/CrF[MJ>lepLgd!>d+,X^!AQtra17#B@FLGuJ$0naM,FL-'/<m]Lj_5p0tBnL
%^%)^JHm,]9Bo&en)k;U![)#Sp(D:12?_/[%X/3P$JJbJ^SD@fZikc^IEpsU',ZI6jdgtJ_>33mjS<oE(3VdXFGb\1JB+i'gM2."+
%NblAGKitf'[)7UMf6h-M7P6?04W%t?6)guqVRWH4,5?;W*(DD'D]3'b8a%-Ti@lqs,[nA!%a4(T7lS:n/;3krbU<J)6+p\G7VP:1
%Rqrq%__F($n=cfX/(H?;n&F!R_g"TtT&G=en%pi=`='Ycc8#enB@2\P[;)nn=1D'8K..WF7o0U=5GB.5atUJmdcj@XN1A`ZJm]FL
%6CV7?)nPOEnfl,CPdZkh#W=/X;[Y87a7W%VN9iIFS"*Uu<I\k&@U]:bi>$O0dg@af%2`M-3*Y@HT1O`6JVrih]a7u")O/,/qogJT
%673I:'bpKR5%,CN(HUNodear!_VcYh6/uLm#Mj+U,M@Uk!(T&=0Q8J:$ZS)`K>=s:_^:?<8plQ'$3-N@/pOd!-[`/H==KfM)FDDZ
%0./YdQsodW"F=?dre3u^oTN[&1+H]M2cPf',tn_[\R?,j>(37i&dF-<7,6:KKV:7?=LetLF6iT]2j*S12K,ArS4OPM2DjQM86?2C
%dcM-*N7cHjKFtjGo?&89Lc&XB:*L+2cd@Vk#X]OO,@;mQZ/Tj>iu3P(W#Ac0jlJi86^;]R&'dlc#3-5+Bt+q.',Q2V;g2?raY.a8
%g'I7W,eoV_a\\s2K19M=?s%;Pl^,_a`@\W4%H:cG-P>.En-6MOBnLtOR55"^0]*659ht2&^n`Z#S22#7"Xlm=%*%28/]a>7(rFD^
%QkYW\X;KgiJq40JmE-1Q;ueq0N@_Rjj.nQ8@#tq(jnCBOX9NBYVI4("qB3cXgkm9`/j-tSp(7s[+_$,##;h`Ss*Z$s%\[kFA#J:<
%BkAA`[s%0tKFs;(NjLT2Y\o7PH;FaBC1V!C&IeSj;NmXgJlApJF"d`lRBjaL+:/^;EKghs0ZE9EndC#S`&^,%@eF7N2uLHVCp9T2
%FDBF@)hK0!P*sK&5;7C/1c+oXQ/ZqObn$mXSoRI89^;C^fbC=C9=>gs'*ONlG,0CN&59?,`>V#rrkXh7&-VSHb]mD1Js@1_bfp^C
%-Uc`;(kVR]AA$'S9e9'j0Q`%WB#HYuS0=8,Ls0uXL1')D1d>R\_0B*QSRjS[lO[Gbm`Z6dF<(IHc4EZI>*S23754HT@#X_E&WBAU
%$7HaCED)b/F,")ra\_G[+d`Ne7PgSYQl@,XgPK'!UtPOpXpi,Rmcp8aQic[rirm2[-nEf$+dgKb9WpKE0S6#;Ap/o:7MdrZH"I=o
%_G99Z0a':[[-VA/\o0GP2nBV)K?HR^f?+U4W_2iT4$>:+1=M6UcLeoQGr`%t"1-\5m(hgt=]T^0"!\Z$0C7K0%!u]*M/`XX;$a,3
%EW`LVo>7JX=&R&W?j9)$,1RW=?pl5^UH,(QSjho$Je]+(\?/h1i0f"S4lZ["5`$G>&m-q;jb=?aL$i,_CP9K^cN.GcKYYMIZnZG(
%Jbe*skaN-NT9-D-$%]osMX]e_%sV7)VU5Dh'#p`"YlWm/m2%B_Lkpg@.U_mfB`*la^naJcl#e-N:':iu'MQ:\S%&"ob9sMX.c'3S
%$(.`PgtL$Vb]dE:cm\nthA5b^KaO2Er1X!sOp[QX`:KK+Qia#ohGh:Z")9ipJ2KnS7o05%qIe&''ejNpBK)gjB)N=BP'sZ5eE:;L
%>e#<pW<FCTc34WYcad[n^jIl<-9Q>M;i76]E<.kNO-$hl!COZh`J"[:;Pt'Q(GH!uei4I""l-r^bQU["-NQM&#0\Z-TFdV%(b14>
%M$k9,69OiJ2IJG\ioY'm.9jCE_?LDt'-#4$*(Wn;"&<B#)XYZO$n6$'B*5"2O[<[_VL[D(S_8Oed)gBGAAGd)_b/2Yb[&Dc`\)YS
%OKu=I$%Wc#?HWaD?j^!?IjP;!.In`R#gA<2Qt_5h&<O$o63tf[07XIM6=;A]aib!A\Z77doU-7ml\*'SCP9LU]8-j,1BI[A:%7S)
%&X_d#@g4;*E2pq)ClH1-blN9j"Julh#,_T)'RA7L'fjZd4i46PPe[VFf9oB9$29$T=trT<huJF;(kHB([]I&9!NappJQ@gf!i()"
%8@O8fO=&P<3[6=([XoO6d='h2cV4_9p3%0?$-^])=,9cVUDSONd46LsSl9J]VZc.FXXRbTc%@#nDAe!3f4+ED1BQT)XnZs,@(Zmo
%MRY>A"1`?grPf,%0ub[%KYXS?[\Hnj@$V97al7uhgo4#3`C:,,"!65s(II'@WV@S=<lq3@IVeeOS-!BW6fIR)%Tn!(Ej,R3lOjPB
%Cqr(7<k?][;[U^ml%%/An_27n$isG3$Qh&Ypi?QY0RmRIF$<tHoQB6t`oW<<Fuj$V%qYX6d=l_\B]1lE%Z*AKlSon=e"irJbqF1f
%D"C7'$pA6K:("W%e#HB_*GXc)=!h;\&#8K^g4j]'ao`%Xo";7.F8&"HGtnFrXa\^Pi$[$mK`\d=?GXne%-"EW"42ie@2!*$*bYIZ
%1?kt,12\;kHEdGGmkacXaGg"?g;<3P^7`#Jc-i$UG;Kb+8#)de/5H-/^X'R-+Z%hZ\UOZ?NV.K:8fW"$rH67mkPUm+l9)!BSVQS[
%G%UZk8OhLYLsIoVMt?nm6c\_NmW[<T8C$qP*1]R6aS$!^"u7*gaaVA1>%VaP3Z"krr?C#Kg>PBj$Q8)m'E-oLP-`I*4-Xs`_X]bs
%[cSjM_mZdhNaKfEF2(WNFu(G7iYV3)ZHcc.^>Z[kS/HdH\]Y;.YlbWEX3U1gZU,&FoY-QT*:1C!LRaJrmL-<HVIWK`^*"aQ,H-$Q
%>X^,IR=2nC`i\Rl293`--g1.kZC'8_U\,Yi='f!W\OS8&Eg>.`X,H&'^>11T09!WXQPt7cgspeYq0'd-lBTS[F`/+_`oYs7B%<l.
%UQ6(NDmr-0oCregfGlWLNPu]e*sc_6`##F'SLAi_muh^gn-')WcAabdl>J\60+#\?b^8@<,o[+>lnk,aT:KmmfmBV_.PC)$e#7kh
%]GD]?eoVdR0Be3hb'7Od>mqsE+RXs4b,mh.P1kDXBmW3ZXM(:Rl,pUt%/34=jhf]_N.AqtHf<+e#!6BL)'bU<-FP@M+]\$=#/^^3
%@8L]`*Db95s30+g.]T1.9f5(a'I-f4.!sX!JD)ej0,?RJFJnJZ&R'diG8C/L(V3p4=s-RZ[U.h;Trk\")A^:KK&']h!NQ9_lZBgT
%:ajl!DWd=%(ZGg.Y?;Sdk^"DFQ?0WD$<[.QVX('a`g\ou??/q/+ZWou,NIi.m$=9,YEqO9E$nrdH7;9>e+n;IE`[8moJ.IX*re$+
%0;C*aauEla3AfC%1A7lN,ND,CMas\[mtAC5;EA5>ibI7(p-RE4)ec7&6cNF>E8*7EL0]dnH3kK>%>Y\kC=',m+RE\4,:WH7KY<=K
%*L9Z'5ZChG]JK7:/AagORBed<8YbY6J2Ag0EX^;%#(kc,fmB#?et4M[mZbEGb@m=mg6B:(fE6<WPeDpDaZ0T;YH`\D.qLBmN^PE8
%AZl`R[1\_;pltE8/sO&J;h7$qN4l0t+q:t]!AE21jhfUW30hmFe)H*:$glko]o5Wbh'R0koeMEQFmj.CF?"+&=/YA\TP4_mW>(0:
%g4QPp*?ga6FM5=nSl`@,"p2=I\$>VSZ`L5q@HA^9=QG,tOnBp8A(uUAA.#D@E&X>fQPCdV?C?+:8O_??,O-:Jan2+$G?FgtKr,['
%U@k"/oFEIXFctTiF5oU8$ZOoW:0o&)Q/L.0H:QR8d=n6;1ug2BIblfdG1YAl&\K81rL'/lRrq!X3]V+c[TTVMo6-&T?)W$7pk5$!
%1\5dL'07d"$)0o$ddhE#)'m:fPo!_6ZoKQgpYHtOb/rD?@+FRmZ&;1S&c`^?iTB+7?Pn(!drd6.aNJ>kS:ck=HsNrb06Fk2QF#E`
%drsAUZKS'FN42uqjFrL.DWoG69,a[M#(nRM%JUD0rBeF1p^>6PSVNPY.-2'u]V(8gd,r3^Mcs!3lUJbGRPo0r?3#!'CL8K7+bV6$
%'YJtc1hFt/@g\$Q;<[C&r)PZoiWQor.an'5''lPMoXcNQ-\$Y$K")!QoXcNQ_)cpOhZ\oCY2nZUD8rHn>S'^H7"XJUpF_,d8l!(S
%D"Vf1?//"+ikEJV"7M7pSe:E8^H"2K&KD0IEP\+W#EQKu4p%OdE0*Uc@%=hWYluT.KlVC*LZF]3bI2A1`a'^Q8\B6og]\1R"eWfD
%bG(`=Jo2A1Cde*ECqC&)%^+W!Z#chs`G`Ld0^UV?!'B#)G!0m77(Xjj!kZC)B,@D'oOEkmG8\Z"Zg9<&+(%Q^OcIdSi\>7"I!6:-
%12>oj-/#,Z*74uh8u+Vp2+Vm.6\gYJ+kbtcl3K+*aY&m/@rEX5DXqWnc5aI.0B:]=J<W:DZ-..kKK:_*].eJWBP=g_eiWVB2i_0:
%(U#@00'tL`r*^SW9Sd.XEfSsGp>$46I:A5mAK1GM.<Z<fAV#IillsmDFW9t2Ykf_Wgt`O37IiEJh1[&(5jN'B>o2ZYMfU&nAJ(i/
%jeUI5:64^o\Jgbq;=3(&L;h4H9lGgS]r&>"j;Q\HV),A/%=(8IS62+Q'D('UXNP"FeN7Yl>Xf-):27GQ]JUCn#Hoa3@oB!`3jVm>
%0$oTc=Vip8?-qk7_OZ-/[(8AP'gY<ib6Q(6A$ii;qa.@,+>W0lN)j$GRV*(5?09R;<cP"eA_`jR$P#\a*K!p@?<u:/=o!&5-((pE
%EXGuU"TDPTAZWK@HVkF5c)SsV_Y\CTh;m<\33+Z)(8,+iXLaX:XrFDo"k5ELW_5L1RY_EQ/knah]<gch^rg,!eV/P3q?s>VI8m?Z
%b,S)?`mUNE?6<?\C1_4elI'=a]5q.]%!%R^3304E4%m8mlB8CS9G,RMWsSRNK2i_U!@jQHX"Kf=RZcg5U'(qbgn_NM:f(0#=`k%[
%5UacXFX\`]U5LE;:TGBM3me$0d`#:*XLdI%9H#f/9"gS`/R;J$!R3l/d7JJKqjX'R(W[VO6S=n?i&5*=4IX+/+HqMAl6>o<O`DVq
%Kp:?l.]G%fQtSK>W@kJE$pe/iFiagmn't!P+eXt\Uq.6?&:PeQ,rZGS&r]dkacb_U3iOaXA&6KZ<&Z\@m$q#k-,F[rS5`SaNX$Zu
%M,]g%1mZo6W@mYOWnBX8?*NUVHf<2J$_^nO3->o1JSGWh>m_.,\T$h#8g67Xe7CGM"QS!CcUg&!fUTND8Lb1*EU)NsP=NhWF[L-,
%eD4$_e4'*?E]@3>,(M`#/#P!T\MVd0=]Q?[.<X\FR8MRi:8jXQR0L`c&aIBO]Fa?`+cH2?-e)_020.kTW6:^"D0`>tK9S!rk]BQE
%UB\3I$$DXQe).dOK>YFg2eZC6I43\OaY3-b32.3Q>nW,S[6-=S?(?Pn$$@+*RMS.nZ8Nb,EBlm(MNSB-T.];mA[]ohN)VYWN)(8)
%4&Us]V[EM7UC3\HUeDC\T.U;Udk1B;.6+]0HC?lte$m>qbHro'>0a&SbT0=[YDg'fhVH9Fa^Rk;KV;VpP#.M71X`S!$$D):aNAS-
%Eua&H-CToj(B]b'KO#I<+XYf^0^;Pf0,'S]PRs('U"!Y7FW/.ILDb&\/DkSB>t>eI4&bFm/7hl5.!8*-2MdiCI[4NGSnCgS&-f$b
%f.'*]SPtk.CmJ:'?&3WF)6#4kN#i,$/t3F8F!9)1Qs\!-Fd7r'(sT3=XCbIc=&N=5!=ts;lFOEIeK.#V9BHJ5*1TTC)'NT`\!-*_
%8<e?\A'<sJi3T%IFm8Rp/R6#FSs)!ci52G)V8dD+9h^e@`V=Ns)<O/7$QuXK.Zqc.:04Le;m>N'd&3f(A@`$epNj`RM]``"Oc;uB
%.uZTXFJj-Z>`!Pk366;ZN4;,u+=cVD\o>QlHdd[=(ER!LT/2#,$kciuZ!KG4;(RRX#c#bc7OuXWU("VhNODfi"M+T"K;QHZEtM_G
%NNlF2Jf5J^Pm`!mKThq;b+=Mni%]jG(PMu?)7iZ-!f2m%&uX$omtDI.1$@OT.\\T?\YL@6\`(cCJD(*D&U+Hc0qF^G^Dg*,Yc!aE
%(GPC]-",8@?k$@c94u[X@"u`BY3NGHec/C4><96(5P+!Rg;n4kN%UI/p)PI3E^;chO*O*Y>D`IuJh%YQpI7n`Ws4+T[8^5)>Y"mM
%Fe[[.*=_T%aXmeQQ#]6U>F&`/ac_Q%/X]FPbTIYGh(d1p\^dYYS0F;>[P`X[(GPo9aCg*06p4)7j3b*K#U#'I[i8*/_N#!I@8]RT
%Mj'GR9JnGL(mDk*)RgSRbF*@>m9]"p\BS*M'/;,415t-10eNGG(plbj$\NJq.k**fY0=?m-giZt+/d$tXFe(tiZ^sdQ0jlb\ANQV
%S.6@uJBZuhL'rMAo5R6SMfg,3g;\gS-lECLc;_;u7]batKSt&igoc>t&ZA*.pVMQ@n/eg$:4p`;]$ah=J_67Ui51'"D&3GT_"G9R
%B>EoSUMqBlj^&a7"oiER`u=nn@7>COZJS^C+*7!Wd'FopBABtu"QAO@^*P^.Y/,M?CuZrl^24(e]^XcE=HpRdW*p<]oGjsAXm!J#
%(Y7>U2$Ha$$aYcGm9(VD`F.I<nk==%I)IGLGRFuq9I(jq`G5H;oYPe[iN[^Uh1@5".VsoW[tVAZF="PAZ5Vo;/M(2R:3DJe),GEf
%]#?`k'_XqhgO`k46nuV''_33-/'T[2T3)K!73s8GlJa(uW37C&n!W4%Pn1D/`N?G-X^JY-lElU&^MWCBM<a`Ap^K\.B=GkKUTQ,X
%D+5l7BUd`le5!Tgq;CDQQ#luBCeG[o'8"jPL_JhhS_+]&2_.,[k-]&6QT@%,/XB2"P0Rg#d*n\!\=:ukZ0"5e:><pse4jWbFf$DK
%`+[ni==>#'P:`h)BT#/Re!82oUBu[3Ze5BiMY)b3fj`q$,G3(o_)VP#L3)#l8uYrl/4>!ijDi@R$eS807(.mPk[d;g_]<#U^7hfs
%5m@OS@'MRCClm9N\m3DfLFkh2V/?WEX=RorfHTXMq@.p+@btm<qHAh^mMB<u[:14W/K-d7f+p5cS@^]6qX)e?XFnNC3]#@h$dqQ7
%f"qG2;k_[kU*f.r\#d!qqQE1gMko1&"rNRSSKFSWc^_BMW>Hp@CD!PQ4h_ZtEj.)sD9u!\M`AH!J/`8U"M+tk0d/]cN^(2X%])51
%h$qe9^__M@F3[tPXE)HeAC@>qb\kF(GkV2_3ajV?`IVrI^07g$e9.UgKn=nb@;N?rW&:-I(;Io&;UmZu_E1[J;O.U`4&ITo=TDMe
%o@14GKJ"=9"ud95'BbtkTo(/>2G<F2Odi0Yr\n2:eolWM#Tiu!U)$).:M6V3[^gu%e:PnCs17H/&O=Crkj5[T#@d2H)Bk5u/D#TF
%G#$jNeu<ASPLV*pa4+qIKpWWQ4BNg\lr.>q:.sof0<DN5FAgh$bHS=tNikS1Kp*;1d@rTW$>7d`Xu"MGmkZ,h$_<?E1qK^l*UPOQ
%M@1@T+LG[;0eupOb9==\A@1EdbN$`64)EeaVkP2dcuJ&J%.o_'Q&$2LY/XgAaP&JnG,M#;DU/VjK7t(L]V;)k7QL7UC_g3//CTl:
%FrI'8;p\:oMTH`LD&;:As"#CjXZHD3PHW,3`>)76Zh6XKlU4=i4ZfQY'BIZLdq7X*H$1r9W^&BkdpfSC'@5Z^ee%N:SY\$bTUc6r
%0)ud53f?<FQu*YffsNc-A&TAnI7J>'=dHY[/)r0?R1NtN_HDg^/Jp1U=l4&l8iJi&1=OogQTI<)2ToR:2K-*;ND_a'AoUJEDk:)G
%hlp#K68ON*,e:uPhj0R>36>uYEMf+oT%#TOfkG.AkEGSlIc6UsSl>H#Q!SV\I=8pM40!;:?.``#'>:skfcDoH)Rh8+d^.e,b7<8?
%4d]eP37>tsQ6"!uedVcR3-N!<'&=S:bDW^LMEhPO0;Po0,0[kPgCGqk[6isdS/GnI:^L^FZ/>bKl,[&qFQJ]4d&,Y'Rk2]tS5t[d
%8@=>Z/!k'X?;>?:Z3995hj[9ToY)?u:1>EfP_oYa[J/pELrNLo/N8/*O_k;=#S("uf3/Odg#7V((BR`M1kD0@r`FJGed?Q,,cEPS
%]"i]d4K97s+:F?J<Y/;Na4@=rRp;q&/"Ca[U;d"a5c`"d3OThcnNn4R9b[3F/bS9E-`;s;2.I[k\Y8X#f%Al@23tjt&JtP6/'?KE
%_PPqgaJ9mDa`d8Zg5s2gSd>Mn'Ef$eE3lNAHHkMEegjF:fta#W"O*pIX(fjRZ9gU>)bkOR;8>EJ4Qq(cOVrXX7IG/)@8I#C&-g"j
%JqUWk,q_EHL-^#D>I7Gcl-oflAMV0@eY00]I._2IPpgMDZH-K;C&<D547fm=Nb34EJ"Q%Q^4QPH#%M'7`B0PD[TRFZ``iQY+<r.7
%&kVFcs%`NmWb2OB%#GuVd?AVa.!h]RR9ln/\]^$.Ag64OJKmme)&i[L<ZVV6!^VgOR7X<@F/`-*E0(o1Nrnt:O@t[Vg8f.uMF82D
%dh'iafO:83m7Z^n8UqM*58XebP.5\t;Gd?8p&enu9/RADm8BiRJm_S6JOcRqK.dtb;-93GeC4ZS&Q&S^K"9dueJ2)C9tWaLZ.Beg
%#!jJ!VO,Q8S!36o7hL)51oW[4amL?%Q>`dJm@ntIV4,@_L;o107BIn)rt@oES@uG0P:,?dC,*O:6kV8CicgH5pC%`LdYLQ/ql$M/
%880uF"MU1W,0MkiJ`b$nJMEM+&kQ&IpKYAS@Yh'*8/M>6C><qkWS$"Q6@fi.rcM&C4eVRS%haO"ctMnm`HtJH$/fXi]#]+k`@%$m
%8"17/&<UMSd<!6A(KZC1]]/I%FgFn\Zt'Qagl5iR6"6<&-DaQl,W?/1N_CI@"/#uHTrihj[_X]F6q1WH]mBL/J.qEcGe!AiLo)86
%pi`#6F2:_2K#UXgRq<V;3]iFJ0oC9M4Y`Bn@ANc^M%OJ(0nC,a$1T#:k[>$a@dYAR,V<YCEDANN6,IXZNPM.i9;>ug+]Xhq[/!gE
%@nFm!Ij!03Gm-sQV`mrdR_s\FC(dd.p7"7./!Q2_#)+F<\TYJF\c^/DR!la]'/>fk(cW?uE$3S#4@T?s8bkan9C3^taGt#/+e--k
%OK1IiGM!a[5)4=8@?ans:e$t\aAE'C7S5'KA.kT&jC(UgKk3U_#$N[UY:b?P.)\E./9E2IMhKE3f8E34F&%b.R[=3*C`K$_.?+g*
%%n17&mi8l.^Y@l_=V=hQ".1VU1/gXq'MsAVkWO>G#h?^)UDIe4K$_1t?]$-Bg5]Vh>tHD\q+<\(K;:s*N>N4$jRUB:,1Zr5:V\/^
%^(do<C(\IG,sr9V,"91J2NN%\Y`REYbpc*s=+Hf39HHe%<j$<Y_WgJT_C@$%k[JV4,ENNF.RTK4fTf>D`#_BZ\&_PZW6Lo5=j3Zs
%$]R)g+sJZpjQ4]6"!Ht2>_^f?ZKiWi&^9Klb>,hD?-lm[)GM?*cB,PJ';oYB*0DA@OFTSG"QH1aPf+W<hru%-7c:KYc\C/5Gp65q
%;6Yh93+S!mP8K9a+K'KN$3Q=<7pR&JN;sUEkI7(2</`Kl+\:/i$D!=H5El0Q>X#/RBKCVkCGa#%-&\h:Al8n&l(B70j\UY?5UK(.
%.<#e_W^-[%38g,16ANriilIFP:HsrVP2VKb<f\Ob7_T8"CAOdtJJ=VBcefDa&L#8EklB/rCm`SVUQgkUj2`"SM'kUYGTu4:JRXHc
%7NOq#pP]02o*pP=ejC))@?iZP;5E2f:3TDAY7e2NmDIn'BYZ/?X-CM,80$$5"5D8_UUlFmh*<HqgF2<V<G/fG1l9%u+:1r(#mg[X
%N?h>c?,l9rV*7s$i"NZGe[q3uPapFe^h%XUWoAh&e1UmT6r'U&fkiI6>u*Fi=sXj?#!XrEVCsff.6l(?C*u47o-bO?88U-iStZM$
%0JLV1']OsX8qD&.=+M!9Z4\kFpenHG"0EG[b[%O4ER.lJN_gO$<ln_hV(TP4\#6gB$eQ6F9(53A7pp!#"i$Lg6k&H=C,KrQ1n,&7
%l>,3p3f884dcke($]l]t$$luT@L\TVO&:CdI\?F/&hql<WNq4.c(mZ9''a5Cls#([AO29[(J'Q3f*=4QeU1r$TstG]<4*DB;B-[Z
%XrCl1%E7M"/m>p\HOd.moK-tnjA/35=@ZJ6+h28nH6N"`E-R;U+c'SV$5@JW=G5X"ihpFE:duRjat/R_6gQU/2=_`JQRjcY*f.jP
%=cXR/O6'g4ES23ThP8:)(.qPJNB*6R$:7a2ah):Zot;1Z/KD>AY,)h2M%(CF5F_DI^c.sJE"CFIVWteoI?5rpFeR5K;C,gMaE="B
%hF/&d'u:N$F*6_<.f7)GK1h?(9fDWcb':A/M*Og)!7PDSONj+%Z(<0N/g0JG@ICX74i2+(#!0)9nUsi"6H'MAD'\*No/Ol8D+J:p
%m#sglngl\`nOO"m$Eh=U-'(3TR73u&kSjdJ"geSUXc1.Po:(,7YfIE\-</3\-hJ?;-,Fr6SNnngDL*ae'EXI#_f[4-E>h^rGW<Y.
%MckXQJm9eJ,)+B'Q6a^!rIdEK%e=9YBp?UBNgorg&W>dl\L,qjDZFrHMF=^`':I]R,1<<Sbb1t>pjtXsC'7KDa70mIkatm-&7+;#
%3YQgk7:a"WaN9R/l(T'U95Kr")9?!<Y_<?9*X">>_>1SK,G?<dAiWK&OW8bjd#4`[at[:BVcZbr+@RKL?8]C&Tq'B#?]fCm,=+#B
%?E$i[B*:)ZL%l"Dq`$I&ThA&rdP^*FOsbeJ(WDkl"rmf&qfRQ8AP$;54>]9V#pAo%T:D?pA,..]BblMs&PKbNcpP"_j-KpO08#@6
%I`7+nJA_g`=%q42iiYR98)Sj7.2#NW/f'*j=iFVh<nX(D"%XJ[_"K0/N[J#Kok[m'3KPJ;FcDd,WQBnW-SuR*;IR_E0R&D!L.!Xg
%'I`rQa"p_Gku<:hgdAk+PH9Ru6NRYcHup\$<FED6du5DJ8.`"n*fb!GJLFs8-!l9:=u&B`b]*g6e"M^7;(6A0Cak^ea,9*%^/)0a
%f-C?ZYo458<"4[C"Yu%skn6rQ@blSEe%e2D+oGkA@cbkD7:G.670>9M=gKj%rg_=<4Hhbs6pX3aBNN1c1e*C'*OZ39KO14NoTh$k
%Lu%V]j;mJ)1*9b;<ad,n7Z]5l7LU%8,%Se(&bn,$I!KP2HCR<3Zls<!"rrIOLP]om&4?5jc#8Tf>H!coem2(rX2mB#V%:e]J0hl(
%,B!^Hf50h%N-@B)HL&#c+Lf-TJ2Nl]jNnK@U2%^Qk!u94f\]'/]T?2hWW2%!S1JN0`n^]Q3RjHPIF?KPDaKi#1D5R=N!#i')DN,'
%Tco*kd%PhYN6BZtKCnNg:nG3fS,isRU]DsQeAqqcjCrpFA6Eu<kiU7K6$p5]P;5THm,Dg]n-$)\\.ZC4d#<mu(%HRn-<#L2"ilU#
%o-m65k)[k=7HH3OG0U7&L,2b"i/o5k!`'m>M%P<2]+S@0I"T\Y3s`8<ou9B.dhdNJJ<3C/:!d"'@>Ak_e=$/!)ESgGZ-@5H#u;>2
%*U1B'Pe`b.KNuok;H+HD=lLbj%K.P,F"P`F16E.0(aZOpJI[irb3D6Req9_'0H+p*5cU(9#4*7NTVIXGQ6_\*JWBRFeUm7CESgA6
%c_-#k@E,cLs7J@1Oua"eP[#Y_J+V`K)^22V+![F9UmPj7!PT0c@V1/^V8/"a>;hO:a71!B6,AU];p&Mr1Nt[`0Op2!h'$Cn#@:5c
%2efN(mSH4U9`28@H5^rl@^]F'QqZ`i@<4<Vgn=]u'#4O!"XUV+/"qVWT%&G0B@4hb,Y65!QeJ\M1ka(=`%BfAB<tY[<dXTW0]$1j
%%QV:oSi7#=)1/*G=!:^6fEOkpE7!NOoPurGRj=\Br?Ps$3+XC>E)4!&0gn+9;j,f2Jc`tc08*'WB2]rl_#dDG%lW+O&nh^+LV_nQ
%#0c%H@1"n_a1Qf<A>Fgb)afirFf<]EADdsISH18m$=&dGNi]\'6cLLRJVLc?^=q))YaLjb.7JQWg+n1S,f/V<5th8KOa?C5/iL['
%;>c4PKcOa579Ljle@)Sm0U)4&Q4*l_"\%f!5,:1I-P"g"j\hm'V5[;\P+ueLGEna"cn0oVnf5B."1'RVSPZfIEnI,ilXXagN']GG
%_Rdi(KuN^!O:ol^O(jiA)OO9=&r5rf7%@A<%qF'LXW^j[3TM\21Q5/t,DLIXWX'Z*Vqs%0HSA>_MP=0`Bo%Z,#\X_9/i&^>K)jKB
%U>RrB1J9V.,1jbF"f1^E0X=o7&U%t>@YG`@/meo9*$1BI'JG9Yaf""7E7\3D^U"'+kFdcC(lH8RbVW:2a.m\A=I_F"(D/aQ>i>ul
%'[394^M',l(n=Lg0L<dDL*2$qQIVV!&PCT*Q#0,Xe&8ShP.3lKUs)Q!+>sr*f7R"Z@KB1T#QgOd;-21)*5jbIg^jX&cj"(rWWARB
%r@)!C2!J+8lqm$YCjrW+LM06h/7'JrLI,;rAJ1YD]?f[n#H7;l9Z5Qg?#cFo4&c0A/,WU0QIDSmC,ode:`q#T34gb_1MO'=ArS+r
%GTI)eku,RXHmq$*W7`5ZrL6.&EKEV*-&kpQbp%W23.*\rHZIJ/M@Gm;W-T'`G&(YhU8rO!/;??J=H`Fp[g>`#!/i(NE2[T(cO'c?
%@-+/%oNhIA3:i[^a0:_&/@K7$P7\,E(1g[T%M<Z"::bk\&Y1C\7g",UV"Qbj7#LRB8f#Ju0s<=?0b'7)EW]X#O?Z3tfS[VX#d5;W
%M1+'%bSUD+LU7aVY$i89#rQ]q#'A]H8J$]Y*7<DZWPj^X(r^j#?\#+a)=rBCF-pUU5!sI@P4lt]/IEE:(.M=@-rI@]O9<HF>EU*!
%4qTbgV)aF:'Iajr7DJrm`MeSZ![%F$31"bQp$4s<O2K8&O7KQ4=aUFlG</Q&!-ur[oS'&+?:uP_6@\(3""BVtTO(bDb:]2t7=c0L
%%IFrk<'dk,&rrDN:p@bjU[Ll2hMt&Rdq\!-AVC=nClqmi_=?T7G@:9DED8GaRajc'5GHau\h0b*3&(;/H5#"h,fIPbeg4CMgDg??
%38Dm$J-5Ts@S(V>j=ecM,r4Wlg'Bf^6;IeDT/.nYbEIhG-o=I-^qRmD^a^Ns!PhtTE4VjHk-bt[%0P9;Ch./*mmpA)!Ob(s#fAX8
%cm!<3@UD$m=<\>b;h0CHLI((<6rtQr!f$C#B*U&985SO[c?"n`-CuLGM"VL%#UN1>2S6qj)c*%mKS>R1@XO"MZ96).ZgV*;L7URO
%WiAJLPu).7Le@2rBpZb_jHLVH84*SRK@j\=`)ea)H<MFGG%3-+mtBtXb;=ks%3E=#i\r?Rq>tH+.!q?(Q1[dn3]=DY58:_l8jqi_
%=\VL-`kG8[-o;+rdRXWWA/d4/.^l.E:b53=ZL`)!KV$!4>:&in?1nW$m2RQbiG%_XOhaG)-k**-6QL%`OCl&6OJ62udps,o+(a6X
%lu#6?Pa%"I#tdk+0u?+@Ti.&e3b*;iZoU"2Yle]rd[_XLjX5]p`/[HK_*7Dm"6@L-\Hs=&dM"$+Ot'Rr,6U+rZ?=&F`24"7^;(NG
%X1=!2Ok_Tfdh#sgmgoX<)6-^SoAl_a8;.0)7>9-[@Z+olZ:t@5aq-CuSrH(a+hrBtrXpdd5#B&F>eXJr,si^9)0Am"\da$sW7h5Y
%0%mA^J/)#J3T`GcPhJd&6bpgfjmY34N)G51"$_m#D6Gd4*&D"S@4i5DSDkjA&4,QnJ$Dih+hK"=ZWFHQS]#&V!c-M&5(80H,Ee^+
%&='$5pfIVI\F$h9>!jTS>F['sO>:CSW@3^8E9a-YAP"E^jU;DdA@'81iS\N=BG`FcU9Geq/!"N1=@5W2,krJt)O(]j7;AfZ)/&DX
%J.X'0@M1A8Z_(fA*j9ma8_L##BKK2n)fuZR];VZ]]*`bKeEX<LTjUEY`(JTU8u'5fU(UU."G<4&N'g/Z#3:a2K49+86g=0jPt\2%
%\EqClKFnpjK>jMugf)o*c'@3NE>8Hn:gL1TjG6$j;A68FToE3rW*fdh&U6+*,H$%@(Q)TZ8-MER20J4@i`O&u;0O>o`Kol]rY2Al
%fEsH.O7kX^GE?Ypo];$i-,e?$*S]Ko!]H"+o9bbH')NhD"=>:'JP!^2B56I<_RI=]_ZrNK,)KQ\9a:a$'b93`oK#p4.TBW1b=ju7
%l7#tu,M2-.,#;9uM,?LJ!#S-Ecni^^&s"!OB$u1-!g_)N!1p6ViZUbZOlPo8Y)!oX8Ed".Qo>/5Yqb-10BN+RQNn<0=EV`-O4ZE^
%_I!nOi;)M./ZDS.=]u82]RjZ"[5\@FYE1=TAaNPcRUPIa59'94Q*13C]8ct"KnBQY[O&0!'k:m@rbdb-*;N#HZrXsX)u0\qIeMGI
%`oDaQ4,t*?L*l+R*6ju:p1u\J,Br)88_a?F+^ihP@rQTOi<`9&(a'60IJ_"ql\QhHk7+[;)n?LsKqab&'aWTfP\"n33NdB08.o#B
%F"0[*,,<n)AJqHj"9S(4T&kRfL]N@]NiGj6]$)ipfO@DpbQHE'7nSisaG@=#F<HE"i`up)\2btY#.aPi-'<]`]5ba\;GR41`Q!U&
%A!C*s5<@dp@pXGBQQI)>44^nYS#6mn0nDlkZjnHqI3/\bC(m"[&I1lGUfkSb9LiY?k99gF^'r2OHm*eRWR7,c#h^<^aC0`sf7>p0
%GSXGP9Z[<3qG(nP1a8o[0kcCgf9K>=D6UGLRiZ.BDc2qIP/(C.m+:`48%s@"epER5k3NE/CWQ5O9.LEoABTWOJ5%R/ecm`alTHO7
%`-cdM]I*RpkAtqn*3g4T>$4W.*:\2E3L?["kA&P@.$.+[<sgR$3WqdpS;_I:#"(!#&ps`>c2_6pH)j4/;-OY>+Y^OCacLS_VLu*4
%:Fc8bb1UB/(r&/F!coe\"<dF>;(XtQQ>O-I4Pp%)2aY>U)I=.M73p3F:j<<r7_&M>'I-jH'QYbK+iNu@Z]bP[+Ne0Or$`CcP43'%
%3YI->]8:#S3YGpYofVIeI0W6AkGdI9*bCM1DTa^J%@@!ZN^VWr6k24^4TN8G/Mr^E--Nqu$Isd4PeIh:$9CO_pA)R#^^mOG3kWi/
%Q]g!f0MD,[P/e4_5=G3;TE,iZ,`-=%aAIa"<Y7`,3YK+5SJ9Jd'$S,r)as^pBQH59&9aA"iJ:N&r1[[m$j6&Q6;I\b"M>t-NMKAt
%*RJa,$=%9^+C.[XahYb#mHid\&Cr>)o+7'\JsZ]]3(:</23i2%*&@]uoq`dL')Oj_f5WCWm%pYG`h/h,ln[)G7SY)-"`ghu)]<'9
%Tksa6WPk=YD#$hZB>Oiqoj=B,e,BLI$:<H5?3BnC2"2bZ*'E%TTR.mBi5oD&#EM-%nhT_=6,7%]6SX!s.n?h#$1oN8-mAJrd8k59
%?m>oYF=r&)X-FAhmGktt;9Ya1_2Z#Wa3.;\]<p43,Y7!;KJ:9hEF>[5I%u(P'JZGha+o';5B%:OOBER5%^-L<;JfPEG>SML)"&sF
%O.[Zo*nXo^90l`:9/\oI3+p.^U.uUG-:a+1^uEGu#U;G?=a1$?YbdF^A33ms2)VVk4GXFT,;=r%\-,]/H#Nr,=$]lX:rB'IfZ,jE
%_hdu:4n\;`k%uMDNhh;0^-ktYmRm+pTAQ&HU.e/&.<AoCfa_Pq7+s2?#:`c,RNWcF)KR[+k]:0LfHMo>k9LUFU`h^6O,>sU9`,]q
%.RITXq!d-1*1@tcgkR)m[Y/t'M&iC1,.a,8kOBRqDOuD]4ap@:;[_ba7SlI5EFJR$fcYC<ieS8<@TE4j5&<S!GiBA:E/H8*d9nY/
%_StY>;H=df;I_G&qi],(V&QCDI[V2iE82nWIe`M$ajG.u1r\88Mm!F";/dr(cO$ldKk$)N3'JH'O!>BsMiHF_i&G(#H5B["O*P4p
%;UT0oAmfUA3h^1]H8^h0&gM'3[hhAD%b9o]95TPbQWiBU[3ZFn&l^5%(Hs2bfocSOUU##g/="/iOJCk+B.g8oZ)uSJO@Z@U^N:bh
%/BL&1duQ)C=E*!6nlA+QTF0APA_nn3l:<)i*-SUFm?>>Pf?F&@FCc0=l'3Yr#dGu,)%I:aLs40%aT\%_$+Q.Y]#&Y:-'::SMQnR-
%pAcdf=KcFu0d/`:kd+A0YQm/=XUio<(*G&`"AY&hP3J9Cf&hN*9,UBci&!`cT0SX:F;r1jSTc)M(-jtBW`N^:j4g4A"u11]'W>@s
%L\H>JFD^g@*2u+j7[T!PB\5<t!=^dFC7$N>/O5#pi')4XR';Qr#:N@,b1]7\_:1j2C(NObZ,T\m!/s@?,qg-2,rWJ_Sr)eV.1Ca6
%Oj`kE5q#2`Qn.](:uI1bOH+Y=db!F!q9%*l@Z%N>""&VHnC/jVfi%/e"g5)g(L)L9$`A4a@STrI<u,#$<$JIr7!`J!O]*^5g"jL4
%I8Z%E8\Im,.L5TdgA/j/6<7"\X=+L&;"BY7$a%<9N<n!58fkg251\sl'KVhMTu8NZN@.,=`rR-.c)#5B-Stk4>`o(a65:qZLHga<
%01i7dHn21fa=a7Z1OV^9N]'ebTkTWNQuOK^^of>>^;u^u3936MUtI&OP0Pli!t(E;kST@c)U^l;@iV2T$r,<*e!_KLq;se7]7:#r
%/8-MF2tU?E$Bl<E>-u0\n_!;\&*HC)A'9d8kt@F^>2d7hU]="H?AN#VXu[e`68i>qPt(+r+iMjJ,U+.(FKXZWC&EIL[7*qnX=p#s
%Y+G5/0L`XUKQ=NG1"qFnTD^;NC0Mkf,3EE[1OS0<F+*'mpUDt57?hc0?N:9rJ;'L,/d"LgH2Nn#E%>1uY.PWY$r@[0<(;d!$q$Xo
%Bpt9?)%qZ$@URM/8aQ8SVE+u$+ph^\8``[u6-;cM7N?*C7*&t_peG8T+Pk+iY?IG,b;pP<8;O`ZS&7NDiXs!gMqLQU;WB(Odi+&f
%:BF6M1R$((2G9^;e&a%\1sdi9`f_A[aX=sQ9p.Ku-k5P>,f!aEZ(KlpPiJ9CM)U,=L#*@%"$88H3:E4cbi\\QkX[*_jF9FJ)b%$c
%E^#:H1@r)?"AQc9qMQnWYu^2uASlC'#nEWf"ph"K93AtQ$=9a"\Pf,]`'+]<p(qcuK?MZ)E-H7PK+k+`EpOJ(IN3AHnYmVA++!3E
%?5VC`3q^jXaTf\1+VZc9,tD62c6:%`&`3fC_Q66sCeO[:Jt-(AmLF.LZ+mC3Vg/[\ifBj2@V2kaM2r]i>cbn85t"\IQN9oJN;#bL
%KlkJ1f+=/%M'O(<7^b4.q`3@%8qa6s&cfeRc%!c#6^r29LDYg&Y6a]qPI9)^))jhc20:Cshf*HY@s!Cf)%(g[k>dZ`'<O5=7S"$p
%mCGu580q$L[U?YqL]bafVt_ArjN%ZLQ9Q?"If;nAGpZ4=MKke87Ob>Pq+UBlV?OdBI>$?:ip3CJF@8r%)qu?A*@[#-;AU%M7Th%-
%6t,t]@2+OS@E\Yd-[ie$V5uSQrZZ6P9+Fin"e7k<:"hU8$Fth?ZVN4_\^H0,#*r@rLbL\Rj#bp]Ab0o4%)I`l6k,nn;LDtL^4=n!
%qap2n"9K]g_;`[BXsY9r`L..:LdpI"i$OZ6P8%m+_;QXY^lZ'^U?`/WL>:9^?sG>W`Ll@MF56H=Q"[Z]50AMQQ_B8!V=-fe)LW8;
%EMQldX-#fod.Fcpq@8giK+nr/7r4=k"b]ct3M"\.,Y3T'"/P0j*[!B_5*9o&W)fDrBYVl4:fQe3l'&nb@4"-i*HnkCYQ`1G$,eb2
%>okn.3$&dO,+!'>%Z.l\9t>(+[k5$_U()i>7BY=39LmZHagVS?/q!oi4!Xi^`j:Bb7Yd)TLJ3LH=8^S7I\pX/>Mk#[p#-(s'kW[h
%p)D,T,4qt(-@m$*,t4%jGVP]3cX[k8W>8+?UR&e?Oob\16,X($E5R^^<bZV(f-m;5NCFYeDntlX$PP84#5)nN':M7r6[m^^_JU@`
%"]K"SLdOApJ=+"1Tb+i;a0UDq=/]9u0HH<tN84o.b^[b]8F;\,n]JRFS&6U%U]g`C<,@d9(Z^@_\\&de!'t-*i3s3Z])krB/'f'!
%@Q_9,58c7?q+(Q^1RI`OQ`FiT5UBX)[>fc)[P%9sqG''@Mrk]e,IC:5-g#$Z5esDf3LPL`)fFW=FkGNf&K9XBK@cKC8HO'JHg(qd
%0a^)EJ`cKHE.X=PB(&Q@16?$9OtG7(i])Q.OlkL^Hj\qfApW:9GVck589:S>iE:!:6NInrC5J3`91h?c#aFZAjcDqI-^=^*6/au2
%/UMO/6kb5",;du9)1i_gjS1gThW#Q:ogW<oKXt!'^@-q%/HmB03[D.NO#m]V%!+CmV!g_/naJ4DmO'[<OcTTSJ@\F?ie\R%oR[-P
%0hqgC-;7L,5`Ve-Zt3_a";5a.1bOh2(-C14db%rc%5Eg[SE$ILN^+STOMEC\KPZs:9<%V%XJD03I.3qJ-&T\beAYAC$fuHW)+%Z0
%<\3beQO=8--'AF9;RnOFK.uTq+]g1S=X9"/RG'?bd-W$X&<gC5.)%DZOr2m``(9]J4Y\6]N@Y!'$$?Y:,^)tm@6PD.6=S&;`?R("
%(aLlD@2\]jiPLqEM2ThO6]$T(3L'dZO/q\_e;Pc02KL1rWR:'5%]T#%,.ZK.>8#6"OI$!Y1_d/"Kn7_2V5RY#>r5;-d>faupP;0P
%`QFb'`)A`eV(t]."OGU4ofs-(aBrhD9rPH$0*6u]N?GR/#h\6P9.=WBH</bIJBK!A)b'ejZQd]&KPLlK-akT>P?[)"'$j&C=J>-)
%?K2>F!;J??di-c/BbX,#3?\DUk2^\%H5+f[GXpoO!BP\+q\j>$7,?r]=[/.QgBo6$f(3u>(G^l?9ha\!(HBr5]UA@BTL0";?C$>O
%nZaA,.4][CHGju3g#6CPRBSUZ?j;r6hFJ;7QrcW#'Y&G!b7KRk"^j(Fe`YF:\GO`l(`??aZWGeQ92TB:Pl!dP!&D]Z=\X3YWm["a
%3Kj=ZdJ#U&"AB5S<W`As%S;i'X_H]"Op!@3AS2gmUI;^9NYB1caMP3[@PS38Rh]gL$oj-I_n@I_OPGLUlE`>Hg1.XLCabT_QXgo?
%,UAiS\1!g.1*D+V:6MDP%V!.;D^)FfA@ThrI98&A4`QU1R:@4b#KM@VJ^!.^C<hO1U?&"-R2K'rFYule'0OBfi$"cp;HZ+5a&IRD
%@/bqm9PpO6Occ(Qr6d&)o`7W23/h8O-&jK?RMZPd*uABZFtdZe5u3eAfAfMlmQm"8/YRcnf[XJcgljgd%@bcW&hHiNnL!r5Nr]Ke
%8<1d@?hS2'Joe4p85Ps[)8Hn&hQEJbLjJ)PEJc&?_FVcAQFSj!4?cF%P7d*nlmd22mEF,]Q&)jdZ*,?g#`jS`%NaNNrbc;A#E9Q`
%`nj3om"d0e!)i$3Oj\Pb-gQgp!'A-%A6fAecDD-u#_6ZGo1HD@^a1b=#L\]$cXL,:&+l]l>akL$5fF*W-'LW([]o)=<XgAa"gfKJ
%+Vp+RO'Jorg"a]j.n*SSrtL71fF_p.YkMarO-RQtTg5diIFsZlh@a;:L.<t6p3ZXq&h=O"i=q=er`tZmmu4$7kfO;i:6hS6@^6X>
%Kb9->XmGP@@V6U:;4,-Cnf7F@Fu(#-a9P+fQ45sJ/Wi-"\16T5D+P=q7BsY)L]rZug&M/SXK`l]b`s/G5lQ`sk3PZ-QCq-ajI7<(
%$QndA)94DQifLiFP(c%'#*Em40G_[R7\N4d.`<2JANo[U6TN$&Ef`Zn+YpBch232O+O(e^Rj/FG$Mq[\,luF"g:8!&HAM9<Zs]62
%'\WPD&HiRMkaYV;bN.OFLIL@qg9J604\K``Z1nHalj[N'QP:[,Y1d\>6<ZGhd^6F72T\QkAEl756roOK#e-ZSD*RM=OR``)*_?hB
%7j"PkDTIQ_?'g/2/VZVrm.:YdXMKTa$OCek#>rVPi"H\SM=?g`"srdgS4&Drk$UZ7-.lI.8Z?/L!qP+MQ]Oh0>_Z!'[Q,fR.0nk,
%8%0&0n!j565>$Qr!:,3&*#Pcm8`?eQ7/<!\$M1JBB0sQ?n)+LML5pQ'_Y(EJMa3D6Yq--'H7=pq&F4NoOk12b'A@E-0UKu3RGF?<
%#.?$-5XI1+B0^bZ2L\'Wq4)hu-D9"CW<F$%Q5*cL!'$pD))=a;fs#!<1-nJkHK"tPe&2QCk[L&@0.0Kp8mFb9KH,LkQWdX$1jotM
%-,b^<VRS8k^'L;ab9.:Qg'QUNi2[84;&+ouV_tdAT<@gG3TsQ)TPJR:*eR2l3BLb94"Qh2:5?YU+R!?+LIEN05^-^X$S)=MOT0=9
%)/[G@+ak69"*+Nd8n(4-QiPL@/t([jdfC$AQu_tC-Y@"oTq?tZ")U>Fpg[H^EpRjPB61csN.CQjTkG[D\i;G-nE%1CSu(4@_4Hkh
%$18.sT)0-/R"q8KGp:-g8'(i&]co;SPK:<tnN<'DnD'37XG1poTLb/)Ek$2-89lhoc*;VB/tW.Rm+dd9LHOlB?;QD5]!7WI)A/jB
%F'j.T/EiUuI$qo)#'Qh')U(54,!8=M)kqm*8f#$*c7-^P9<U+r&U*-EV\&%*A5aA_3S!)0,Su$S_mu;iRH'd3<hDY(&[+p$i^>6N
%gm;uu4PLhe52T)^k%*Z76B"5hVo*$npQu#1iN%-SP\Z:a4E_RYYo,qJop1<#;r&["6JSd]'1pg`3V*P84PJ<d9[=<qZ2"XK3=!nN
%focDu#=VIq.e>W@bm-'fF+BrW#%im&@t$iqC7CCRfKh);F%0UpC',aQcst?pNaj,f-,s?:PJ[u;EJ@pD923Ji`10RCW2HU'o9d]q
%.`"6Uq8es/Qm3/u07mq.T8b"mo^Z+A<p/H';'8VDAX='I,62.Xd,e][XKt%"4H?pp[K2^>)p`XdFTR;/<"NIpAW@1[_BL$k8i-"/
%]X^]X(N;B+fYs!UQeP?SD2joOFV?>@Uu68a3*8)]iUm74>:[4R:?@cG7[#?^c;3qfk-3s3"UR,[@`t_Z$b'&N3JsKFd$NdYZT-t"
%@.kRC[U_@NJc`;)-T&jq-ZR4!"2ZW[JXA\85NP5?cfVb!Z,$/E[Tk=T.CG\/<I?eFVU0A;9O]^o^t()m1d`gT,E9I]!m=.Bf<"Pc
%a_2;J:<DG:l$e!iAPBGFWL>g$KnNGILI-I?E9oOus$r)K:'YGlR1rUAq4(9_Qu^>i(1M"c.1`4rQXQ-U0roX*;=8(iPNd\]9=Ur$
%apE*?03:?JcV^Qb3k6nE5\6/VOl0R]9hkc]?,ds[INcY</!sRWa"!DqJX\d.;CX[H,RD$s.!_KR>\0)qTo?,oP+;GJC^Cd<$jEr)
%$%q'_(=-cV8+((@SDqUQ9B/VjZ@GhBI7[j=@H=#QN=:d$dsNcZOcpp[_bqOESpm,iaPiX!H'TVP)/2D;%qIrdF@qK;Ae(^LEc?'M
%P[MR(ZNJ92LEUkn1mJC^EX*O(CP3Z=FBWZX%Cd%Y:5T&cZEjs[8e]'m<"\2ET^d^p%K\X>!jGni!9E(_=DZ(aQc7Q%5fJf]^3D#H
%oPloKJcDe?EV_loH5.lhb)c6Fni1S==[KZsaE$C&CN\W!G+@>Plu<g+\/22O?D-?>+G=kp`uHJ.3Q@`o`p'XR_/--%@l&2AEPg&6
%r*`-jUu+$5)")&M0ZP:D)tu1Z5[!-s?gK(r)G^N>dPu8:4ZasLqj+%`.qm_i>acXFgt+l)ar0q2SOP?o^/RnP;9"ak_D7M;ksWWW
%,[lX1"*P/e&`[t3G]l[r-WC>Vr"UpRHYiW(iPeC0F&Vkn,iF)>nD^f5+Z(T;(C0C4k[f=';^a&Qh?k&Hg(PiZA_H)(60=G<d,LWM
%&\:RMVb%Bm@1FiK+;]r![RfuY`$f*!ii_^g3N>'X$=oRaSd#cT;VY9rI#]WCC-7FV`MoF\kB72.*!L4+7O#g.4-Y\6o6!aJiTcGX
%-18]fR`^c2?2.S`)BX9\$\os>/AYrb\cQ*]@`4*__"N,KLcZpa<S?:u%'nnkSfo/2.o(d6cD_:@0][=Mc;lB/OWfP@K]f69nN_.8
%R3-=')_mBaQRq!X*c?gibeV,1p%P!*lu7jpM^^^BRa6W(8IMk#@DcfOUnZ?C)t'EH04tc6?DtoIjW$'=K)OFWV9En:JRg2b4;RB\
%SerN,F&IkR3;oY_E;DGNlr2ZP,6@6;(63"0P@9/DnPR,ZB3=,%(,VuZJ<TG#;Rd>"5iG24SFBWS*D6?d8^\)I!T0b-<aX<LoP)2K
%:B_V(\.L26gbHpU$4,6lRH&ou$A8qI1ulF:W.k(G8dDh5rNs7:FE%'b`t'E6K/<#5F&G+[9lZE_cJu_m^b]7T`IlLQ$g7b;ap0<N
%6Pp-<4^H*!:C.SOTQkE!E>UaHUWDsF*1RN*n<YOB4GJIRQ]qqSb>[Jf:8,KqIfKsDaP[iJe<AMm;IV*F5.O+mdZD::L%:s/0c.rL
%8IHFD\f*CbWt$,iP`ij3Tp3W_.2\SHQS%`o(/G5>fB9EsNaNk9(#3pkCVrERBeeXeW%8UPJm8AVV83O#`<cmQK_*Q<M(ZpO_#]B%
%,f5duh)W*nnA%VG#aQG?S3G3j=llA_!=C.Z,gLpmNd\0oj]LH:9EnAs"kX_=ejnM&,Y<U6)`jfX#i%t9"&8k:aM:gb31c?$SYCW:
%,3+D,"Pf:?/AhIc(9fXY&E"hQb>A=#786lmPQJY"!tnIpAq<i-Y[ApYgPqUPD;a:Wdt8.!@=NVB<i"qt8f5D/8V,`ODF3tb%fB$+
%'WnDCBj_7n;j"@TOJ@9&;Ls;oZ%S#`oD8be4Oqtr@1m6^QMJdJRDL(XIO!tc$'!+*7`6NL"1$!dR_(7*)!!W`A+6foM%P4U-DW3_
%)cAbMmH1\A`!6!R,?`V/:BA4EY^sfU\ME(m0EV0lmu`-sXUIBXjB,Ugr2/+AG&]#$RtI]qe&6/I1m!$a`,>d9_LAK&DZH$[kKaaT
%+_LGS&ARb,_SAs(h[$cD.klbV7[T2(7L&[J#TFVl'`!_8[SYC.&3ic:J8&2Lhh].WI*WqM.>!@QOu_S^_YBPX/BD`K6tW5q#kFGh
%.&2Z@aDZ`M_\T;oDj#Vt@@5qGUCu:+VQ-H:Fg__LS"ch5TrH+O6pef:SO7iN9Fdq)7=M!g$I$#3r.Y2]5)9'u!4s@"IR?A55"#5p
%$$%NeaD^>Z1V"7r9bHW+@TVVL_Pu0@S4.n%B!Y5_,cS[4`dUNGIZpJC(Taj_%Nr(tN5Z/%NdZrI28!iW`5j5k1VE2/f=Z#&I\To1
%ikFYe^g,.3^>hakYe[t]c@_*Z@GfQJ`3/31hinqRAppnt@p95;MY[N%R8]7WkaUqA>VB#8h\;^#l/.*g7_k&%-LI&g9f:n?>,X^#
%8\c0C@=6OHSm]?4`&Cg%3NH?ihlo-c&jlu_-n#UMArcA?DEAUq;qNI08[0s:pnm]A^^Ee\^iq=Y^kV<;,4=H/!IYRqk*`oR_S&P)
%8e*i5hXigEHtK`E$I;ob,W0+N)fZS#TIm\MOQ(!imEPNeeBUb8h@/IdV33F1huR*qo7o')L%l<`olFqf&kgN[Ye;3R&jOP4L-V`r
%.GGeN,\ed_)dhPm9(F;L*Y,S;.co@?ADBXjTj`9mV1[7T2>`*U^bL7XE,R"b+BD_*hNXDDn2,iGj!eshC)65S1H6L0)7VUT]>NX3
%E,XfZ=@1n:iSI,.0jJ[LHU@kpP/=mUi?Fdp\2U-u3Q+PRhC'l89@bO^OUupcO;uFXn'.!(i8>"")\%@M;S4sU<Er*ZL\HQ&_aQ9`
%n"#3s.c-X?SjL"e]Jk[M3>&n_">G?UhA[([6^G]<_p4%m=eU1`)&ETe@R:\FYH[*L!8fb>+f%O5h_n<U;VZd_4=">r6^I5d@a&C,
%I,i+(c^+sq,iEth3Pm_TiZQ$'$/^,T&EYnnW80-RihqHJ:*fEk5VV31-<Kg?7==-s'+$H<7=6=&SP'(kiYsW<4@o\G%11@8/E7[Y
%`/#i%Ro9D/@4?GAIM4+tQLW4V!;qCq-muDKQKeN:I%(-94Q7;@,RT,RigZMY7n5&gRr'CJ$/[FuE#Q#)^0r"t%]G>)2O=Pu6SXO<
%4"XeaN,Pu06n..8(7Id6.-\2f4_:0Z);e7.g"ig/?J9pZ5^_$(Jn&/PnVLd$cBJLl)e_?<8opndDqLDeOG=smBuGSaTnI@=f:'lc
%_DbB7&07R"Dj6=Dn0T<+6iD4FmhFa82N\D?ph!+?p\s^<O?$7d\nl)@KAh0@0+tud`I$>>M-,_%@Vq4bN1fV#ptcQ,oNCtGoF2dK
%YCLPSE"ma2n4dAPfG;1["RMZn^c+pEEQ\EtkrVb?9_mQ++b^"bn_W>%<01RHpP)$L)-b8XNWY-r<,+@oI-QDYl/&,7raCon>-;&^
%h>sJ+Mqp<\H]uqloJZC`&hqa)^tobY*jK9-4V==i/#(.>l5aP!Xu6YMnY#!2hLQA@2b<Da(5J<0\uB.#2P;&:)`[3:9;O&JmW0L5
%E8F'GUNrb8JU'bkko3)NiNkM;/W900IBgVXAhJ.Y%*@60EZjgMarKk(OK_p-GS?bQE4m71gMkCPi_;m[Gb^M^9`hJ7Qpl8KFc,.4
%8Li.:,6`<^QAkb^^H9r6CPqR-5Rpk^'RVjU@$hn%V0@RE/Cm$fBFMa\g"i@HR*.%kRq/c,n,]pb!`*"9;\0:&4,<25/bL_([6'VQ
%=9dJR!i4-(R,*<A/;DhP2HF@e.'bqa=e%d$)lfGA]*XE$2mi_!$05iOjp!4CWQS2X$.*f'CDC#s,%,A#Nn,6'm"Z?W2jo(+DP3qG
%mPG;lr^b=r;c#E`i421DE4SCsl/j_V-mg!^.A],aK:?:k#Dtdk+hDYp?4,nnkDUr7_/n)oXsh5;js#O/.@`Ir%^NCN1EVgD\H@!%
%.[W:spQ\Xdc-h]kEYHET;kA]c9hV1N7;tb#<\qeWNWKO"2pGf?n10WjiXgM=D&XTVd%c_io!h7&aJ/lu445OD*0**Y!k?[g.D5iO
%6%s:lFW=CdZRG5Y<c^2GERTa`DDqT9S)89,mSkYQDW9bkX_OZ;7BZ+nEtIbAR8h>eVW0'X"NoZ2&]cWU%T<QjM>?Y9#!IVGJTGS=
%rH,I\[WYg^RR490!)j"Z8ODK5."`IU0_I41DVATGmna44liH.>!,ah.@:\HogIW34CGGU$g_HEcijXJ+Lm43rB$cX*M4Q5I)a&dE
%;!)#6daj<D3W:pC.M>.&^Q$(g$f[WXZu(Z?bk&;@<`FF^Ap)N1Z+pZrqaZW[fk==!'#4t",NrSs!&qh%_,(+j)^J]:"`D6)aCRZC
%#]?$H&C@3YDL0Fq*J32r<$m>mNkeB8J5\.e^n%'TQ,(X#4lU<:@f]'T@*uO;^#s'tWc&<@JLE."hD!*F)aiO1!CnspJK&=3>hUDq
%i23)dBUodGBc&TQ9+fsT%!!n(Nkq89^<5BRGh$I?VI]bt&[E'%AT2;#_Vdm8B_WO2_+bOPCs+QC_9P<)PVTacd*[P4^t%^!6l=*B
%NknFW=Q2c&_2Z5s:)+NK2n`j!iQa0f.;'/N2+;I_mM[>>,r%QK.Sk<i2[.38jT(ed8H6\mUASjH0K@tNptIJB@5V-c2@N)LGE>f-
%&mpf51Wa,<9;Q<TUuK:R>H[m@I&Y"L7O`d*eki/P.=RcC4RA"2^E#h%9$bkn.BA9hfE0rj69[@Jp,948E:[6)2H9ffPdca`.0L?d
%!sNUuRM;1MDMNcoSVl552<.o?gS%B=/9RFW7^4)E@;-#O7]a[JU)63_a:YmK?[3Umg^Z]n-5YGq!SUrYaj@JqAe8!\V/7IF"5!a-
%D$OP.bd4_aOTr.^U:(/*W\4Zl)bdZ$ZcH(j2MtgDbi;1Ek]8EtQ*MF?>!+2@fa]iQ>'&+(XscC?,`Ybm4H!V].:ScU-kOY%KPb`G
%@VR?"S&feM>B>1/EZtR#Xa"\L0u2eGFDXg[FE;D<MY%6]%4@r:79(TJXUV!nXF[Ai$;J?.?jeAb)^XD^2s"cfq&."F3NP,M/+Wd/
%W7ns=bnR0P#:h'-k*XjJ`VDrjg(\>a$O.OTE/MYEHt=(m9m[02%4G*.pETu(Euh1Xk'5T>c@L]n<#fuC:nBS!^L0"HiO#R#pcbNg
%qb^N\*]jhmR5"t1$e+f:R<cs'p2tFTPW%?[/*P4,2,AQ/Eb^i79cI*"M,3dh.;k<dBTq<!ec_[[e(la!6Qk(sPnhtlStR1j5u/BP
%Z*-S7"ecqAilo[\ZmeD3PE#g>*=)0.b0O[eV@'%SqO(!'#s:9b#D?MuP<cl77;'NUJqJcOZdf:iaOq8r#*qjkS/m;e1dee+Yl[`:
%RiSQg4\O$H*tJmU^c2?/h4S313'\YH5=`tQR*kC9_InL*/E)2TEI's-a\fB9*.s]Qe8.slA;"p7L+.S8K4\a[:nZJe@8rOZZY`nZ
%!;"QR5!$Z&$I+;1*"fObc"8)O7)WZZ%Zo7t#ZZRj_s<7E:SHH+.\*Kkn0^T0@js^0B4f1='.XJHS%&Pk%8pXnko$oP[+"dund!!J
%V7^UWE(7=pZKXDpa`=b),SGGQ.m$eg[1]^sE1(-Ib6Y#%;ks\742Q">q5gCYMut_+b/WBATc6VH`k`/T"\Qpl5ul?M;qa+1W_<p>
%:c<3O$S$n1rDZmOV_8J^VMt9q#WUure@ZPe;Jre1Ca?9)esUK_dIe&RB#;YJOrPj=Y%2R3EjBDJU4.aRA<RekEOno2P>,L=&ZqR>
%Os!$CJ?kl[j%\W#g!K%)D?k)++YPh<O"o=$J2`h4AE2NS\lMM5D+`2(-6!7F=H^"XCe-^g\%ta"P44LOQu&jZ8A`JWZD!OEP*=hp
%H,SieGD"!a$"mi10\JE_o<':)C`?N./k7G`D:"`'9T:#=)eX!*H7LA4cGdkP;+rl0RU,@r-6!.,!)OAnNAD>O"qaNe!-OmOY\*8"
%NWt(c-6%KH8D<#;4%`r)@BpL=!rJHpZ6=/jM@D'ZY%1XY(6_H&<-\q)ael!O0'9!tChgj`/VhFPnhSQD!3XpUD"Ot6Z!t!+j<3,@
%R3AWP2"Z4<-W!DnSN_<9jXAe9BEQ/OP\a5k=XR'=2VB>-d$CG;1J'&';bAt-(O8U[,o[IB%-/hi*"s5Y.4(JR@\C(6,o`1kY$%'R
%%D08Ndpn(&gN$Iq8iD^)%"cf'Z8iIQN`&J-HCu_#TOa77N/8`]82a'$3uO1j1E,/?5dDPaYpfq"-8Esc"d4jgr'1CJN=WLpL.DZn
%`p&<,2i8`#@q#!9,Wcb%+P@X;5dKW)fQ*bRCY5@@\0)1$V?843K;P=eLGNLPVh-HDgIRTkNAD`u&I9Q7N86T>)]j!\)O-<mAcRE$
%P`Q>MVUe@2"$[rh7=F6>J6\L%DD<:Rr^d"<,Rn`I^:Y.'DYiA[;a<7pi96[5A94PhA>b)s0q1Q[+WE>DkVOD$A6$h#H5*f4VEiL)
%5W0saL)X[H)0qsJ-m5!)JLdu59W[nMf"U^*CtP7CDGWSV,eV;T+<(BBK?+\2nJ:%S=%"ron-HI$6oLGJ35[V/a9GX<8oOc!9EB/7
%=-jUf2Q_L7qCY:Z7eDP4oeE['OG^u:Ij&@?%--'e.7?(N_07hoCe4&uP`ZC]Jh1u%Cj[F9Lm4#2CCKC"a4aNbC!&6;Ta!SV1IMXi
%Ji>HHCcF-H;!W%ejiE5mP)To)%_NL=N<_s.\p6n+M0[;o-(?/"hPHHQZpE>FNfji+?C=]s)0cu&.4#pqOBf=BS,J*J:F)M^-(EnQ
%YgO@\2LIkgJ9-rkR)o@X:eEW$S.S2hn8$H4;#W(Cai;`Oc:DFS),Y4M&`aMVWDr@o<#pgp6itI/i@+1'%NTfbQCe6GE85F&SF)KU
%A(0ae,C\ND`t"m\>oo"H#U7m)Ylc^V)`2^`XG]1Y3th.[iEJriInI_@F9q$EfFa'jfuoanCoH!KAC]b7fT\RTO=amMA%_Ss,-`T6
%"d\Zu&R4eD#)GunB3=Mb1@7VeE/o]J_FPg&>[8R^erdhRiQ[89;_2`TZA&bqRfk.HVC67+%u:f]-.7?!:1k\=@8d>o0X`e3)!aIK
%$c8c/%A8*6K<7ZoK>D`=OEce;9d*lJ81Of^J^7Ye19_'f($>VMY-3/Ln?6+LorRq(\@KO(S'nL^6-`dlJR;@PK.i=&Qk!C&TB+AN
%,Qo/cak*\M.k:=_>[q<@a`FX7$V611@hU12#CA^I0N#+bPKpM]CJRfsb.NJj0Fh%B2+=CXH^uBfPQ(pR\cT&a?7(aY!!8hq$3/3/
%Xoh<GPsW*[lX5ZQfJS(4N.3k=[4a7Y#'K<Ka]9]nqm)@G8_6oN;*>g?>uSZN*07tI-HCAPIo#fDSC9$\;fms.Kn#qXld4Tqr#F[a
%NfK.>SC-*u"[QbqeoVc:iT0LZABA8@VU2G:K`G1]iRS\faLOE9[P`1eOPC@#D%TM&ZOn9k0T(m@4Z`nWk1hu#A@U3HC(N<;S?W+T
%5OqY:5RYCVe(QJX'PSQn>U3+P7dV1CRK0J=Ui,-o]94;,a'!c3mSoW4Z'F;@<1()^VJ';RZ3IoF#9G30pf\G/8_1T[i9!;U,]uDJ
%(617k2E:[A`gXUN<Ch-ICJXLs%)n[b3\Dj2:/SOO@m7Q%$u9mV^gF2LCZ5M+hC6:pPus_B^tLZR*edrq8L_kE'mqm#Ee9rZl.$"4
%V!r+Xe@e^aKHpP#2i"QU&<ssgloN)\6[ZIsWsu^)a/u6*3mPR+KI#03?&P]4%f+%r\t,rY,o/1G<g0<2QY'M!0jn7$%Tr*$SA8NW
%eKdD2"NFG'>#mLNX%nl[A6c"9C/;()b,Y0?dW3cGMQ0,H%@,@R8Xfs*J<a)."5FLBF:,&A.IGIPdSrkC:IE>S_,QWKaqDL48u[j0
%S$bln;XI'#Gf-Hi3BQpKU,pt*@gUgu7("UN[h>\eF>hICNc5OC.;`i?9#qibq!'%WRDjGb:=t53Z"&e2#Fmi<_k=lGeMMa_:!Gt>
%.@E6HC(p`HG-k_!SkC)C@S)HRQ3^,NV2"GiF#PmOC,fHT<KiHj!f&X$C)S2&J21"F25S=3_SlM9RKg6k@sHF08`V[)8u$Pu_bq>Z
%URHe?W0,R_9<gc[;sn#.BrFk.kYQrkBfOV,Gpb<4/;@?&es/Sh_rb@)&8I`YOMmW@:iiF*kb\o+ZI:.5]ca.J,<F@QM$_d#n>eH8
%`WSjq:X\Cp!e8_RJ,[Q?f&ffTj[u6?,,n\E&8Hp;)$[M;BTR0K5tsfT=3.&]a,(ae+=%+eK4a,"^uPY14G:mRH\Nla'O7J1qi80$
%Zg;C5_]K"E9g2t'YUXpeS>I:lScqpe^(?IG?;D`Kd"_`P9r4uBb@n-/Of`M>(4tl<Kdh+)[b3'kB24X)aWcV4NjWV[&uUT".h,DD
%5.5%g<STF-V6PSJRaE58)U-$pUIZkP.r3jhQ'EIdL_&^F3RW"_M>j8J$A4(?:cZuoOMabme53#0g$0#/RKA^nR*J!p.B]%t6m@V,
%6-1lk3rLp/Qr^0e9S8BHHRW;_<(opp029:69OAFDFQeW=?0Tc_LkLGOd:K_g]X"A$NN#g;FQeWa2+NrZcBg;cBs:*2gHiBu1lDc"
%fjLX$?ds&68jhNKYgTbCgS^^mO]&N=.32!j3(6GTSba=&R_Y<W3#A/C7@D$a.6)#K-cM:ndA.5H9OZ@7@)=9=/Eo];DB:)u)-aQ-
%>W%q2CZ-a7RKSXQlr0!&UpO8R8"03ULisAhFR4n1R%m3mfkQtOh>l1Kg*oE.=bt?PKJYF2?pdkE1kc`bMM_D0nSG>k'L+WVnu^oH
%@l]qpH8KXiJWnBpUBMQRd*Zr2EKGdIA!b)qoA"#JIn1Y\CilbX5Y@$]HqqhCNmpFtaQQ1M@tkMr.mk?p9jt]YU_[8n&_hmkK7OLq
%=_)T`kWm87.OC-:bj,Uo7W<e:SRP$O&'L,nempt<heaN/7iWp$3TaI@1c`T5d@AmS(:uX:-CXjK^=5#6_iFjRXrBoRTQt_'Lc0i)
%,!(tr+Z^0dPQ;HHiRenSE=.N!Op<*ObCPB\]+fr*[DnCu`B5-/-s]LJ&2l?cR2@.uBP9G#3VFmU1`aYR2b:L+FDb$+1hN:+nIBgo
%ZnKfO"q"'M-f7^^d%Q'61IPm`_uf("J^?C68Zj.5^]BaDUJj-ck\mo%d\-D0*2G9%S=2h.'FU@)fWi5gn\e#7-j2h%HP0t[-UAEI
%9CEnM7D3\q"+=?!>5mbY='m]/=/J&,T>-imGB)I;]\9I0-UH[Si:CQ]\XhMh0=f]F3KYuF%[(bPr8iG.\(SdYClA>'o6Te$]od]l
%s8HrQr(Qjun93jFAuf+QchT2!n>A@El+`5tc/aq,aUNFY]-k9q(S+0i9W)pBc/)mB;=2m.=ZWC5ok#lU,Q4\;X^/gdV\;5lHKJdL
%)uWWJS4K]u>5dB`G>>b^jd;M`GG#C`%<QgnXB0b("aVE\qUM"bm[)X6DlIm-X<tEeeGAM%T'^$\]kZ,Fh#dPu[I.*L(Y:l)2VNqO
%ch?JVX&f]$MAl/g1IXdj[fV!Q2V;:pD^8r,n<`t0ZMPWK26hARffa'!RX;HcT*/MDl,,1shR<u#hN^j<HdX=JaD8]-NR2so^UuY?
%Q#>tdVtTd/H'(Omgo:#GlC;p@c^H6%>C4'++13;.I("%0qUB?Ko]j-'o=!FJf=GYiZJI"Z[p86NMp6N1YV5:Xjnir_j^j?>k/K''
%%t/^lp#b?hVq%qm._Sl\^mdobp1qn>Zq`Z/[C&c+I9>AWTNRf:s.!]K*:u,$hE5`TaS3U:qg;Oa*Of8/HEYtCq*fK.rV,k%=BMQi
%QgTfnEWasbnPO08O)j+P-oX?4%DnRDhl.mDDe$+Rmu@p"B6L0PLUdJ0T-6A@'j([\B=[P8DL@`hTB4Ab`qV+ZT0:ACUNMkQe=@aC
%b9a'VV:m$!`m/"hgA5k9gfALA#b6'qF^h`(41nMO&3^0mA-)Y>gT.L,rhrKR8-(:ugUpnlg23@M[o<7C,@!I@J@3Nk[p-$mQd5'U
%@-c&@L0M(,)H\$H,A4F*&m5*Jd&4q"Y?n@0rGJ`]_/'tJ\\<d3%HT-ZO=ErOI!_tbX)n0a_t22+\UEUEUPNb`g@]7*'o7e3SojZV
%HaTEX9!JlfRZEegJ(0Hq]=,1kEo+GH7e:JJdgpTtUf$A-\!l,ZV-0Tq5@2dIr`R3%\GB:=eZ<&UKBX[LHJh=(?-3+!In&<'4I#;_
%4?M99\hWD=@)#MkIdS*K=6URVXa7>JXI+_-euu]F*LWqR6uNo7V.\jo!ekjHJ_(42BX51+:LLEabcmX`Y3+g_Zk]7L[W$>[17*D,
%e>Q_AX%4>X1P"Q_i!m'1HrOX:+8'W2([6QVU^qACqG?G+H\]YL?4ht`;!j4:jt+9a:-\5pA#%o8Y11c\+c\M%iB.6M`R9*uq:<k.
%\l%c5eEBI6V7'<MU5e=4pn`0hNq+&Xq4-+YH\A,@r\GE2bH4fTWDfjG0Am!Qr'7,G1MYjM\-;^_g2Tg[I"=ED:8M,Y.5KG\@D?,^
%[GIhrEAA'`3HJ.dbmO)OBRI*ShT$?Ho"JkPX\SbteS#s;=L&2$(c#F;#(@F/KuIhlnc=Xo`f(_;In,hHJU#g6GufP]]aOU>L1bu8
%jF!AE:@KEeJh?U5#(9s>@!;Qf&VY4,k.4P\r>j>ArW855j4o+JgZdMmJXor]ZLJ>`T]!K8OR)rtR\%mh]S'/77LRJ"_%3^$/MO8\
%B'V"rR=Y+P]I;^X=?`fCS$g72X\mh'Ai';RP(*(BZ%/n>lM^VMP!8=m/+mel;;%ujf:'C48p_tq*35n8P^`DTcM`"`42m7LoH%j/
%d#5u<mnUogjPpSlhhU6:=2:[k4F>RR`]Ws9NE`8ji/NYLg0h+&L#0eA:\>pRUdN9$-t"SCSloEn1I$6;&)(jS0,Q@M?Z.cYKn;2Y
%pHf6]WD&Z&QZ&T#QhKfGqZ1#,p,fD:+tj>KqULX%%B=Z(pJe9GHhBT1]ctq4?bIqnV"@hZPe0urqTs%9MnBh*F`qdk*(B;7A/b3C
%>F!4#Q#Gh+G4PN3YL4l0JT8lINOAoEW>8oEEN=P2UJYs\.KqS&p*u'8NE21[JP=OAFil3'DK`"r?4fsF\*NA%U=-+b(Rj^"IaoHt
%!17UU)FpM1_uX^nPTit^FCnY!(IK1!;WotHqSX5e8<gg8MF8?@P(?%=A`Hl,l.\JAU(j#"_m8qDGq;PgeT+2i;+>">/Mo6f58IgK
%P[[LIFClMN16+g!2g1[QN((#O"0j8.(6Lo?SOP(EAT*fB;2TI-=>];OO$tMi/d?a(O(p5ghC-@;'^<iGbkdsrV&@:?RR6K6$EHW\
%hrSgpo*Rp2NSh\D_'t-%7JtTGkiWtF'YeU,rUUA`0V<j#KkM=tY9Fas1$PV)^p7;K`pW00H8WjhG[7r(\e^7V[/uCs]WR7G[ILgd
%'^OIf-]sA<[F%n(C@kEEX4heuqerZQ@qBMQPdU%]2I=r5e#Q[',P8MWrp<!u,R#7*5BY'XPlktfNNPI)_XTH4n-I%_BKV8pA&buM
%IXu0#mduE(!K!5QrR/^b1Gtc4l[RG'gPs@bc[El[*43!+W?&Inj^JW;]VXJdf(SFSo*]L!_ReI/8oLO;fc\bP?X:9[0c>Egc"Ot!
%`ZULS!MS.7BH'<(6Ktq8KlVH?`[$d4NO+dra0A7FTD[Fn-3&HBq)S9>S`C<X?^'Nu^D"[gLbFCX)N@cl^OP48gRn8r6A<F7-A]E=
%GQ*M/r-^V'N0qqfi:n5_ea1G]UVT`hD]Q;kh;me2F`Q>"oafZ\IP(cHg:O%`"UZ+DNm=sWAR>X!lC.u`TF^5]P]D3AqPZFkkX1Jh
%IalD`?DJ+pKk'6@i:c^5hl6>[O))EQ9CG^EN`TG<LLc`&I"E694n9E*(Iqqu*(EH:(#SE*"9XW>rPnioZ2]#%rP*a\%h@;q*rCH-
%rnk!\GO5@C@^jAVhgtJ#N[nNH[f7/t,C+e[lV9`?EpWB<:lEGGgOI4,hm(LOm.7or,#CN6W:02IFDK(%AtlXhMi=n_Y3;@D;fq$c
%'El,4>5,(!heJ-?ld*bdeu0Z1p6#W$H\<+cd(@aCoM'*LY`tc%p6,SXdJ&rF52^56T^T6C]gla7.bpf(L!3Y4`YPkoSpLhrm:.s*
%R9^c$ai7quUAEo[@-lN>p9/3&G7H[A>4YL`-._K0HWU0=Fm"g3X&83=l-u_W>+J:W>eg!bIb'S1+Y$mFXF.2nTCgDZAsZ`>[:R*B
%@8NUY[79^k62Of^D4f'0.s2[QSrqURf@Z<&5%m%lokc+4IBj]LYjK7J)]o:<ps<m0p(Bg'o?/loqW*\h0^>Is="qSlGf`3H/%OEb
%^Y6d9kt2si0,Y^8`eKhbiFQhM)&lo%L6o1(AScV%FJg<=$QEEj$3U1Kf^LZ3-d]-WjXQ"Orom"L'B_/*#,E8"n-l].C#hMm=#*AV
%]SU4L1226Kaf(g^dr<2OM?!^tY_g3[_k=moMY(<cS*910nk7,4%!]_Ki9u_dH>gDn5M+aUhAccF5oXa&K;#(LqW9aa0b*X7=F:,j
%pjM[i-fLcP)oi)Yd3:8MiOt9994Rfr^P;!&L/YI#=K/b.*#GRl[B09-e>[FgrkPH86_DY1TMT1,5c%@8lIXB4dYIGfJQs;r)YE8K
%n>fW+J%o4Rd;8$rWWeaM@@Qjmki70_%.JJtmV!XG#49ZoC9d-q$#S`uBXV\^^O1\Uequm+R>1[onSGC"GQ+[F$UrW<]=r.>s0:&E
%:Ib9UV)NJ(?XNjLdGau$_ADN+&LIF[YoR<s:'/8aN\Nq7R\@3#6mH*[.+3mU*FiJQ]#-Gha**EH*FmIQbh.q1[UT`&*TOnU<pirp
%7?EM?T6]lQLVEDY;G=!of;g_d>P02FfR2MO*AS_oTD)7!MDI(o)f*.fpLUh^XZbt!^7NiCHUSE%VqUmGDag$Vc'.1iA:XYV-nd^;
%\6keA[WZuihVNOth42$.g:aRH$M?"&HB>&UW%\$XcqpEIZgXQ\,)bIMF+t%h&,VpKEKQrNB)V#:BG-N1q#Y,MHEAA`<NDa]g6hao
%*8IGHp?B6hjKMGY1]CV_)t^0>5;,en]-iSK?Q;h9i5j;A$E;R.DFsVWd$&pIC9Nra2)^[73VJM7^fR5tN!$f<EH`Oaf]a1Hq7Nfr
%@1)i\1'@hEjJtff7Q]P/GF;VmCmK>2cq)jLXjK#G(C2o;gZ#&JVetu&e5++t\\U>M'jL:LVn)fNQLS[,I$u"Hk!o/'=$T+lTB6?Q
%$_r-=)o9UqOZUl(+@Q_'ENVRQ`lGX[EGg/o)^"7_a1:_[/j970UNN(We=H,LDQo.BDd':.6)RUk1E#togmgM/Vn$9-)"$qMW"i\g
%E'bBD)>\hR/XSdf,\>ngSguPX@ue)46cbPVA*6<onbP7rN;aZh)i723-.d)(2Ca&DG=jE$[4?UshRD6nCn]\A[mgr[[C#8O\1:Za
%IV@k@_>Xkd1jVOlD^]8GaB:H[NiZ+57YdX[c:D^U>p)(m7r)r\mWs-^J0n1&EOjUf4msSmK[X#pCVU[f5ddq".AZ+e>5,(!Ii]@t
%hJYrqo=9dFr+tOk?dQ"U'o;&;SojZVHaTTO/`1r'JGi!o-sXc7B_J:^KkX$sFCMick$I.rrV31Mo?=T.f8C(Fi.c!+jL9a'mS)Aa
%FU<tJ+.,1*8psmB6UuB%be&8g=5F2uJS27p%])'BedTQe5p+^U.i#?1)XX35+[S8>Keq/<Qh7D0"ZArcgXX'mX_-rm*DA+(.n*sE
%kSG^;A"Dh]hoLi%iLs;07a?[:`Hq%VXu-'n39@u+42Y)Q@cWO)8*@;%^'nc+YMiJho0,4]YFk-52qWO,1=)$X36dBRiB5=\Xq,FM
%qG?G+H\]YL6>6Cmg*&s<E4<?.HLU[L7_Q9:WLnNj*,gi>]V(6Ca2(SM#(:PDdYIAT3:I=F_!d1_4:.)C`o5eoLXC]9/iG\f9$a\D
%$]!nnr6i1oaq6@3-+HI,89?:5AJfj>UPtT]f6eNiM>B!q8s]Brek\bUq&@857:)QD*/:;0i4#lL9(Hs*GUGk`Brr[_G:s4n)sWVm
%UXe&-k[b4s1,2r>hl%__IXO[j5NgD?1G\)"W36:6ad="N9#e'@1A.J*>Q7SbCd2S4&47d60"10TMV:VHSKVs8O=PlCp%"HCWCOg&
%1'I&Xi+J-WUt#*7lI4E&<?RcMfOiOX/(C?$&(+L+]3jkdWd";Qrtr+%goKcWH+QFPhJu3lD#EMdl_:i;>jFSW-BCojHS:+o)&]8:
%2BS6dd\m\_[IGs:pFrpDIkb0mCN'Q>30Y'RZ;YI\pPW!K(r.jjEi+nuWG)I<F^@'5A1.j.goLEhdUUbH=`4NgDi9Uppk86_a6P_'
%o%/Osrh;Ka@M,F%MsIhEH*pd4`K2568b@;7e_En`"cT-8OY>5plHS[&rqCo3D>Z!F^MPo)P(.DD6r%biMq-BrXgHS<koQ-K.a?+%
%X]*s=<0M[Am#NIllZ/iLW#tM`+\c=P>)e6!?Y]>t991!VhSMs#?>^psmJIFkK$Km-7s*)A4j>,#a\Vo0Gbu>X-ia,B]8cW)Mk/]7
%&\ks"I!aR`rRo,-2!LkR)rJ6_b3-1'A8#d+_gpo\ZJtdZ1Q<0Se=SRuBiV8!jhj^(=lLchA8G*j(8T3WZS1(t<VDG*\SS7nXmbAS
%l*QIc(LQ7]Qc<&r)W*T`E$h,koj6/A>0.neiih-6qO!*sHi*2[s(@Ug,X6]KA:Kn]X0b`Ms3W;rs-NZR"oU1ODj<MYAkFM?HdeD/
%1=IZIEgfLpL$_L1G@nUU>KuG)]m!eL0#!^!Hc^?A\Gu1%C%&NoO*oKRFeDpl:6t*IV`>tFGhF4Pp\&tOGl.gEjN"\b+5<AmRe,@V
%STeQopfM:[;nBgJ[80"`F)uSr8[k"KGuU5]eZGtQ;/:&LX&jPi5Q=;Xo<)jt?;RriXWVXoRssio4.m+U%t#mfP5e"[+%4U*MET^S
%8oH5.Hn#psU8:>]=oCk:#bUTF-<$dckso"2NT?PY^M8*CF>Nhb/_bJqASWV%XKPCZAG:4bqp36.K<rGnc#<K_/<%>S3'+fd3<$#P
%r?i&2?a86d:@*=0j)!&"Z0GJ8m(6Be@TqhtqB>>pMuFP`Q5_pa?1(0m8<$B:Y-r'uSU@pHZjn#/qZl.]Hb=*S=7*c1C'SpHW9WtL
%(^FqLH>)76<lh=bZ=l<F$XNTN[=Zsj?F7b2p>9/_=5S-!CB*CE&"\^rmI?o6?F6oGB`F9?5@/I3X7hOn036\j(7p$/gO)1kFN9=-
%GgZI/RW@=V0ru=f*BEbE)`ea(`Op'[A1tCTDfMKt>M`IX*mQ'Y+S=`@@sS%/EP/aYFK?jNQgF7*rHFQD5Ot#7):#\+o-5:do,^!I
%OrpbZo#RgCL4L/pj5kU">lX3Q])Cn:HFDMZX"O?2?EV>lom"%H)p>Y6/jX8:ntRW(A[r<2+BbUNTh\X(E\I^+*<uLf\K3EUIs\`o
%X<0H\>I0T5Zf?RsnT$d!Y5cL^9aZ!J>U-s7=g4G.!Il$>OfZuklT8W3_10MFOR[Ai\!H?V`_!;>=Ta@d5aL[6XLBho;<h7lk`a+C
%FMcZF'e'EOfgjJPAt#7s-=&_skNq7eg<"-+1NDt4]i-T4r`O%0^\CKM.gQ`ti.Oi>3#m0T`Gtm]+!eEBa#>9eP9!otB^F,l1dR4F
%RsOQ"IV>b_`:ZZP:4D\(Zh@9;qtt*db`Bmk$)7K1A);9sd*b:9*C\(.7?>AZc5nfs6FQ-Ns%(pjB2kHo'Y80MbD)Y5RkU/R-BC],
%e<B.Yq#1HC_Y]`3@]6YASn;k*EN\o9laqsn[4FsOkBU-W6TuG,PG_+^P&nIgr2%<rV^i'F(Q7R#s%&+j^1#t*DA:R#G:hDWFL1[c
%s"S,EA3dArI/\X%L29+7rcgi$3?gR=MYK_17jL2I?T7!f;;n`Api%FL58qCI)\)hi?l7t3\NU16r<K*gQ4H'ZjG`lDIW27Iis55'
%fFKLZ`VIQ!JXO]ZcY5@GWOJ)Sb*g:Ao9ql%1G25P]r^rH[D02*Y&3QTH',c'gSJ^uFQp)[/7as=PCYVD[rO!k@@\aUYLL2O7cbTh
%Wq5RGXcgo7(\H@L[4Yqp@O#5r*ls`A<O>Y"ScdgOIfRpddI'FTq7^D+]kmZB\!:,YR0)3HB)[/I\(?m?(+FP&H,d<53(8ud>ialL
%bAfKIad+2Wl\sXfB.0SVG]o%&HM("oa6/]%BC2_po/YXWB6X("qUbYaIG<+*P2K^(dJd.jeTWPaP/B9Q6i>kH2@V=o@rIm8p6=#j
%>Vst..(T%i%CBJg<93_*ai]k"Ie_r,\DCnhFF/Nuc.DrpS\>$a4s=5,/q*n[>PZ_6[F*Mb1=mdA7[Y0sr@ZQ.4I$mFlGltn!TR2[
%(TdI.?WVZD>W2SlBYq<2'*[F(^"D',^g9,s8(V,,f"85CDJ>H7KAhD-F0f&R-*Pn./A@[c3!G!)^R#Gonti0kEUU^d4<>>(D.#>N
%4!QI4r*O^:rHENE5OT&ndD,=*s+;YY-](GM#'';Zr+M0CMJ%IL9$WhQ/jaN&@;-5O[S!^c`8o6c96TY+iI']ip4%V2A_B?X8%99q
%m&Q')jG[mG5amacjF?fH`q6B_G;4H:a=AWthT+u'[SoD.2q$e]_p,JW*k\AB@fJKqa0r]`e</)M!4]ttAi0Z`]UZRC?"qfO8]olA
%hCX36e*gWhf>I*>4N`^@GQMfue!%uTiICm:]m&%+RXT<Kls9F.dAL!\GY=?O\T%Da4fbrUr;Y2.917N-Bu`sBY/ZlWQJ?t-%-5:=
%cEcSF[_MiRTp.dU(B3[8ahtJ;ro;;5j5!ag53i/Z;5^=fkC&!TG,;TjEh"OH/!XH3=Kd3\:]ZPmqDC'A8RTiga]tlHT@NX^Y77*]
%BqAc4SoO;r"PolY@Hd\p+7k]1jZM&[p!4GKMQ_N$Sn`F5s&&$&mp+!a:)_S'0'3)%]BSI-*Vr:6>AmQ+DI6^14)(0Hd[aQ['@3Ji
%j2s:[R=k;'GIH1>?B20`g,3&\8%!**:287M3@On&K=I!IIJn5lG?q+5(PQHjOgj*>Q[eZsiV"A4QN_+c(k\@T\TcKh[>kK"q>7!U
%oQI]1)C+XRa[/pRV#D>)B'8_/YlFFqN7Ltrmf,9Ij*M&4nnt5:2`f-,j95(7*CZt[TA/bNRKN[tro1?M5cik:(!jLpGA7*VXB4@u
%^:\g@EZfZe(Bj0=D8hk9n'V:/\;P9XdP'AGk/ip2=gp"83R9W=+Pj?RNcf5hG$DXJe"Gad<i:CcH.<_db`<PLN)G5WOpg(sO\pK[
%[#/D#)i4ANY4X9p7,@\G2\Z5OS!g@87A\@ubI!#F`+?%)G0/BK&iJpL?$]Oc*h61>C8L;uqkU>=nFZ'g".eiH9!t+:/C0^D9)%PV
%XP7Xc:<P,H\rQ;WB4J>TT,3nCU:jU&PBLPX]sN%4CR&4*]"M:Frk3LO;pd,_ETsEiS5NQ=^!]3EAbpICgNp?ZW:Xi$>r)4jKM8Ok
%>\[?o[8*]*5<`eWOWE[q6;;c*%^951hY5m9jD4)3V"sc=WI[SL/"PO7X4!u5Orh'=Mn\43dCG6/:3(Pj**h4kTMmYAmaB)qF-mJc
%ht><6C1m"od^IhU\?p7%%sHl#Y%ao2FLfitUXIu?4jV?Qh!W\'[E]l%d`^?O^!^Z'hQ-"o)ti'soMoKSNA"N'XJ%BK`ttNgAcHS@
%?Ip*th+H]rXaSX]VB[4SLhBF4$H25[R`Wpm/bVdSgJAdrPrt1g>5-C&D2b^IMcqkg:GRPSGJVj%YFQ*j9.i5?s"n?AjA-/aJ$iK$
%eG!57-MQ,?>5NK_'=LO1VB]r+eu_/OSMh@;]0EGOfaBjN`OS3JHbJKG-]bL[gcK<FB!9m'eD&+'TX4&nal#-L]$NTg?TZM)qb=B5
%ei$]],VS(s[rt$m]!PbTdQ?fe>&3>Yb.FBlq>@$TUSmacp.)6)afQnJ9V^IGQ+CqBl3C,>_7VXtXi,Om\Gk]fdEnfk]%3QPPl135
%cOVe'?YT6!V;ueLh1@T69BLbbh8kPCmH"/u27UuaP-sO1W?SBmp!V[TK!q$[\]-iTP4Hc<:9F&rdS'H5XL2,Dd%Kj%_:biJBq;np
%>%`70f/EO#QS_P'X+)+/cKCa/X')=mA><-fHYtK&$-Q*3*s]n[Vt+K3#Fml3Oth@:l>3rp(CdmFV!hrD<cYZXC$29d1T=T1gT%WW
%PKEHC+m[N<ou)@LGc!RMZXgKrb4<-Xnoo<Wl1Z.)CAm3QZ_Di;aXqX1.G9h:=l(poRC7#PaGVm:c[I59`+>D4b;/TpS3?DMm?S1U
%S_VGqc>3,/SJRul)*$-#QdLN=]LFL7egUDpgTArjhW59k0!0$[>iBBolcU=cIqHO[`JlO#@/5!/4>C_Qn<(g?Spk9p<k2tRd`nRe
%Ddq[l8udTbIep,^dSnZ4Qe(SPRjo^2"8qeNrQpS=]$b8^RP1S.FcYhTh5$f9QaH'(qaRJfCS=)T`D%!TLm64-[#*9!<+WX5DtKKW
%M,2VIHI,Gk]Bd`?<[kAH?M:&:EglsHp;-:Hr%>+TXo83D53T$'GAd<<9'</M6i42NPlLNBDCo#+YaVK=:Yb632mqIqfC`m\[BS%N
%oY4RQ(1odoSp:bcc-3u0^:W-8bZFVXnP%3^4Ss3!\[9PM`%G`XXr\s;<MN^p0&"iK5F"ATC!3hP?F';r]8N8.dR_)Rhl#k3q*pR&
%=d*&,TA(o0GYD%#:,f3q-PL^<Om"3nW1EgBgpG\]Xile'MjnlFG7aU`%r'KP2a""%JX3Bqe^ElpdRkn7N]Q>30Y4uDL8LR^KVtHr
%q5nZJm=Gja+Y2aHO#u1cLGt9+36tp:H<"b:qEa_S'ChK+d]V5h0)SDMD!fgn[3?&1h;*DG\C/*5!R8B?+1p=lbTH!^a"s4O[@53Q
%mu^c5U4,p;Z_d%5^?C0gSa(U'6fGtKr+YWDQM\daT;\@=e)T\\c*2bjEH_9MM\"r'*eDa1]tLjsDR45Tn(,^\?/"e/97#=JCH(t$
%?*HS6UV1:6_QfUflI?h6]?WFM9O:hrdOt#KUu=`_^p[6YdXgMsKp\<O9pjmb!uT:-_9P`5$ecpP^.4#oqUJ!63,^HFep(*e:9?r$
%CrDYtg?Z-"QaJ!]XIc@4QaQ-iK)[J%?98&P<]]&p?=7*3aD<R7>5,?$\u]mpT.-E=AaZ?Zlh!pZ1sXt"=n?=Afpf0'/m8._;7j0l
%qU+;D\m>&@f??h\XLH_S\so-hc;[!=o=K-C6n`lNh>([M!3(_i\"Ws.*O[U=6e!gCHCC1J>/R5`X-aBg^!7o5]8)[4!)U;kBi1p7
%O,Q%F#ntYFbg/B$/3I_8s/S;T2mM?8c>(qpS@03er]*[`IV=%&6eNM:-E+9-D;()2AsY>ke1Y!"OqqRPX5m(!kHo'5pF]Whd%Ym7
%lUQlu8[4KZW=(B,5a&HZ\%n#TB)<t#]o*(&2\LIi)),^\);8,[:#i1_T\6/SL:uWK(,aorZ*mV8?X40.3!eZ:H2G5ffl<b2ATb_n
%eB"EtSZPd7ff;!a(@&TnD\oEZC!0QGnBuqMX-l1GKX5PQH.Q=Vn,5i/4gS2P&)`@l7J7"Y[G(DTX_tcM=08`5lg36OQKd'k9iGhr
%Q<%^#`MIPMIP\$i?M07n4c:>p$6GERY0)51gN9UrAUIXCDbH^R@pT!@1A:TDG0P3,Bf;?4V7PA;(3c(rf->dA[RWUfo[e,o]Qt3/
%5?[hfIWth+]<\[6355!_EkQO4BkMp*nsOi;ZWuq2Z-$#%iti5EDa!I+og]rC^.2Dr:(A@?XZ^HLs8K]:T)!f2>eYJnU0O:=16Hs#
%j?Hl)qO[[>q3nV\Yk*7u:4B_(TjM.ZL*$pEaUd!q-i]Wkes7B.f(b9&%]P$ZnFai*1W^.dDW'-shtP]od'%Z_l]N4CGsK,^ET<D#
%mG4XHp[IKXo\=:25>4l"LYlBr[_M/V5L%uY?XG-eZZ]i-nQ,5(9klQU@dX$>VORL*CQgAX?*8BY0$pf3<I\TZ`EY@t@Eul"+"c)*
%?g60Do]t;tn+XRldgq`)?a7B,*:A">/,(AcmOdphdftl!pHRO3*rHe\%p*s^=qctbY+.&g]?_PRFI*d*[MN;"m9Y:L\ocCmT(hlt
%e_P#MhllD(G^Or$l&#9D:CYY!9g0V:@!6OqI-@Z5],T&<[J./4hd>+k^42bi?gBf_Jg^5Di8rb+hji6fgsX'unblU=-ctKB+1u95
%Ks143(#D(LNJ3e8?L&k4B6&Tqp$?;sl1.7A,jFTRVk4Ut;-b,:gnn/[of;ikqMY!#6O]E[k;s1upVZ.+]sdS$[hjrUWXktm<Ym)G
%gsPcl_:MJh/,,+mX\Q:\hHX:]&H'7aFLukbiR`;HV9F`f5B_t))gubh&QGZg^+LJ9%Se)$IC-^'"Aebu0A#YU^-0*>n]ZIWotaro
%]DCmAB&HuWg&(bsiTSD4o'H<]-^:OYHuaRRkLRQ5ErDY'q'G"iL\pZn[I/Zdosali9+PrZIQ:SV\j,M7a7&CsVs\3Xc?f6Tf'9D\
%lX]PM]?1$4I=@SiRZ!fQ?WjS8hafqKWU[4O/iERm]4&4rh00YsHgCCl;>cP'b/Em!a`fsb/af-n%qh50Sc,rb]/)DCE;@NA@Pg#.
%Z*HUg_-L3tfXQG-`QB.uNktY,4?6otPp_cl^-#8@r2!Y)H/g3'\$K<l5BtVO4.VHL2KSKM7!WD9mFUpRg[RuHG(.%p':HP_+6g8V
%8(4T]qB!;;CWo!/c5]7EV`>[Vjf.gheAp>*a]g9bj_N0.DY\UGbi5UK><^;`)n2rWo(7RSqsqtr:9/d6l(.Y@m.6(1nu^N9?C0h=
%XF;VEn'91B(Coa)b1?+Vo<R0]CLq^qGHL5']F)g\eD2M6i7?teEbKsjPbX!QDE31,4YGW@<W5t3ZaWH.WI/XL9j#,Zs2e=;_<ZFQ
%jbHQW[_-_Zk"9pprT*/4l;ZqMq9eofLZQS.gE4T(>OBQ'e%([]o!?L3cfNCVZSU_1WF3F;I!;i%hHAb*b-.nUYKF%E^.adK[Vi45
%J,=W^OM9kpgK.hZe+:S7o'\71>NO\m06YLg\*[tmrTa>ojhk,q=$E(Y*g_q+^\_2PD9]8L^[Af2>413e*`&$P.jl!omA5f!WMR_9
%M<VpeY9mkJ+'91th<VgO=<!Me'<]#gS:&S7s5is<M.lM#oYd<TbmtK^DcH."4RB`X3jF)-@V=]JVl/CiqT&9K`3Tu8[jJP`)rAMk
%`q/?2X5<0/'CW$`K0ChE-71qFPWqt1*[b=.IqRT*W4tqgi-;R+EMC,eXjbnoDS-<'-[%Q&-E"K]LQaOeh)CO=42KrKgO0l4qGZhK
%A9;)@:>YsJcMlnB(LMW\>hOM12>ML;H8PHac-a5Hm17OVad6B&btYpAS@LBM0lBc\<jjNLakFSVn`1MLl'LIH-CZZS%k"tfM[.i\
%[N=dB]5_W^i7dOq[DQe2SYohtq;k\ufA[=5^L"PPZsCDS]OKd.p=NZ@]='Hk`kV6,<qkIY2tON1Y'jDs]m[#'Hh.-CrJd_1f8b=K
%Sm6(*f&j0&n!r0+^?5:AgWaB_B2<Dm\8H4cRb*2Kip??MRoB'b03S06f@LM)+(!iLH>hsB:,r:CqR_U@gZtIM7piH$^XRo%?U"M(
%ID*>/G<Am.<kPCN8(Hd$o2E]s.5.4$1Ne'!IR!M0^,V[2c.#qdqWZMLgS<o\bGe_?VLEm+[Q@KolJC#Vc$qt.>^8+iFYYoIk/LBp
%c.n;hg;;S`hWp6o2srfCoAR^;e!>2fI;>a,A,F1B#<1MhVqX-oSK)P&fFQi`hDftmrqT%PkhuVI%<(%:=.Z#@O5E\;EH$:$hNt0"
%^&$s<gZa].NLYINgmOW1n=d-H?%(.M2VhK@K'D.?dtsJ39=;I$L#q"TRIJn9q_JaHFm!Dg^92Qj[c`^O1N/m:^R=o2<IQu-^]0J2
%B'*kRno%iAq)WkDId6mmc/@X)f:*9lHUg":]@UdVT22jE2rD#XT5O'T.N`OLeN^d_fkZ"b5<CZBn8[$9>+]Hr4J(2r?2<=1TA@/f
%d[5Hhn[:5XRHRtLrN[$[ch8\lKZVj$Rf5F[FN\s:^3T&4>jM?jeaB4/Xf];)jK3VJ\(t88^UpPUNd$Q@bY9p$*mMr8^HXdrhO[rA
%>MT/QB'sAC^GYc>s5;3$ro),AgsQ%X_mtt`hlQY,V=tr#_:3@4ro%:T^1RB/lfgA"YFjXa2ICb+lLB8^8[GZUn\i,Q0_aSGmQsmD
%oG<fh*e.AG]%qEDIXCbKdm>f0rIqH0T6@@$l,C9#qeG]CHJhjG=\j@uPLf&PPrI:^F4[miaVW^`f;G5e?Xqi[1CNoiSXDil]jbj2
%Y?IW0n(Pr:]D6^K[<):^IF3'&h3`?Q[oOHne)aBoS@:H?f:6Sm-Zm'dS%R_*XR%e"^mk/U?1rbtj_fiH:Y_$$[>41:B*XPXnRfs:
%^;aC@/^Jb;mY4ZsPBX>HhV4OOH=$!p[BA,(YBBfsUROD2IM5KOCWjoQrDsA21]H7dJ`VBpFYaGDhHY@<7/$)1K1AQB42K)V4.h/]
%`cNI#)S_aKDgq2-0V57-U)e.=e'keblhet)=REJ5L>==r2B,k=U:ZI.\"fkE94%8FrB$KGrTV3Qn`87g-['6#\)X<afBrA/lJ^Ro
%pY*#ck!sW6h7d$Ap\aaP7haupq0K8gqd&TnICoLLhFd>rGHO)G[-i1^CQInbXPE$rH+EM9fq%Dt-TCJc.b:*$f(>bfpYk\0qVCPV
%^%K"&kekX#YPZ*5IW+Yj]B+D6DcUN=D,q/@mX9P4mHM=X'ApKQC[Gj!rk4TQO7tT*hH[hqq6peO!r(IBp=+`*\`KRkpGY/U+)J?W
%D*Os]]!_+%e#pV"(Uhm1*\N38NJBUEf?4]*a%,O9nu%O=Mf.X)I;u[kmU5S0_41DB0/kA99/l8[I9DH"T,]LID-NR-:J5Je9C:$]
%D"9I,o:%\pj[J@crT0SVn&b/"mb6ulCN!"K/)f&kGNHrtr;=^X2i!;AmGBjG<YqY$f2n<5Rkq+K5*QjblSjm^4hC1G9D?i)Ku<]5
%B'ng4UYW%YGHH7>k2)Ok(O]IkT@p$D=o3GlDe&2#lqHTI'gGuQ]X$?RHMmJUp&="3RuN'n>;)W*?XK=kq6L"brSI,AQ[#Y(AELh`
%Huct[3W!@Mjl+6-LTbLfT2'=<mlnGZgS`Y!P=%p3/=uOkZg"F[mb,;"%V>H"gUXS6o@`*gpKogjm.0J%qt6fINL-j6cGl3I46=`?
%nDJ8,0j&k=q8T&^h#.3=]kNfS[rF>(4m2T)d)i%NZGUZl8)&k6M;FKP[Uj<a]J7olP%\i4-q]Ml&'o0DEE/]/L$kNUB1U1*c>3<u
%F'f!q=DLFc_8#pI8&%1`q+lJ/b9-\&n\>"XhgbIJ^\mOBJ+cZVq+pJW_cq'Yg[Dn)lh6N,55Ea<s7#QF^T'MDo_6,sjne6mm5)NR
%pq-@0[pT*j>Kbe$(B.:iI_U@#hqihOMtd52SaYD5a7nHdl1a'6n=;fCo!Qg$rV#.Krk%XMGQ7&;hL4_eYQ"+K:S)t3iHsHBJ,^VI
%HfK>Mq>L&:qp)tVlFk7,rnt-Wdi\V?^&R\"J,&X05Q8\Fs68.=^%"j6TDA0GT7$RnYCBb`q>4M`rqM75r_<CF+9(o%?[hb"+8k8b
%c[L?B_0>qFs-+%CoS<0)r88+#oC]TM^2rc'hgYUSe%bkTh1,G'UYe91nS>&[\W=N#cL:`gI.G>8IItPjJ,&omrq63D^VBHa^#/hg
%pE+k`_`rPG%qkpp54aOOr8RSqro(Ot]lX%fUNc0n5K5e\+9)&YDu]Ok5MdpJH11I[Hggq.p7&7sEr5bnT76OL?Ai`Nq-UTP]$LBA
%O2$$^IcpaDq;Lf2r7f!$s6Db]rV*eX\b"pPDuJt=+2%R'>9CTZdJIj1q"Qom^3s=;n`9ZBRIbX:E5+JaoUg'Yq'c:7-\)!V=6Ice
%Nukt6]@ZJjs&d_*\,Q'0Dqr$UlN_?X*.IV=k9'`pf>%.Pj3Kpgp[CcDiQY/Iq9D4]roCC=*e!q7n>h=/q"1]W4a@"Uqk$$#HnYKu
%[3+3$eU-3Rh7\TY3'f7s;h"'1bs/o5qsQ`De*!@9q6-Ems*4R=cee]LlfGH+rq-#Wqu?6I?e,#qI-L&_q"rr2pu-jTs-IpN4SY]O
%aaZGNVcVK"HMHNMEkd*Krk7E#+8p7@Hh-AbIMRD2kgL&lpb/9:jd6#:q-3=CriaWiIJ;Lrd6@0ZotPsCrqk;chYI&hh[X:C+925k
%+5VKpq`Eo;?bH*Ta6Wd&Tiqi:;1R=fEoTY(O3ANNM]0KV<;%_PEZ<niJ>Hn>!8*]$mQLL7rYJAUc6%IK_O"B`J+MW32fO9E`Z2?3
%gAO*W^:O450CM-9p\Fd"YA]"-T%9*,IqLMOhD!UtT$-/T?GH0.TA5`g;Y(?NQ*uEch>*Rn9CL]Me.?t\.*,m3X`W[fNugJGVu-NZ
%HM$BUHi``XA9-1M7fs_\MV,Lq:\qN8/A1Z>rk1t\CJt2'-[-V\e5k]ef8"Hk>ii`5h2&?LaDm'q9tKi^j#`l_rj7j<!K$l)6[_4d
%/b1g`m]s,\Y^;^kr^b_7['fo+h%/DXGPBEm#^uHr[\%HmH$oA+P>CZ(kYW'R^:=%C>O%+cJ,]*._])t<6"o5:3tH7;f=f0.e@r]^
%/Dp7)s,s]U[dT.\p9P_,I6e=OIt#6,VM>-AkfXp;[gdQAdDHoIGo'C<\C"*60Bq=\Y'7d"pj^$*5!0a.fZ&F$aWiWaIeUiF$IlY.
%j8L(%pD:d%[l%o)MF3N@q"">]FSO+95GAtqD2c6b^Xr2,Q`\l#51U5"qr5V^%mNGTPd:`mZg<S#o(h<mT0LTF4Y>XI:[s/'5%9jU
%,>6@eic!`QjQH$@4``R=Y]1sb0E1C9%b3kPmX0'Lc-(O8;Y8ecpE%s.a/;U">LY*rrj&O#l/OjT;,[(ZpE#@Ir_)M24(!HhcGNF!
%4acfY[ZK.n;gulehF47-F<T^31=D0hRGQiW_uj7lP*pd6CT_hCb63@Thg'8:h+te5nDV8Hp[63U5A_gXe5'eUm=Gg3/P,dPhF8Z'
%=T3N*Xre\/>gL7XQX;j,Y0EK]7VD-O)p@'gQrqi!hdPZ%N+Gqtb6@DGg[5%,]?a.\)I#5We/-@$;^1fdhq%G-c+^o.lDXV4EiFMm
%S\E#:JAD78''pu?\7g!Pc]9,sAls7>oEJO!7-ET)"O"LXiM5@fGK58Wc[+.'$BEZ];/Q?)UT;YBHg4QPT=\TWpbA%\<e9TT0=b>%
%cbK9QP6(*"HuHMKYI<N<c4T6-lBc$l6i.7Ei.K/*m?Yr*O,C[gXO8mqnZSQLIe;Ti-`9%U\bl/[CJBsIi6)A:TbG&#50Lh2,kYde
%l&h.ubZfAAl-%klgV`r*f?g*9/R5fdT&CA(hnQbVlFueq+EUbZ^*mn`4E"-gQI7[f\!:CeF)*1oZ>GOJ>a4lSo"O_kSb'9=T^a(0
%^cU&0?b_*jS\+ZQ8]J,=P>*799n'NPOPpYOno'pIEHFT./YM74^$0F!MZ;XP]]DTaHM[,8J+osmmDeB6.I4*;7sQoIHh0bKDL_P5
%K"q9<%CQTp[p.hc`n_n^n2:pU;<#IMr:sQHpSI\X]CGa\Or3_*nS=jh58P-rRecp*2=^9ZCW_p6Ug%mk9@a>o2:LYC^$qJ;=p*%(
%nDIN#2j,10H8;ET@(lc5C4H/`^O,ERJ%+9ZosGaRq).QmUG&*)$WCnp]*U[tr__DQ5K"!%6fH4<qtj`Lq#6JdreuWLdA*I1PW#dW
%9YF0hl^=ejDm]M@*I'>I0OVO-[+.CTBT'QMZOJ7mZj%`p]^a#-kA@!/rFcP9mb9;fEY_!/q]'h<aaggHiDT.kp";:p47tO+^o7FE
%9E#KI8c:/g^CAs.4;lN>ln[oRFnk+H`f94j&#B/=h`TW$q\EOTO7fTMdYM43VkZ.8Hdnbjj/&ENr\BM&m;q'6p8H[4KhK7Ke7Us(
%VS?O@jJ^`aq*X'doktfcdm^_Jm8:2Q]*s$X*PQg+EQ>>QG2n%ZD]WcMI>]cCW3,AgaMgq&9e^q@S,qZHTYXsS3AV\9>KiZogUD,N
%pi8Dh#K1^Bf\^_fCk)@+n8^Q;kJ?f:D)$COCpu%7?;>EW*c+k;8^e1)0CmA_Xh&<:jd[p;T#KcfUEu!b=Tsl+eiK@q"3a_m$-13\
%2/XO`W(atC-.pE*/'`e3B.uR34INqYKAS>[?[_O8Y.5!PO-8bU`R)fmkfs(Glt=>@FkSG5c%BlDD<iLQVc_DNofc(IBn5mo,m2.[
%6!O;!E%'K(\-),<ZJ>nTJhO+L/Cp6gL'`rOA\7"6JX=m$+j69+\fGIFQgNI;fLtN!c(g7[UqUP%mT9;JdC.l?pgSTo(+>Q@ZE"T+
%H^?V="/%NLZkPD[jdJ?:'(?uh'7O*MJ^nJ)ZL$)RPBNT^\TqnY]V[G)dUUX'B>`/URK[2o3ZPsd[h$Me@FJZ>a9Ag&(oUcj5fD%B
%`g?_WrH\5"r`^IodLBJhP-+%$L=O=<&(=Te+tkV(&=9`i6h:/LIJa%8lT8dASWC8_/R>]8%[VfTa,1pu!807?3apu]kmkaReFq'h
%dDp0Sk$S/MGOPIk]<@\=4`doPD*;Z/Cq2ZDB:.TLoqfYn:W,4oEhX9pMJ_N#9Rorf4&CD8Hl]8slRf_`2A<gjYuEi9?M7!>rn]$q
%oS`V0+2.2W]2FWg]8SVh.7\Z*qCJes3I67%_,=_/8reU"dDE$PnD+S]r6LDt;XE^O\te].Er0eU(7piY.Hnr]bBru%^%oKsoqua,
%Vkp/*$0t29Rc5e,h\(fRaDGnY#-X!O_G;mDqT?2;jq2MD;.(TEBhrP_*q>JCM_B-;&,QmGG">.7`aG:G!.NTOqQmY\r6mU=pT$NL
%s5I+.7BM27I<$X(/PBT.cFG8A3B$Z9orP9-<q'Y92PRdKmKJ^;LS1XGdMD.f":[O5K8!$TD'Kk4;^5YmEa>$!qB_\XhcQ\F%j.+D
%!3+Z^6pWVBXaUP)*@lFqJd*<V_8=[L*KK0YmB;qR?:U(`jXfEEa([uK5>*`U>>mi"Gbb*YppI3ed0LY<1^4?696W4QUUIpDJ`f):
%L<o0g0(!%B/%W`DNnq?*'srlXWZQh"bDI@#TYX-.Yjf;I8)lRDqeK4jY&,EiMo1aCELN0No@^^PH%RS[L9B&;_67?S%n?WumpHP>
%Segg7*(OjqI:e&DnFIY]]G-KM<gUBEXD)1MlO*3PU8L?tCIGa\aLaSJacH&K#e5p#Yr&VZ1Si9;IQ\'3m'cJF\^F5>lInpJs1[m(
%@o-p4%U-M@>MqU3nM&bPG,$]MFnNs)a0+J-]!?AB[?O-Ul[#uNlRQUnM=$AXrhr"2Eo-*3fEdoL?#An^GV&#Y#U7515.&1\lOBqc
%/MX_G*\G3U^A?F\g8$AU\q*\sp32J3'PgtbC#OrOPtX`*Z#)=)cdk"?Eun_fZ-ilHr0(il>%?)9JI4"1Jf[DKE[J`"Zdan4%77aA
%EdU3W[9,C]H"l;W]=`u/c6@,X[0Ecn^p\a^S^nF-NF4VY$8g!XPU$:.<ooO=Kr!aGOr'(a%55;8,p3>?j4;UEcPs\Rq(1UfWIm4=
%`ID8]/Do1,?i/%b7GhO1;_:8gM/9p@Ta>W8c:!FLkZ/O5=%>ue&IUT1ZP+$g4(0_CeL#FN,pZc*I*bm*2pTh"[eC`+Yf4V4>#VhG
%M>\"3BaWXT+*!?ecHr'/h,F`i5qY#kG=i2m:]Ad1Bc95/<"S=iCEuna.e[B)fKa0BVa/u=Ws^Zg`nDtCGb#WJb?0"%Q,6mL/d=bi
%=hi,$70QE+F&t_Pj#`maJ&*CTf>OSu3$g'c/83+^GO_a@`*3d0H]@k2!\n0s+80=W2?;WX5]$JYa_8_OO>R]f=kbQ'R:a>i*8!Pb
%oP@NCIogljYp-ojD+@,&e9o8e=.ms&\e&FNbk)Z&KG6'>%:SqZX#4b02R@[?6C*%\YB*E.BQT7u^+Qg1__tA3"U2^=D*DD'm0L8D
%HTYaj:^9?,='uXX]*/cMA+dEhKRe-:q<X!JLd*DJ/(,8e;h)8l]-..T8%.!:!"<fXJ<8&Sb1R>VcmITq57rFc!maafRO#j+Yi)f"
%!(E+P(p"ANZrE?#%X._UWS&86e8*lD6cc^g(lt3eh$D:$a(H.jp"T(V^jc8SAL(GD:,]\i#`4l=hn$-*A_1CNpoGn^$D<1u!=B/C
%BMGnPCJI!?d1Im.)M!in,#"c!G$_W'DN%(B+SeLcR<88Y=PX)!R!(F^#QJt2>MC8ekO]'N34=,$>^uhH.CQu!fg&$+/B8-/*K(Qb
%n.qJ>`ir+teVmA(>a%QB3t@7P[Uj#:S/VJeJ.;`bEch.5N/E<mYGL[p+1Rf"Q?Yhp0=B=^fmjnnd4,bR-ibAuQW"d+hnUKEo9(lt
%Ymf'/imr-TGRL^SWT9GK=r`GCNdHg]>ns$hUXMEZ;Jd3b6?5.&9<h#,.\APOT_c\qP?^K4U(p(jIB@MeU^6W6etD(tZ.AG'6>"WI
%,:ap/82,bMpXs!e'GkhC6+9Y"N)O[(2X2'DbgY&8f+B?VDF9j*qVMH\QPO1+\SZR(RY6&Iea"d)f]D#%[`t*9=l>/*#l:/4Fj.dQ
%7^5FaCLQq@5`0J:]WFul'oS'CE5ddm1#^+^!0EaaU?uDq/^he=[7\+B2Z=cOGL/Gn_kK^N^/>JN>aTR:f4h/e>9f/Nod#,!cP_8%
%(Zk^7P!!l]mFfXX-EO7iJs8ul#m$8/R;Olg$`%1`%GNl*n&62']VL+<+0O`C2l,ht^3<U"BLp)Gk4276#r8=-7;%:)[MgG<hG"1B
%Rpse)P*i!\jpE!ef*cUSM!`aF-AS8\Sbn0*O*98a>jFGP@uUI;GiF06QV9sZfF]S"p'Cm@[B4RF*b109('F`IG++$3WH;>G*\C5e
%UJ[[k?"W@E&C5GkLr8F<QCp*\lX2jL&*SAh&f^]W6qZLV)P8ZbKmDZMUMXlN[>j9\rN`\sZP<i9"?(t:VR"l3<=\BFAD8^[H0rl@
%W/GiD9'qL0gC0&Tp\qW.-JQ2;c/,i>?)8jh`'kU(b-KHIKI/SZiT#mWJ'LDdF4Ug,m,K^6kg^H0L0BMR[Es$E&IAc/%UG8dQA*r*
%.GnHB?g?tABE1Q'e.fY93otCAj3]9Ek1<dH*OqAJV[!P_l%anW2*EV13]rP;[@Ob5:;n,C$+Z84f[O@QX'^+tOU--U2T/(_G`F6n
%#!c5(1.&R`6/'WY;QW=RO+M6*OR25i\!'4S^`$?Y"XcrsV-rpF"\T8)f,>e%O$sV=0<n9t!**6V"nk9">&s%A-7kFE[btC9#l>\$
%ZqY,o%ma>.]-F`N-<Dgbfb:q.A!cU+FAX\)Z);I@TWt;h.alou`%i'CJ&Eu4L\:b,[*=oJe?<93/#]Eub2T^I+,]e]Oa6f!=G?D(
%KcQMQ`on8/#hWeuOdk1B%sDtT03pb"2D##S-&p-6OBck>#ZUX5Q6ndqmk4[c_J/[1Yk?c$Kd1KB91Ro>^!U<PedK9m9A?_t',67*
%\iT*1$@;:%o/&;C19rNGRWf<)I,9C5]WbWDC@*g0X7Ql9WD+t+I^13=X9**>#bT0N'-43jb$%W'/C:V>GNK^rq7[HZJ2NeiYZ!)M
%H\'1UWq2\Arh>Cb@3B5:O\nQSq?aP#^7.H[@V`N&O"W9fk+ckn>umHfQh\UFkaut-'Ib8uf:iZ1n(rq;:t'ca#F8U&Roqabq*%U^
%G5TX43gN.60#Q;GlaE86[-XOL2/Tt(H9LRH%s2IAjT_o"iC2:4g3?Kf3`]S:]8iHVB^q-Bae?]*_H4,?ilfr[qP*+0mCqfQ2(cRk
%8r/1BhfneO$,2i3(`g5K%@@BB*@ig6W*ILUI'>[JSsDa%Y_=IqFD)BnHsd`pHqhd<Z>U`8L=,"gXM_a2`]f?b**A"K4H\tt.l#ra
%4#,Z/>)H1"D_#Gl>1V\>F_`Wo>5J[5acY];_H4)b@tq1"4\!]^foOP:CKcg43c\n(T&?YPP.>)SZ6c:226Ft?)g*`Zng1[(^p;2J
%2/LI<icVBHW-U&m1+HVV_Mho0e&L0UBPV2A(9_4\`[J!$Bh$)-fp^=ACKd3QS3)'RqJot`Sm\rZS%X$))S>SQJNL/%,M;4K(2-[\
%V@=GDY@iRORb+f3UZR+R)Y!E9dG1#Q=JP\]4*rg%f<Rs=i3$LP7`DK0g0f!jN\&XLqb$UTY`f.sFUrQKg8K9Bf<A0Els7Y,c2G87
%V>=S1a(J1ma-"mjnBPn\E+c]c\@5`G4g86OprImnpqVK@7Lj7e7pXuTmZB)jHaU1l1ON2L2@k1Jd:W/W2JlDVY\G6hk406MZ>]o[
%VMuOgU=ZbmF-PoHm+bk93gO[5]U#Z='sD9;`nVWf]Br3q!#qF%B)`oT^)=YNm@2_s>1RV`cth=LV^]<J"oN$@0&?2Uf'iuHdl61e
%MtdEZWc_ti\+$c;LR.J0D)HrA*B]'8N>u'A/\L?+JX-.@$4j9#(,kl,^]tWr^]uc=^^!n]DYmU\F0<*\S0RItHF@nE4KtCZ5-U[N
%GBOaD$dU>EA4<,Vi&qO3rpd06s3Km.'E2qLO/!9NMuL/Ye%^;#OjfXDF):Cm)o`dBDA"#21^R2MUX!Z$e0%kWC2/>L&`S/$=rZWP
%bmTiHg5m85kEk,ZbDU5N[Q+ElX:St[d-[\d(>+eT=4YC..S;P;*eVCI[W*Z[97V&pQH#uZfYEm=!5^):R+;89<abO3(@nSR45>o,
%cnALNgQrPe*A_mNL>uMW)f2'?@%1^"Dh;(1B%o2D!SUe[H,N_s-?F@IkM,2>?TipCc,Sqt$#9KAIAK-9"jE@P)I4JYQ:eLKo")ub
%;J<\OXK6Vu,<$NI^j@2I@Q)e,?3TP6fJZ>[KiSU'mC&c-oJ`#&g1QKj)8c?)h/SmYO'n;iJdq*u[Ai*q%#3WUQN:K6hXe*5o`R01
%3`0a&$<52i%`'E1%:YfZ$,BuS)DR?8CqQ[F95O^RRem7(>F/&-a<,]hX]%".Ok8lCHfZ==3j=mV`"PX^-eN8Sj9$+aeoL*9MGDVm
%iU\*;9ED*@$]E*$OE4*N=u.F.%%tHXd7:35+g&PB?);"/OM_5%nb:asWP)?m&VN"KOD00p'iU1IYdQ@g2D[=XS4(Z>K[]#:g*W.S
%]JbS!Bk]g8?1s8SQ."6Z6I:lEobHkK/n;>hC%==PPR<6JQi.70L#VDXJr9!r[8UA#@d-pbFc<8abgktH-9]t'X9"E7>C%eWg9g'%
%^</&aqCK9[mB$-=^%&4C%b=O&HRcQ8g6Pprl%Sl7nfk3@%B'6o',MhP99H[1<r,X."6>@Ko1^^r%ttTAh"9H^m^3_]K7kD"2Z4\&
%7YbZ4_WJpW0h5TSW@>pj:mYtP#rp8+&.DQ5Dh0hZJtN2@XLb^[5R!'?8"r=-HNKL<H/q.I=T_S2,?t1KDY!r][8PKtne/g?L=;&5
%2cZ3q0)N?qfT3GfdY<#PSJ8MLN"b?HbdR'g7\YFC,:aFlRQ^e3Zu\"8f>]qXO]%,pXf^cne\]1F',YDGW/sV8g?/)??aoZ<%`7mL
%3a%^N4Q''2-4C_PdDV<73n]9=!%o%S85&'XJ'J)[j9#F`Jd_aJ6bu,ee<?=1cuq_p(tTBO0sRB`BFtUHEMcMh;BN0tTgpT@mZ>p.
%WO[aO?BtY9+<(r*<R<V0B455#X_\\cbI-o4c0^PrUiqhtU=0a$>W#JZE3]f[3Ns=8Pr?.\B8EXJhea*;hjspcCaZhE[h9=\\h-D<
%U31WNM.X:=N(PT8]710sWJRS9*Y&R/DIH;joS>nFFf=0JK$CUJdm,&ZkbE'D]9kpH&gQqP`Q+8+,;*hh`8&ob<=`.2nSuVkpdnMW
%dUc<M:YW-RT[k0l3\X[X"-4.>Ku=rV"E'$sj'YPRkoX7QaW>4hUWZ@8ToE2"(]hY'cL'8KgRW\/_s@1(W3?:Kg!k^h&jta/6]"89
%I-m+,ZUt=I$2kjIn=C2R/S$/D9@P;DW:9).&Qe=XJ.7#JnD&)@aAoKD`tG=XJjCO-ONH^FV?78[GN/#53ju+oH1t=k4Y^D$@u__V
%UHCaHm":dA$%n[2i0]#(n`1h"T1ts!oUF(8Ts2[)>,p?kTWG&R%KbEW-Z1<D:3F[-dssne'9hCt%QJKW#s^)MF'#[s'DUd#i+,5i
%J9+DM;j$qdNOLh=)RG24KAT<RFR3$fE#!&gQ+0F4_B?=tL&2:T-!YsX8jIA$1cC*ul*hKM=7D=n3SL-KNHrOjf0ET-(^5F)-=fZW
%E(=AjN>#;9?V?GZ%ZtT5pgBs2_3Iuo0%7Ip)_.F'ZO.Qdh4b/pIKSs]4-!g20]a$6@r2i%6eXPW*pN+kN)c%M+L\Gr.X)DBrI'8)
%gZ53nrI`stbXkMM,#?-T3k3e?k=l9hPt8X/m),(ILusmf%3Qt<rJc=4b]AAkP9q].DObbo(MRZKR"=/%NE6B>KtV,7;t9o&3Hf@N
%3L4P2re:9$9;YLOJo__o(>QhW,(/G'l?sND%u,6g31nki6Ab<NFaoh8Htd0Zb[Rf=#Fma>\69$9lU(/mbDCTS9il>1qp;_3^tq3c
%p"X-HL/FJ)?mirBE!*bn@sTpZ<$6%UD0bhnO?+\[Vj87+L37_*-3=pN*]RR63go]_Fs8hJ&_)AnVJ.OLU*\6=.bk=X`^lPh0W6Fg
%YQ\>A1/S;-L"YSn_t2;OAcpb=4,KfZ&BRf%[GJg8:14]ds-1Nr8sj]JUd81cmSq!VGuRKbJrRBZW\r56X,(_ka2pW8KDL-:X,UqW
%\sK*N#lsqDpRp]#H.Y/@2,.g5ZtaFN!qh:jji5W(F>,P37Z%D2WXT$BUB+(X7]h?M[n[>@1KW9XK\W.MQIsA>@IWQbj=dHS+kjXU
%BTAI"Lq=+0kHBZV(X=[5.7fO96^ZY,iBtISXORiSY7C@nZr!Ni/%<r_m7II2.r,p.a))XF&m\OPY0@/RV^dP2$nPZgT\MV.bCPDp
%p0C-]IG:i/!0+g?W^s:7O9jLen1Df#MG:j-_bKHl#<N&u>p7U''UUPInX+Zi-<1F0Q5>g&@J#-G8&9JX?7X]R5SdX<eeR/"$gC0_
%0uFVjX'XGLW^,P\U0`a3HRLhNcI2(]V_7&CY,=MB<?Xm$d+tsmE/KfTl$*<?(c!TJZ6p%G^9CR''I#?a_Rb)g1F#.hSXe99,mhJX
%Y"A%UOBqqrL[ESM$J$,NJm?S)DA(!QGfmBi.=3D9=\m.3.MF'5kSI@X;Mg\0#p"OG<>KY9Q3NshZ:^6(ZiNHZ6"_>OpJ'=OBpp6I
%/,Il-=#"d+RHPkE%pgeF[E)nZ=%JW)5=1(\K-aVtGOhsM/%@d2")IcYFpd'0VV64R;;54&&3LKU%*QLOMpV*8VN=Hcidf\/Q)okn
%;lpCm@]1W63KB+GRr',@ke&>Y)MP>ie$un+!1U?&1)WpI-kpbA7N#+;Nj+ef6,M>$B,7WcKK>^7',9I3CLP!*"5/'9rAoH[1SaHs
%>`LPn'<->3JZEspLr%g8`[&"GbaJ5,/SX1:.^4[PG=r:`(graFa=%<;Cc#*W\&Z..)D>Le\`Kl-O.Wa@Zsi#>ShPg_a/jZ2Kj((*
%o$t.P,\?f:MVpCrCitF\Cb`AQ2=[X4#(]D\&_gKf*Tt.HRBNcaZ!"fpKXsPYJFM)(`kNfK?PUBIeU\$6KkuR4"Q?C3m!?3;I'rVP
%Y119g0aK6RC_c++aR\:tX(8)?q/ERgJJkmWYg-;$Ps]Qr>K'3r^hD@MN7F:=@B0["LA3;.F"M2dY["T<"h?It&:=O>.p$#'4J-2c
%0V-*I3S5g`<`kWhMQ>74eM`=7Z(sA3.f$$lWb`D%GugK'Xfe&*)CMu)-5K8[>K&9M?c"TRp[H$<[b>>k[S8@cc2gd&@B0CZG%N:4
%Kg1\(/US;)7*jj%Z.8AK\Z.oLWUA'%jf5HK,]$ScMNs&r0j;`@FrBGB=DKTXb>hUT!Z2H$X^W(m_c>g-@B'AHSr+bO5UX`R=%I""
%=mCl(gR8@?7?@RQWF`%<A!o_e.[IN?<E\Se$qiGpZd]19%C7NW7JHsVgkMZbqp<!0V7-@h9@`jm9_&3S%<*FTY#;l'gQ4+-N%O)J
%rf(gJ9`f.B^@/sW2aJUEhD]Tk?t;Y?]*Z4%9g</$_/BqmN7fI9,]Ck@>Ci8,7:S9--_9lC@lFG.-31KD"IQiSZ(!/7G*@KFrRpDn
%cB^4>_tHonp@\]c4$:MR!fWZ!'387N&]4p*&u$:>0P62R222c<$jE>]i?XMK9+<9'Ps#)Ihq'o0%ia"XLb3of(GY2\_b&'R3j.lt
%7_S+IMYW.ZQ!M@6D<i`B-[+oe"c^FPJ6-_.o-gg-2!-g3WnSAuG)kU8ST?h%+?j`f)tZ`tAA4CMFZ2':HQ>U3?V&n\P51R!eXahG
%r&*9OW-02:1=s.D9::-P<MqTJn<MhPP$%E-Nodu%=*6*9&$P8'k"34kH^V&PD&pjUf[X9Okk]FlbWOse]:&JA=*HLqSU+:;1JcTP
%S]shrY3^$i,#JS_B>/#&A]HUaH+UZRR4lNbg%ii.$*WWC`n7HQJ4?q^\=iY,g=?ST4l<iE4*kI.1p>K\?-tbJ=*I-/hUUH04Fp^l
%1q.U=QS`pbb"h3gNP1luR]#_VcKSDJ?dClpYO*@[*PJ2*RV1]]:?kKHo_7cg^/fJYL\31,O'L8kf%$>BW-8][26's"ER!%BlIIJp
%O.=f+2(BDGfK6;Th70[,gcD^:k>ue9o0cm7OaVHZDXYpV\p%l[rPG[8qj#o+DJc%na#;;8CRZsYDOfG]p[7F$hPsiKoJ5^_c2GfP
%,=a\f=*A_-[4=>N?b(S:GP<VsNu[!]_`Usr(;4RnFag*F^&+9PYAG<<Ho#X*!b_/J:@M>&+1]3*]t,HdQ.ng3n5jKL3Q(Y>h<YV9
%R%+P+]tIpG_6%LCdB.K&hu:3mH^q9N?.hNh\)jd\,"K?436?H_YO!V!DI2-rc?$X@Q!74iqA-br]:9](aprK!Y:I6/?b(SJV`F&0
%h<'Z&h/WG:mH_:-H)@b04FcJdp"\_8DsK[GT?fZ53,k\bC0fY\c9o=O1VI_GNB@*(gIDbH^6,S`;We^9Ff0O5(ftm]o>\JLA,W_1
%UQ^V,DrP'Aaj/N;[Vg7XYO6)e%UIo@NdB;r[\MR5h%"PqE4;dWgk"mambF@mgE#4tnSZ.1FWNO"/NWWAmsqmG]&75n=e5&cgqJXb
%rohM`JNFp*ffS74h7DZu?H4LUHIm,Z^N03tNd9-dNbb6P?.h7<b3`uTkBVro%XO%.bksLsH=!eU]'3)X3f\MmY,f2"?b(UGXFK@*
%p"]5=GBJ[(cd\4cp3[2AW_RoT,J8$N+.UV>00aF5o@^^d"/!'P<F,BJ,Gm%?5B,Y(GH^;Qk=p&@=+7%^=*E_I]rSa90=_\0GO,FE
%\ndpRD4UQ_?J3#QC=dIpo*+t@]D,6?n)O_bGOlbq@^/G+IR^flIR^g7Id-]/*WA0$=*==GmrJ6gNE5uM2q..95Q'_ek:_$$hn7Wn
%2su-8miau1MuS\8!dE[:q\,BEnC2:ODo+_6++EPE??NI-3*l<2f_9jdo@&&)rohArDnLDnItG<2g5R2]*kpm)gT>Gl(\?s$bDk-D
%O5Klg]T:4eh"qh/ma1qjpe.fm7qDD3HJFI@.9DO'BQTkW0Ek5V9Es#Ca/Ek5j,56n\ad?l+$R7*l9"J7o_(A=hYI*;]79YSmQ>fD
%&f+!KM$F>&GRB4V;&b!9NIB/H^Fi$e[GN=+'kF)ic#s)0KZJ\#N"n;+2V'$4;#<Xl*@u^d(accW)Mu(oO=t3gN9sf^CkVWK,E*1T
%OPAo0_P=cWT0UKu7qbAQ,)'1HVjIBs5\,HkM"8486=%ooCN!YbbM%1M+NbO0+`MN*gqr7fBC8W]`gg1s<YV1$oMY>?,ga[Sc=C+O
%p'aECTGEX,9qh<,VDm`'&-_.-Et$H?Hh@j%X*^47'qHMjr:Bor+JHJpJ2-:+;5.?R?2u:DU4I3%h$n\A%-8N*/7@_Sb+K64[[+c\
%.9kMVR5a&<Sl7j2.nem4ljTR^Zg++me%?F.mNF?32TYFNrIE(RkF9h<5]JV!+(2HWcU`IQeJJ2n[P&q>;@(<o(eUb34j@Y:!bTft
%AKr$"&j#;93]OFS/g1;XksPMG;bGHgi];kqqQR,Mi`DQ86`;1BVa<cSjERk<9nAGXY:(O9?DZ!R>]>=!$IYWOR+,)KS9)LK8-kCG
%i=6$U@HZ?m"T%"\DN>&LS3O8E:Q1HrAZgI^q5-UI>MPm%)C[67:(+Hf"a<etq-h$]47pH>Hua;q4]6ksSuM3#4O":h_.+aEV%7a>
%V`bA8,#t$t?ZEm^O7lgTTk/S<f"m1Qd,&KH\d9?HE?IY:'S2L^Z8KIKD"fjRk_`=J,eH!Yn'#1/!`BYGqB/HJ.HMca#6HQGnA*OZ
%Z[pEtplb&\$P$4dRTl11+I84;@_S<O4!_4\+O^Yna;BOuFJq"<'Ol[(,DPEc6ZTD9UDW!kXJ#-NQgU.V>NLBc4XWfX`(FPqP)E^8
%Tmk&-1oQ1h.7BKDMX9efN*VY:G0o;k$?'#nE\:7J.V'm7#IR;2,EGrkV\.=;0euXpR&bVgTj+kQ)U,ctKMlRP\^<mke,8<(Lqq'H
%U/h6;#!H5mSKS`n`n:Xk,f=S"r&dCQkR<<`G_#4^s8V;hU(l[g.*bq;0hn^q%_hO_BpG\BNfiNt6\>rj"%\Gg:nBM2AoNt/7>VKn
%lCWqX,0aOU+WI\(TZQN6+u;j((cA[27X7>Y%Odn1n<i,GW/H?`+#*H_o5"c"Ics:;()ff7U8Ejj,u0tV&Sd0\K^stAL^dS$ktj_!
%UE^N"oGhQ0]>,,V(_PMmKa-"&eFq:68)6V4=gS8\H5U";#3PI45)8%X_T.?@e^)g7E-l`:s2X$.IJ`^/o1*.OI)8*sp>pog&,FPD
%b9(ZYIJh&/q>9]WO71o>q_ZLAVGCP_>IVZfFkb_):UM20a8E$kE@5']PS*odg5YR7oAoGTLS*@Hoo1oab^B6Em70t?T^:Hf9o;EG
%b<D-[$E5CuRp,\goM*.P)uJ+bXX-U*+/==6qc#g-n4Z>)`%f,Z2!:p_L=V(6A4BYsl(F4S$=-4)Kau:f&je2j*'uCk&SX'<.Oejk
%n"K`7F8g&I?+9?W$s,9BICMDVhi3$\5U"X2CP0%';,B@f._cnCIb17@6+B$4R6JVE.$o*/S+4?#O]T^n!h=X+Q:#3R&n"TJW=+J*
%kle7PdkltZ!gF>g;M1'pJ:tRWM(s((.m".R3p3O85*79"_Z=XTR-qfj%o96T(7g"#][FBF<TMa3`Ih/?$b!1!8UUlD:X+d<4]3B=
%dW^I54q0Re:qCC_'BD(@Cr'Hed0rnQpTTb>`ZQ*<ipdS'@*6FqF*k3p.3tNS>t%,I*(#7'97&cnQP7r)%WP/d,D9#8pMug%p-%Y.
%KapQFoBmS]VreTL:M0hi/p]9GO3]/;<u:rt550VeSZ8MS'=@X\9QZa?f!bJP!f8(47;/H.^&Tp*"3;^71;c/_.#np#H>+RJ8b?PR
%?&;+V>0COT.d7cRO_c*_1M3X#@]Dt@a?rl8fs:dXTrY9CBItek>e&I#*(dPCTS:]Z;M?YmoT5f,^7R!2bcV_UCsndgEA=D.)f.<_
%\XRB$8ogqc\i(m3?TRYBWA=eu94YP+Z@?lGKZSCBouQ+cc9c&&VQkCCh=[;T%UW\rF_sHP(n7tVa9;at>hPj&`72%qA>7;*iXT>b
%2b\!qOWC=RBc5nUplepMO@heGOer"?RPU&e6j&_RBkq2iqpD!B15XuSP=YU5+EiF`Y2RGuRgQ2[b7M*JT"Bhs69W)i[6s2AR\F6X
%nhWRRqI.S-&ID>$I#8s_UbhE"p_SCM7uMPTJd-@)!=H=QAj0Jsj=<Wj)*?RG)fB7XHpm+l';$W3oM+/P4d(X@i]WXU_$#40OH,L4
%2cslIk1_DAEt[1sZZ<#'%/&isB]d:/+Ir8<`XUGNF&_$7f!QG_D'*a8R,%g!SrV5&7m_K.:'Go`[X7:"\^LpcD<f!lb1fX2J+s?M
%rSA>b\+ofAR/.9C@GI:`1D4=@L82JOOtc,CMHYEs><#+PqH=:omW0,l,+YG5N)I`hU4?^tSX@dG!7Z-$JSoJ`%1:0X2T^().k^$8
%#rf<N;L:F`e\3J.?0W/\^9L$+d=l(a^>aa@e?CBh9BlDMaRWU36'$Th:X%aR_<t#OF[PC6+VFj0DR_.FS(jTd..UE4hW(F`@4GA=
%ZtkE-clD)-<t<RjUGE1/Y)(@7`H(Abgn90GE`o*>\6rBSCdEAabsJsfBVo]a6+W&>Enl*fo?1?Z5nRB3'U*_F3p20]U7OnA>Rj+.
%&6/rDKR7W8G=(Q$cHnj_iKuD^(1]bL^.$aX'-blkN:NCI*/]LRM>Mil&n=,XQJ7De&5(cC0VdBZ(:@cKOmR[[OJ=7\qsb$(8pL,m
%,D*do%VBfV_50umRBn5Z9S#NeH\/jI7/R1^cW[^%b#9FFM.`'N"j[[@*ru%;d?>*NS>'I)Z)F"WW>s$Z(9/8;Rd2#b&TQn4%;G4\
%r@nZeNPTa_0_dqD-]k<KK2Qm75lDXZ0(P!\H\/'`9(^5aNkpu#XHfcoW2PZXiZ[Ln&2?<K?$!=6][IY`6XKQu`C8/3%;@\S-=JbF
%f]T-plaR3=/@_DGZ6ZDflQA8)m;mmf&[#rC`0u!SF>'_CIulp84^E_!qWDqoReJ^E9?d<]O&3]7Tp3hg+`-k&G[/\^7mXeLLKIdO
%3:IE4T0;seSf!)4d%r.88C/$FEODeL>u&=4GnTY&CpO_*DB4U(01+(,%HsZ1pV8=R0VsoO]7_/S+bpLM];8"*(;/.2+;]d@A5FNq
%n@4.IXnb`lbu_Se$*\#%?7RHAqDAZ0S3lq]MN/0]F#&X/@%UBBs,IAqL=+J.\6V)?;.<`4`<Ba0HMJV'6I/Jc`DsJ/g3nXj$W#?k
%)YLTHPRU,$W7VO!US-mA7>L-IZ9m_*3/K%!<%\jc25jb2>L=t-/Uf[44#OiC\fCK9b4lF1c"Y"bRhRGC*CiPrDE#VKHp&L]#jWXp
%I>jLq'*enUZ'\[u*eCANE_(F`eOf'i&EoY9hF2T9O+N4,p"AIAWe6HPcucL/CJQ_Q$moVB69!;_b[_MK/MoA=5t,<@XX2YTqGeaq
%RLZ?s_P5ujPgpA:)<(=%$GC>$1Y8CpY)'Gs&ac9d[YJ?Ob[B$+FjsnOleEn!-deYckd3/o9=!6'[mnBQ^BF_ag'ol'H$')cUHeA-
%^UX/R[FDioj37A7coCV*Fr=Bq<_3,=/E9"/daftEW&;AL"qJHcDNq\h4iTL.LtY<e@rNL_h/#r7<&S[q@-#r]"5uEH1Kt56^6E86
%oA-ur53p`.i"3JV2r[OtKVGSZ9c2+m83a05kao4@#-f9;Mf8d.d'%s31D$=I"/5>CU4ClN3^L`Ahc@fEd-PN#'Kgo/.sYJ\3gO/J
%_;NbM.m;g!;qF$:2['_b`OT9H*FD+A"e,_'XBVVS[J*E)gd!=9LS>SMBb?(Onc@+I`4@DMUb^s=#N?P<S>Eor>?mbXm1B7?qNrMP
%76IZ)3mq8*LPY=WEiu<LTO'R[ij'<%jiHU2hr4=+_nq7aAr,=?<?VJsH?e\T75'1+QSq@$2aBuI2*`:p-L3#`PXP))!s:5X^M_1C
%7.LmRI4ZLU$3&kl[$S!Gk`Ds5"=I'Kl(.0-U:d-T`%14pVnH2g4p'b\hNSrbXfJXQj`)EV?GE=KMCHECm9uu*3N<RM3'H8,SDP#[
%Lpr(nq0$`^l?.M]2rt7l?Q?8rcOJ;Q/t",g/Z2EPrPFuu'V`0m'7nF4(#g57$ZGNloU>EnpJahK^*1X%^\=W"`TT>K`%kAY`E0"Z
%17-!6C,AbjgN:a_?VmT6#8#^L^+$>C^$:d5YYt>'>,8>;m(sb>:s@?uc=_KF6oA3LQ/k!%1CS?0`0p3Z*?cl7]t\m/1-ZUMBV21i
%.)ao[dm8^Onl2Kh8+]Au$8gloo4<"Fa/g7G9+2gZUhrHqX<^Q0E=o!7/9,E96?u`e7s(IVg1M^OG)'QUR>J4_T+uTllc%5D',Kr@
%OuVdk7?HpcMiLpPS'rOV43F9Q/YVL\7u3]a7E;M)&2/Xp1f9-j=m79<A&q?.Jn%h0IJ?6mSL?r(X:4(Y(t+8H-r3K(.Yo,`+]dqI
%m;ih!$emBMbd:KZcU$o!/%Zt>Ipueg7-R0*edEXl!K2us7aJqH(uC5iQ/V.ni'ZshGW'2VN)h&S'KL3^%>B+67E5NN5a3eoVD7ej
%i0XS"P4XDYJiAHj^XlIBa>Y`*N,kZNcta>![\%]kE[t>&h`-;3rj,?iX3bakcEMPOmY5lj*K8S:8*flD>n0B:m"]`i*K50p%rK^R
%XO'7oQX,[NWk2-%TgJ+n)++)3g6UJGL-uU!:cSABpRKIcY1%ONl$D"HW`FcZ/cG/g1?Ps9(LO)XYsE"nr;JK%"@A6U2u7OfjlkKX
%a5sZsb=lo'd7u3&42!pU>BF]Q:=XaFdQ(ZnS@M!=e:ja&k(6_p9ddM9O)ZS2bVqF.FZOJ>IR:T#4inE^]e>CdO!oVRE8dA+:BAku
%i[!/N:]qE6X#^%aPd.Cr(@.@6JYhcsUL[`]NRWe36G?q<#,.%hcRT2_9rJ@!S5DIT9B7qo":_,$ildtA>(7_DK!GOnZA@\C3=Cfu
%WG(k?2/'GZ0ku&!Tj+BV3i)=umC>hL>&[#Ig73lh0F`-hUSuua<,7AaYWO6*/P5$1J`:W9=AYQR5bkO>TR_X?`BYMa61<9=a([kn
%O(e]5b[?c?f:Kf8:>RpcCOlP^HtT#]fOiQ+/q1%STnN7bjCW'c5-"hlJq'ReTg>Zt,5>/,@1fmVIo7u#9gYp$@Va=3>FU<DD$iaC
%b$k*@RPU%S<^F8F@9OW1hbTL,SiO*bpo:F]!RGTkim&X!(P6b-2NRp#k=\`@>VW!q.^DBQ%`qKMn_/Xl)i3>qdP#_.=LX\9mRksd
%mE2AEbZ?[;FUOWs((Sfb0JkC,L'BLKqPkaE)43Q;'i-#Rdo]*JB+WH[+U#_;I<FWVQaD+KGX^UqZJk@bYFE#[DV>#t4AIbODDc/k
%n@SE9guZ<-\F[\Qo9\chC<_2PI8;d6:^(l%?YaI^c'@\(`XZ0"e#7^$rq40[Dn78Ko_WZ;gd8Q.S8CH5/J=QP-A:7+GpA>R8<#YG
%m6pH@ULuO^"Vs.!2dMd&'LH)d,d5^c;%Op:mB*2o@_Sk8oF=c+b2(t"OB^gYOGriJWYW-%+h!H$AB<[G%Cu2+O@X<bm"CCNb:<7N
%B^.iug%:hiC'ZMR]1Z&'hb_q5/>O?sjsiI=0Gs()I&mhor75!VFUQ(!UFirOU04+)EsArmSmgnniri#9%HuhSk])u$SVFc7P%X?C
%iM!DCDIbKT[`FOEpt:[s,PTs;K_T)g1WQQ(hnljoo0-Sm[@%Zk\NC"d9[=":4&,A+8n'XmldDFMM[$@%YZpoIAYu7?WQon]<.lnJ
%)@-utl+sW8:gLl5$S2Kba6jk5o5`-r]X]Z2h"6\!8V2#`<OIFmHi71j?`<p,Vk.8VfHRohe2%>o?=P+Bf1R:5iY7K'45)>TC]V,W
%e>(C#C2;IA('t(sL%F;Kh'=rN=Y)<%rq-p5$%a@t>h=AJ^3&XH=?/C?@`XPU"W=SG%O>^AS,p5VdhR=Ha&kf8PNF6-+jDc(F/06$
%h8u^77hP@'!W$\EV@6<[h9^W"53FA>O^TtY/"<%M4o4O57m0_e=*L7kH2R>,.Sijuq6q`N4R3_/:$<IX?A0F<5mMY?\O-g>&qV1!
%[XmV.=K[c2ZuS@pRrNEpm9WSe(`1ef>=gG;+=!#85g),g1Re%A8&iL(rZWi-aS-G#dZ]%:`\SUn\3S,LS.qtJk.uXUo1X0o`_].a
%91N&t'fib6bm'&9LCq\tBZqUZRu4=6Ei2KD46]!#Dc(b?*@8G@";bHaha0L+OG.4_/a=U(S:8BKN-.;Lf2tgr(&(gmc+ft#hpPj^
%\/?T@6)4`Ri'**+4,hqO)8]F=jD9>Z?*K4C$\Y!OV(a/Q]1C9<6;!)@1+OOF28tSGhgJ?m=@=#W#',Wc!Ta[-EM039F[=IX:2"RP
%'Cc:3M^DJ\%@$Y+NAt['Br0K<`RY3uO(ld(3i)rOdH'i^Ip[ktDU0_DoYbg6GQMOM#7/"/C:aq3UIg<q(@*W<g9rOXh);5!+C;=R
%oT]^lh5E>1nF2)iph3+\bHM[A?=S,R!A.i/"A0BHdrW$]pQ=o%l)c/`DPMjV(h3#I?\0M84HHSUpOI'C5BD9Cef,+)+^'j&/5`C5
%8c`")^],7*<3Mksag0fdnAoWG9oW[KPOI]HIBi/5>$6qV7Nl1RPQ[u-#C*jtJ4LPFO*8!R+UKHfl&dHG6RM%q<]p;JJq>?S"!7:m
%Pq1]SS%c,maE-(H7og+;PnM","[op*Dm;RR1P6'cn)gK^9TTI7)&+_[+Ei5k[S$6.rT:,"HH79FkVASB`16t@4/.]`AA;kUl(0dl
%#-f99AQ/@4_72-rA]QNTDETADo)B(HeWnQ&=<aRJ%4mVraU\ep&fMaaIsj)+]1nkJ@c5hB7tg2.^aQVr5kJHQJab-4jTZXM/\[g^
%60Z)(eGrt0>:`]-cD2#jC7uGJU+p0uT`%Up-W?D4dk)CZV.V+4r!7o0ilhIo+[No-9orcKEoM^"Fr!f!0VI8DV*5aSalYUNC+ilN
%?M(8F3b3BHE4J@57Br:mFJCm.1meiOE0/C&'nrG:(hdiL1DgO"Etq@[>;G@WHa8766-329C.i/j$)2X3'KYF$"C6a("]I\m.R)k7
%*qIcSGXZf[S_f$$BO'c/TO-H^B\GB^a#.XjMFoRtEeFBIAE<?L:qaNEkcu;S+Z)+?KZ[o!^i>/0;TP_U:t2@_:irLR3.Q%Dj6254
%3eP^/JYHXKa]KT1e+\OJ&^TBgoOt93gE^fqP*CBL7\YnL[>V2d/2=%kLls[q".MLuRY:/GXdYl4'-:BYl$t?8(\TlDJKXF9'F4]F
%,T5N."rBN_EJ'u1OTFW'(snKM!GGh^8T&JJZqGuNE0CE55Z8;K.*oD:\q<@@6c<SYP8@Xm;dKU"Eu'EW0A5tc$QF2B,^oFgg=JJU
%;U5/T1IrIH4gE<Zb>87)Ph2R=[NQ]K,Q>021aWUeLSKGGbCr80NIcUN`2RD%U:c-5$.$#b2/KXd$dL%@h1C2bct[6[ZdX4B]Jk!u
%%+\:a=6(p=WD_pt6UKnm`41+_S/fh;/7MEO!)Ic^R*(T7!QkC<Ekg[1.Hnc?gSHtCTiLbOB[*p?];3?3"0t4jX<YfZ\2hEjijJ5*
%74aR0JcI*mG6VhT[SP!u&i2YZhE^7obTK>PMap&m"j&NqXhiIhacot'HDV#1m0jM!,ltNu5!u]&25BFo[Fc$o&4g+Mj'c8=2;kAa
%10%"@&<iYXT4Ug?i6Or_^iGBS*>*i&;;+#b18krI]eXf9YIA[mC^Q&9EeU3lNc\DIXp4Q@8##.F/oFRg^$\uX>]t*1o8`"[2GQL<
%>rWT_hhUChj+`+&2&f(F0?0C]dcbO4Mqj@")@JIM@<OiZW$J%OZgsor/9,dWL".tZ)=8S.QS)t^qN!HXHliN4fHqJ-oLcph-p"3K
%([s86ZJ'P7S$Ik\>N:9<EpHP)H-X>QLtgAts"Y6N?Ugj0[UXWhkGMp+HFa*ki#6&[[/LhR]jMa5(qM'20Z'&@hBXsV<(Kd]DH\fP
%9d8_5O.F9D)Ke@S%[BT?ch)6?jf/HZ=YF^t3-EW;L0N@76rI<]*)m#Se?)"ARr/U+&$hYGgWo?bS1eAX4nURj3!,k-3[$9`lH-h8
%eT@U=\tkd&=#XD')%ojAP`5K;7KkZgA-u%8S=aa!kYQG-d(FUdG%D@N9q+f16r\*Mp;;],:Rgc@ILt1sP$Am%WIW$DMtuMGc.WaU
%Z)iY4)k":bkhEY_RPbl[1q./h$8jY:WZ)\^-YT:\l#k5Q9]kY._B#sj&NQ8fWZDHU&68[Yd<*fK7CCCF4"Sm*QMld15S<[%W,+BR
%1?mRFG>3.gg\Rh_Xg#pi<l?*9]moduh1H9]QY]h6hb;MYaJiT"MjfjIg'(4M%YJLoN[+%sDc_#jacCLOfnY@p7d-;LQ)[7nic<IF
%N*6307Zoc5F&TA!7*=sl%gZ!*O<R-AAnXmP-Z)$jES.-5Epq-B\=2_pGV#8*MK(q^9gfHI2@&+eV>M7hV7O`jja-8\&(Xf1aTW*T
%X)b]JaLJRU>oAj8S)kH+O[31dJ,9>>s2C2i-`D(l$@oGh0bbUF"U1#)_!):R#R6ttK3<6h''n<]BEXRHAK+'j>dil5OJ!06=2ATK
%=cMZsQ@7`Ti.o;^Ua\Hp&cO2g7EN6J1&DIGX6[VW&$54WoV1e3RABpYCT[i]V45lb8-^h4H>`<o!*pm@![hRs!p7Q70oRKhlm3<E
%jfa[i-g1haeKB0J@t;osqRlm>NF92$cglTde]VoPV1#F/>a#Q[W4GE@Hcb.;TKn^kqX,c2%mJu6b1Bscrm%!Th9Q#(*:CWVdi=uN
%Af>f#@ptWq/mq$"%^F6\7H`Tn/3Wd+T/_Pc-B+q):PdsS:$X"QpY@2;!AY0POA9e?XJ;/NO)YD--SCc$5t:QQRC[KlUX6O)\=<-^
%kEe1g^Q;TK34qhMTFu9&..S>QV&BFOBM$r&IB2["FEm>P)P\;qI^WY:-ulC_(2;3grsa9`<+pfX^k$2?DpbWQf7(Zngte_Q7[k%?
%`S8e\:/s[`"I)OCOKt`(g0:ZNL<$N_@sVC>fk?It@]d>.p2PkZ(sP2lBi3mG[Um%DXp%(+O&L(rO$!!P,a.24`Im,?m:"gNDL4H]
%c8?K=]MmDkC'^t-mrLdT"!2=r5\gm[P3ZWa\6AH<+Ss.heP.F4qckbbV14-DC"(b*gE<#G$]*+#%L#g;>Rg>>,pU>%"K9]M^O\`?
%Sj&iiJ-(VbXTn&4ahI*'SO"E$/%H+rqU,K+#1_L\b3B0+MGLJfDD&mZ;%sqFK[rD-J-*k:=f?hDL.TVm1nsmD:4^[BAHR&eDhBM?
%*mdtnO<qiE@#Cq5A-f"XdVD\]ooEoc5W,^t5[Q7hBl("K"U>jL:e7QEVu(XmFs`MQaT_o:a^o*u*LjjQ\3WnaWa1X+Mh?=[.-3<'
%ka^t)imO]348[;iNKLc7_koA>oYbDk2/]Fl]&X==6LhM'%GG#kCRSJo\(N-^Aaa?(pF)]C+l-b$l)p9^RtCPpZL0@V;R"u]3tTKE
%(:Vu#K3=[qFAG-R@tHtl`S6StMsG7W5^BUM]`*mKd=,#3>pc"j#;2?cSOnT,51dc(;e?&72nA-(,oUgG7.'[rT^'[cg/4:F90Gd?
%L^E(J$kq1JURGCqU=tb?B5iEa7`Q^C]P$4dHW2d(9rs,u'nt2D[upW&JiF4g`'a:_l!#K5Pd93jV%5aQ&n"F=IZL)7ATDmlO>)iC
%W@0KAK2%NM*pkP""u;$"cno;`g5N+G2U^L`4akML>9!);R[6b1-ctpk!Y'<TDiO5J%tVsgAODh(M<]i:fA#&Qe=u$7)a`R]Vo3&C
%g%L.sHAcQVd*qn-agj0]]2W(350M->^4c)GW7\4O7qM:_&H<r5$:t"jCB+!(ooM,9.gCC+*02Ripo<E16IJ*h5fP,8gr+kYpLo*R
%7(Au<Ad:A#!'7PH')P\l$nAra2pbYAQ;5p#=`RK'9s;KOY),.!VT\>4mPGH"fi!#,CA-"t5*L4)qsZ/THPO*K;OMsf%bWkt'%rhU
%)*&@>Vo[h4[tnSB6s2[rOu.5>GVpke"EBGp5j"m3WSmLNQY`T+L!K6T&^h#"<0`,%!!hmu*R/=>Zs'CjTTORoQk2^EME6ga"ki?0
%(8pE]e=l/1<!7L;$gEFTG,MCI"6q@s(q,/E._6_!TGsudl)!"&!GR:T[Lan]aWC]"9`./A=F8T'4^d6KA=+biY696b?D7I2]SP_.
%feRk%$r5>aj/S]EDEM^JY=nV;X+ejJ[9_Y(]e1A"AQ,ENJ&D5\`5W>\&A+dDJWu]c,_0iVQQ_gnL875WU,?ZYT?n[u[E!E?e&d>9
%0Wr\tJWAk\!goYWks86ef8?-+)P;SS1eQD[D-X0EJ!Q1n5$&e&+^6II9YRe7Mi=*!X^>]F#2?@p(2N-\=JKjLlbk.!VXAd`X5fI^
%"13QW*FX+%=GV/D+B=PYPs`4Xeg_f$_l1K(PcCadAG%^XDOh:S!'NoJQ?k@J@4.RBPoHc4T,,[<5I+edEMO'XOtq0,AA?Xa)/3O?
%lB2:^dr^Rs]fN>A,ObhU2W8?;L4^tf=OLeQ,Oto?/7mLr;".&T5q^Eh34l"6W97E">WfPk]VG%l@1<I^$=[rAWIK*Xpm/>2$548>
%b_&:T1lHWH$#2ttYEQN$[0$qQ2V:'=8]I,QK%d6CqBb%G9l<BR=Sbq:RkA#tk-NUE]j8'5RgZsn5-C\aaEf-8"m,#+:RVC!'XpKn
%"KP,E0ZJ]PUg_ZE!RmgbZRS/3F$9u5K5&.Vqq@KZE;S=NPA>8YjN>n*$tpQ\6&3)tXm+X.GK6i#.9C[qfk^Q8]5fdket\!r*^@79
%`Uk_FE,E@#cZ]4uHF?>hT(uifK[rj6q]n1`!B&ub&bs6Ag/glI<%2*R1ud?ob!"0PGRF!ToVTMN2[ks(CagXp^c@R'.,#O)6BljS
%f>@X6B0/F;S!:q5?A_&$/PLVh/Ha[e%TId6=rUu(&,%b)con.Va<P>i.u'3p$?>`VWKt8g-oXf%XS4`'V"l?,gM^qQ^3(*LTl(B:
%P(X-Eba]m?2W9fJejf+TTG6;:`pI\OD:$rf:B"4>&A.17P::5WCGKReD3cH=@\-4pP,^LC7rfr-<mc+".&fd5-=mk+IU<1ZXBdaC
%N%]rWi*/oNPHG#\V:n!f(I7rU^XH`^5Sq-7jZ'7(&JFTC\himleSGo?StR?"FcMR#c8Cf0#&#WlUHOI_+dC,Y_A@RLT(g#8R?Kud
%n1?+kbVTL!7rUq<]Duu_9>!;YcsK0pQ9!VBNV;o@.p'tH+mPK?a]0\L&1Z@Y,E)<-3K)\L-`)YlBlt4YA)$f+*EC,US4HDZ$R"Er
%5^d*_jXP?"`#HGKFUX*m_]0BO)f%%C'\,(/"$lI>2:3YZNqOo9l@$5D(^Z[>R?+cM[82Qn_Gdu^C-#Y().W+5n'g6a3h#u#ONp[t
%nW?A)?Xu3d:;E43O!1'fVQiSAY7/j48D^gC5\I#mqlj6<:^M03;/WE8c(XbKKUjg)5:GF2">rq^06Ee,h%2p,'_K69n&g>$TM8[u
%[lOOA5qY>fEQ3rW9IBq\VqT)cP,CXcbO%cfo+/?5p;u0l"I(l<<j"^iME][nQMhK5]=KH4\aRPG_u>cFP1r'ZJ/0Na+IRN5A@P4u
%4.k/Y/Qh3S4AM?]T4hle"iUHe-eBPhXuaM\MlC*G%?M.1UeO.io]r&X[4++:Ypc9!A'7Br5Z#9C=bseCN*NW($C3"1cL_6oN?0`:
%)5u.u^"&DVle6\P9+1/blMu5g\!B&i>/lQK^=(qUaVfnLJd'.g\[(p%VgY*^mGEG?9ci(h0\3WZ?5Q6OS$qDfeEcfj$asI#,$n;6
%T@'-+"6gHO>/NCd95!W"ogV`a69sLk&-dHo>SfU>8gFfHkW8gEOK(Tm`?8<37PS8+OF&X-6fc/dor8C,DU=!?Z$bH&^,MMM6ndg8
%M!?n7ZttVB,JFse'S8"5!eg;[$T7/qkHHDVGoAXc"p$nX"aW>P\,3PZ_H-mEOJI[j_iYQ+"9hb&%3$_e"\Ot'#AE,OQ\#9r.HV'R
%pi`SH_u9_e-`3P&p/$r-pti'*QGhi_+38sD^X=F=JHDj!RF"8H1(f3X5\fGKd_GjY(ukbk4!*6h"GO<E\nY&,4t^CKEE:NhM#n?*
%SdMnN(J<CH9d#JN]"!5Xnrt`IBcAFuM&0`12[6biD@"E$npX=1\rL]<g4B^Ene>9g.a:po1;uul$`AHY;"c1)D!Il(e816\'O3fr
%/16RM$?Ab]$0%bD;r,HW?(C']cPZQD],skcG1K_R([O.2/X2R/CtGHPjdr/3bOsYURrA'J053%p91IBC<IM42:d*,=4FkS[pg)F[
%f(lYP>T.;?8U#",OUb=uW_R=P>WCG\\KJ_B:NO>SaOg4fEa;bap:Et?Bj-OUS/5VieBO6M_TrC,.FWK*TRs/I->s7boV**.r0[';
%,JNr?kCTkHWAb:'D78i/CofDDR7JG,?HI>E9$Z2aJ8_rq:ssA5a1,h8DC>hCD*md*:IbIg$TZ=31"C.3<1:fBiS[FZL8lNa0QiKZ
%2bp9^5rjYaAdA]"[X0F>3AA\ZX@rIDV1j;%G@uD9e?oGr^AG$/j.10[klO#]*9M91DMK^kGdZ&gI&JdFmX+58-Qq[R)D0=%VHS_o
%omA/SQ^Q*X]XASZHEo*FE?!@8EN,8;;S(2nbtn^AKL")TL>?UKooUcW6?p)YD^5`n_MSUC?%Kp'^no6d?[cKnL$L<S85Dd,_:u*B
%8i1e'eZVGC,$p7uFl#h*<27jAM_gUm`qtkF\8Gj?Y`[`19^=`tJRZinji,5UJdAY[Y`W8V$:DmZf#mYo%0<6o9Vfp>%=Agl-%!^E
%Q[0HoIatJ=Hqm\j_QUReZ+.k(&MY7#UuTP(2?\%pi,+C`Kcb,1q48#[rHP=hTXhcAM?`rTFHR2?10Ifb7$B9nK'gL2@W`Y!=NHf.
%4X50\.9@;t@nDCN!2\8D6tKB!7R$@9Sk1\WX2JFdK4q0r<,eTCW@Q-D.@nCLptAjh"(ttOgN>s!5Aj-PBji*]@^Y+%(8[=c?[L?g
%!HB)?.j;%JPD=R^USOB_E*bP'6;5b#N[&=04/9c!boI&"1I=YtKPZoPc6R/;KV94V@]e@Ke;;md6YFN!UnM*_G4&rMOK:8bLcRID
%ekND'P"Y>.JkC&7.755QM\q.]X[$]nHsW*Q7%)<^>-,^d<[_,!5VF]X"+h+YQghgB7X?Oe;Xfr(3K7L!YH\MBe-@B;dpb'$1+-ZU
%[Z,gtGqiV_B]OjhehS^SHZgR;We&9(l+mQY-FuT"/b[m\fJod'($"-U.->m-<&P.O,$;dR\G\!i2c0iT[oIIci[/ZL"FZ*EdA`X=
%p(l+)7%,Aja?@BkPk"kL5&t7:`3ba:&Rg;denV:W-Dk!k7iMD;7/.Te3Fbh@r="B#a%d^!L6rfu2eg_L*$M:LBh<I^"B!H),Y%AM
%V"?`5DEJ"08[mU8mq2D@UiC6+dECJqpK6_;!h+`d`-(C;e(g%HbPO]345p5GEn*Ghc9N+PRt,`KNfYO&W+F0]e;D[Id52gCV,li*
%T9n-d]&m=VB&O#0UFb4_,4gC(ne1R]ZZ(RSGtEBdZ<P<^&&ss4Qs@?L:hkp/9M^MTeb6_q>;%*m23#4QSK9pJi(,=R-kOhiFC/KY
%!<kKm#5h=,Y=S>n5iTBoOH$fTBG+aX&I^"5&tt<Z9PRAcT`KEC2:p>/RRAtQ:8=Bq``T+)OaG[3Wg8cof%?fgh-k/(L4sGGRhd6P
%&)VDL@0Ap%7^1O7Z_pABO:5/Z$'6g@BWo*-gLG>/aAYU[&_YV\6idap)OTU;T^]%hI^)M>luh((dtt\rFKY.6eu)m*%mFT@TPA3_
%&XO8:-C]3LCKA>WDm&qR-p\kVa*$6/0bnK30n\0*=u][8NZ&nTfT5e)D^mYYmB;/UFnbDBXk<UJf=h2W_(iu=68(>$LB!"B(T'u>
%G^2Qo5/8ngPC8_6JEEhj6e"$`f1CNJSu2!'NADXGfRu$t?;;VE=OZ7%/HnUEjmWr)0,d*.KEC*Y+W-kGH*dd/R[$i958Ai4kGQl^
%1-V^Oc2AN;r]l2k7G\CiUXVgHIChki5mo&o9%l%Vq<!X%?B3"p0`XJ(<$"-L7&D#%),h)JNN".c8Ss4SZNHJ8^`Z7oG-Ua6H<F(o
%ZfY0;<mrg%V50q^*9Ba2k]f_=Vma(N!>W_7RJ[*FP)i,B7pDCVNV&Ff4FWIj2&QGfnWV@bL%LQ5Q*-P+7fR\m]PR;UjtuAhh^S_I
%l'ocpoW\VD!6/dbQ@A/3&-atP4WL1LS,n$#>0fI8YTL`fjbl`W\@0:E\:HsgBIYGsX$BB6p/J'WohnDF$([f)PZ"ZDFFhQP9>XL5
%j`*s'.Q>O!C-4s0Y2(q\2h7:%W*(3>j+10:;\4cuf#/-7]WgC!.T)X700<)Jb>a9OGKg;j8''<JHU^a4kYpLA3PW.lb@??.B*5Y=
%h0tBDXA,&W6L$/soT&PL"?FX/4>H&/2C6VB8BT<td[=)lajV'[>#3%K^T*+mD$MpgTGcpkN`<U;gM\KLqI2bYZY?HNCc<fP?;LtG
%])sn.QZ@9F[2>/#"^d)s8)6>bdjA1lf`^Q`q/!h[K8WNFWZBDdHB8P3h^l:Cm>?In_&[i22#G7/WlkV0]6?MBr`R;'a;m`q]Ng;N
%I)Vqp9:KD9`P>#/;5(`KiCtpY9#K^p1?aSBi\m&@Vlq&<Br(\@H5q.mBg1HA7;u19M/EEXQ[IQG%,sfuR.c'E@U`FfA+<MPYB='Y
%8Io_9N?&@^?^9GrK^JD16(qroP5)0\ojc56""d%[?<sIsCaN6)A1*tr:')ub"N;QWdOdL.^k?Se,O)*jfG=*GbUhuOrB>bOM)2*-
%DP#83!"U5u]k@JdMDCrt69YPkgL3FhR@$gcRII.bN[nlhL+#aZ@b*e@Tj&8"p5$r6e_M)uA"LNc(*'rCT?d$ck`?Ob6WV\H=]$%l
%5B;.1fF]WK7kCUj&[UTg!_?!r1Fi:8CU[X,*LO&p"dng;?O.*A3MAggnT<Ms5jrb[7@=p#T<Q1[$jeqd5UW+Z$^i:DlJGF&=V*LY
%'%[L6]jO%!<BAU:pSq@e-n.7uo"JI>T7AXr,3q6F<M<bWW(X=M<,/3Lf1#PE+9WdG'b-B<9o.fmCmD4smUkFOcWeIe%YK'BasT#=
%Ff*5K('?-Es"1f!OG,.W%;C"_f(8iX$GF.u]91.&eI$1hISMZTEVa_2D<)\]o'F^:Y=2eAXe+Ir`]hT+4<pEJ6Me12^-\,u7l;?r
%M;,V"DFjT?@`\'L4\bf1Xf;[!?(]]Q>82p+p[r$\qDiEabeY5^P#8%1^fphT6&=<H0FhX(k-'esD*TUWNu5!1./G2JfWS&KPY2)I
%#VojDlaiL7L+XYBR2Q-2?@$L+SNm$fh^=:_!tRJ<2LT745#>!=%<N9u8</+%ce*RPBJ=5oQ$cl%Y.>-2\gMm56&:+JRubS:>,Eeu
%\g=]OfmQS#hqpe1X,G2.i:PFh$l)i<4j,kI>A'o.OOA-MDXe*[*0CSmpE!5";^e]<a9`b4_4\nD]qXlG$@%NP_++W+Z:P#*aD*%T
%M1&Da6ptQ5$XtlK#dOQUY'C-a3_YBp6t=W2Pn`nSMjIaN#V9NK/nj]QP$<^!b%6ljYPG>A2U?dBTC(rg++J\$r9Nr:I$<Ifei3B*
%ogrN\ZdpAmih&N].t39;?f(nCA#"d83)Rf8RI-+@.$/0j-slB#oOK/PH\;OtXp`C/_,DJqXVO&oBH9Z[/1:htgNOI[nqXk0L%I_r
%(B^4(*OGu1*ai_XTQRn,U7gm^C@dNc\e$at2W/gi9AVeZmPK_eU8NGf,ZmWL.d6^L>go30g2@.m*l@d8[e&<OT?/K9*Xn2ZQukdk
%9E-1u'rKY`oVIS(r2)#UaHK[JiJG,U*foMt$Ybq9MH=2YaI)*XZF%M@)LFtmo@RNgob8k/QpUMI#*nUJ@lf;!=J+&J_)L<65mqu_
%94h#P<)>^S`=E(2iN3$qRR6/i(I^c35n1OE5[S#7m%p4ogEDVjMFMQ^Q4$@"BfqA$L"%lYYA2IKR^+lAOM]U!:j0L&'#`(\]9O"j
%B8+,f;0L!)aDj<J16iOCCI%H6b$;EjrLr=Fl\M`MEoZ+.Pg#&:%:(A[(c0iPiK8m_FbOuhq4'tA7EQ-`-U6D_oZiXJNMCr>iktf9
%=+QuDHl+MR=Qr+YlEIqY]]rp%IB)<5r9MN9RM0jH1EXi>aiu`;,<n>hmMiSa9jT)WWEVMo.6WJF$mqEY&EX5>NgYb8bfiQ$.[l%c
%ilBLR5^K/!a[n=^>;hPm5^RfFFnbVU=n31,*kC;.P_a`3H;TEn&'9q2ik*c!C?Cd%HqsRUknaA7NmAa"qndUrJbBLbP'dZLkAaKi
%h[28obE>.i1>.9!nQI&C32^ScF3a?b/4A_m_3&"u>E`TPpo<Jp)dq:'2,tZihO*B2)l(!`RI2I``&%L>mNVF6k79ieT)<<!5H'+^
%;f)1_Md^?mrkIt(fdPS/1_##BFm8a`G=AC/C`PB;EBG[(G3m;PYM0t>Z^Ga"m6=LUlS0:1fS;J3L,AkAU1P2\<$"2bgjK_nq_oe6
%-(o\S1jD(XBJWmt,WX&<PHIS7WQh<m?Y&]-GoER+J@shq?JtpZ);lc?qERj612h=E<:ch[&19p([`D8ACg1_24&"2pem:ldW1SuJ
%,qP]$oPuS:BP6*c[J4$G,VT#DRumhZX5dq^.9hT]iCtna]]aEpP5,u/:ZdCY(NEWD&94HtD,r<7#i*D#njn5.>@HSjSG(1Jm])c"
%E.bk,pUoQI,IKBl*qY5n[LPFXUjR$/-A01a=dEqb`1^,&kgNE:MJ&SVQit.F,9`R9[B#U6IbPZs>C'\0&=\pt0).KaQ9kH&g@\Sl
%;r_R"JGiI45ooDs.:ail5tq^A[YQeCNst7#P$&gjB@%4OU8`hUaio)#)\;?^Z;^3]n6GC7<U2Q6J5X"3#*4@q%!a2LII[R_.4,f,
%GhU8Y%418^R*[.DN``1+,8tT"<n5;nQ<_E8cRs#n[ngb[o-<m*-WA[sPQa4sb;6=Ad_=ok:H<.*5Se'D%Q<LQQjgSOA"jGKYLgA6
%jb><_>KOIEA5bG[gl:m_':,_ABn15S@q@Ni^.M-e'h6&2Z+t,B<9k(&W"kI0Ps#IWeZ[ZojH1D8mWb"=`lSL2Fk#1+1U<_.!!jB\
%YAik[N/%uYT!,Pn5Q_aD'Ee%#DRY]-UpKF],p<p,o]0p\Q`H]X[b&:*o0b?86@G>t&RTPe@f?StE[/3W*/E11;pKB=*OJG.-Drs-
%s8&2>\9^8bs."+l9c)eof.6^e%`a%E7\EZP_Rr2+E(4RlR#B=;KT8if/3MX[O\X$</DS0j'[+pYhL9q]IS,`"HdA17?"ouJ__XOo
%l1r7d+-/n.-g&ZO)-KbPdck),/oTL94:cGY,YFf+d-Vpc(,+SPM^LHn"WS>1LR2m`Qj(+LMl6MO.m7ampHAg[jZY;(]`ecaP9dWK
%_(kgUCqd\Jr79o22NV>XP^D'#1c]G_K2p>30Z\M'HsH8tn$ja#PKX<*`Om!VNYFb=RbLB11/Q4*C8%4>F?o"I8Wso0l-[kC\qOs+
%7G39rC".gVBQCK=G.tpEbr@p+R@PX^)J;5Qd/oc%cRt0R(EDaRTok")o))X[J7cP8RqC_PPC9jrPL$e]?_fQcloF!"mlg))qDM=Q
%CCA9<hdD2;Q`/KH^R6C8]pRmiW3q[`"+KVdS6Nfc:QIl),i>"uJq8_akSYf:ra\XL%bWpS>a[<CAK/]NhfS-sbl!W[Bo_1]RP8Hi
%/'p:oc(prEF.g$M`Qu)UjpYe7CXM!)e(be[I_7>NLR!s#O<.hPYmg:EW*>'o$C[WeY*nkKac3A.&t1kVrVDd;f>haCCR+tWCO2aN
%$c6"3lDmR/UQd=*Gn1=P<QhWqY,>bTa=p<P+(3F`OR$h^%-SJpbi*kg[ckh>_Ad0)+q\2(+!7bLWr!!cStBW%%hYFo!Ktfs#[B<1
%`,Y.&!Ta=NW??kr1&VlL<O,`A8>m!j-+@54]%(5QTEHZHYj&-W`n:[5[?.PR6-U<NFGsYm_/>;#b<.)V)BHE.4,-1_J^UPCT!R)7
%alE1g#eT+A(=G&qW*(@'HF\H[.*Q.5m,0`!m3nTBG9jp%d=ZcVmsX`enXV%g3X>Z[SZe%/qX=r+[sDW1YhO0Zc14]I/7[5aa66lo
%h9l[:Ur,47)F\kROAFSCK8r$1YT2'>5)KJ;")G\E\SlAQ[\C^tl:7WGjUhU:&&`3K`$JsF5,C7AREm?D\u3f41$f-lfeIs,(D@AJ
%h!'2ka7_bP2eT67k_\JldN#l8mR.aKmX/Q0,=f^:7M&E:5cukFMh;;Ch0-6X(oMrsGa?3C+*m'aLW=TfEjQs#VqZ;*d3k0)B0m:&
%Wan34cicg5&Em#$dVGKq"u/'8NDRT0p6::#!`W?jdIA[@oqB"?g7eI3r9\/gebq(]Bii'cA6L3>%@Peo:d\k1Zm8f?+/:KX:gZ@j
%F9KQK%M@gDLY/6@*9_*'K3mas/Qd,5Je$:WKX=/tR$k*ZBH;l_T[=:5B$n[)(*CZ$(=UN\nN>ucjVYg)=i7ijr5"==1Db!R&lAtk
%$fn'EUJ'KP,M_Sj%iFns4N);/K5u8n/XZ+^'"mDY86LI7C*=6+5&93L"RTJWD:'D3#_+ld5_+1I?^jF*Q9HFuLhdr?Tc3-O;,/(r
%BJHHH#\I1qMtb:((tWf(Unh=L7=<%-,p&\mkCa-l*apO%*I][4q<LNh`"&N@O4[RH/r&$'ofBs(!I5a[C\k]U"MlmJ:X$\hI]u7d
%b8X!X:/4V*)oA>]\pe#<lNo=[)4CkcM@M44dDk83!KVdUG]G+m3_l+fIV?D%L=PXQ!QlR(+(0^uL_<cL3YM(-?dn84YC.HcluV%9
%+BL,MXE):@7u:YKKtWnNKH=T[(FrRQ&GcI8h*UY.d(b:G!%fboUjf3S:g1g2dnd<(1k+5SrBshfYHiVnRpus6G$8$.koE1)%@tk5
%Q"2k#Y[H<2MCrMHgMoo9U);6c8OW4,?ig,3HC=tfc8eLe'2rX3piY2WGsRu@]FNVsDU9XVFAUE<3<R"":pNl`gc2Z+4`u$DQ:48N
%r'9=`h?<E1R1IB5[@LT5nRcKR1!<cF)uHGGd(Lh4-+4?Q!@6AlA=>$G^IWiJYp)s&"p+8+h/0q/L&SZm/(%Ub#lPKWaL=8\E&AEf
%bXq*Z)%ec@W3O2E4=W4^V[8X3BcFEp!5<:Ua+kg.Tur1aM9\AnQ?^f8`hruqgn;n@AGDOd[Z=#]N`"PPK17/U?)ete)Y*5ocf)m;
%f2f7$DAuWW*uW#hH[rPW9blZ8oJ9Z"ftL`F3:#jum&H5^OA<58s",R&$PS9C\JBm%dPYE6]L!S.p,AeQjLnLTSM*5-r6aOP)o^oO
%GOKqOq598p^>pDlDmG@:7$\eJ70D#@4u,C(V2X\pi*Tc2d/ZmR_Z<%_aVm:YHosM:/DnNAjh;j?)@8aH`(`f72-==;CDl<^ZS8^S
%r/f_^OBA+ZLr!#RUukR3]*&d74l2>+8e$f:p'G`L)Pi.b"nJaaEq7.ls*hVSJYVksFdLl?LmE?5d;Y#Ir?M8(@S"j')X*]`'X(1W
%[GZ'@Ep.Y&Jn`Tjpd1&"j.![7k69R+jGDS7Ar7=fQ,"?-M.U<M(R!^AS2]bk]S$t$U)QAS??S4DCpTV&diP^O^@2Vg*>D.70eY.@
%'4=mpY:!&e!VOK'6mG%Td9?[aAhQ5tq,o`con&DO?\X05n#^)Xp.H;12p;=jrG^:CH3n:.k8]#n)d&$?eV4BF;G(kW4BOaUO>6S]
%EJ=>_%Y>2f;rdC!pcru>:e-'4Y"L,+YttNeT$H1%p3FQ=`t]C<06fT=6r,qqlcR-:&iSF!*i6Smo'1n]MroEpm+K?Lh-LYZ:O--=
%*$,EBV,\AK_sO73&pSAFKK";E8u4?%]7=bD]0POQ.nX!G/SG?TpQ0kJL/P>mT`#`(mN'KERP<HC4cc(&EZ&RnI5N;+RZ\--2!3bt
%UA[bM"5"IGqQ+@8gbY^6=mBV'$IP*NDe&"%,g2i7npJG1I(A%1\tbf@#Wb=q1qH&P9.A2A<\GupFHiuT4:fTaIfo8b(]srk&3ilS
%3cjp='VH'#XfP'2KshbZOcQgH\5^ME.TiDt+&]#'E\V>+3MGK!!o>/0Lei5I@Z@F>Ll!=dD4M'SSgDW<B-E8h+/nSe\6EtSC3r.<
%>pbF7/G6G=Y\UO^D0t-dDUu3!)p\pkEu#ZW=4Hpu,'kua$dho_-f0u[kHmO++S1d3_iXLuhXGuIOamEj0d+^\+'1[qHkeQf_7nag
%PR_#1=FnDtT:\@EnmPVpIeMk*;>Gt7a'jBLfkpBk<r>E0q@m/\mG_&\J_8*S3%?#%03%>NZHd*S%(#+d+)`)&5(2D8V/CQ;OMj6:
%U.=YVRKjk#;;\GKfC>M'n9%9I$4hrS)h%Vmf(8k\(;Ht?e:gSKrH5+Pgipq(>lg%(MXhZ#&2p'%1K+C,^Kt5q)W1l2GHdf>gm,O9
%"SHKi%$qckL+gYJlinfcGgM+=47Hc%XTHQU#P,=RE5bMl8<>-Y@aQbRNfTKMleHa/Gs&JiTQBuuYSJ4^G+7XT`GbY,)%BK1h[gl>
%d.bTJ"R'(P5_UBF1[8KHoW<;@3o3BeEHpJlS\aP(oT";t]q@\\+F]OrlR7XO4sZ3^%MBC,*ULXu5&rhFfI`,!kNC"nWfN=4](.C4
%>Wk-#ntPkt8*Touf_iEC\bRu*bq6X?_@He0JFs_=j`OroEtb?F'.U#FPsNHI+)fd?QcjUW)tZKFO:p@_RcWML[\%U*&MK8BHi$&D
%.;_TlaDJpOSgOD'l;nNejcqHtHM`Bu>5%lKg1N7[Y*[rsU\l92j,TI`"BX['nJf]17h!$`:f3tsWu'u1U?YGW9b!^Z!_qdkdShOG
%jU7oPE;G0?^7QQ'fWZ1cHTXH[(@"f4a/_MZ\-1%OXujsEH4io<F>lfA,/GJ"CFge\*X&*Qc?,.TTqI<g_Z#Y`O)cE/#NL\S`hR\b
%6-MJ&>iu?Sm^C-2,G\H1-n4#:'Z9;dH4FYOGj'_>@;&J6B\A5L5%3:7&.EhDee(<_P5HJ8f*$99BbWVOfIt?f;O$FF&dN?"/FlV/
%7>S?Z$)o$A\MX!n._ngk#*/HpOAp#,XO%ot.F0m:K-?.:B<spYUV'@mW8kJ]FRIS?,3FLbp25kU7`RH?Hd8Z)02c(:\,^Y?,5n#4
%f`)?$nl8#[%7QR2CI;&ki3ggD4<gkf^_]V*YP%AjSt4oNnamj>JU'iCgN9rmq+2WQnmGuseI+b,*Iq#2nM<CO+d_2?E?V<#7Y2f;
%iLQ1$.J&</X)L!Lp5>@WfmFBWkP<LTPGu:Z3DU8Eh?:C3G:YTi)#8>7F%M[T&h<8p\/4UE;*;<`_[hJ1a<Aukcm/ps)p.PRJb.;"
%^gmNgfJ92gd/KIo,[YW*]C+;&PiA4Hfu5+^C.;ka3`e`kNk2O[b[JShagRuPlGZYL\%jS!bgH%6SDo--PMn#O/1:b+fN8So\uVB"
%!bm!4iSn\A8=L/_mE6D:OKS/<;K5[#SCro,'K"i0DD<Aq<hJN-Ld7?g@7*F,n;Q^a&LSo)MC+*\0#&hDI:3RnP`aVhd0`2oWh7"i
%I?-RUmNC%9kshGkP(20q/2(<*P2RW$K[d^j73e]e><me9P`Et.qKsOeKO0CUh%?[_Un,sl8"OKs1qi&#`oHa!2)Z>GSW0f`,H+#9
%?V<_!f0*oZVN<8*LYgN]bR]D!Z15dkr;QP[oIBSp'X%]NHneGkr&AQ?EqmVF//:\7C-?D&6gt>mCJXD$LnJA&'[9>_T*?;f?aO;(
%j'<u"F;kA=%$NGGYn7[rN`oW8o[NHFeiuntSX"_bM9.Nna=p9_1$/+],).WsW$-9s3*Ih[-!jL?B0>`Wa*T\WBK`)V#$dFID-ns_
%4-?E:1ct;@'<L.QZM*%BDj3AJk3lm\jHt2`4^8r6[G$)+>NJU$/!*]h(:0rt7#rrUV1Pe>j8`<bM#H%ggc;9Vk7,`a0Wt_fb$dX9
%Sd=#2m_0Jjh$f,l6JU4M_+a+Ml8\NoWCn`\NheO%MBRZ_XGP6gph40$?p[JdQo)qRF/ES\L)FP2)&0sBhn(;->21lO?ms]n7/\kV
%I9sc#GmBolZQ.FO8G8EJ,dVH(1\#^TL=D<i503EWemR'*H'2=qdD"r:aP*o(Ba2J`4)6t$+J</&5rnmAage&WhV]\1d?Uuq$^1+l
%C^pVhdBd!!S/nCmik582`5^7>1.26.,8c#X2/<\<>^SjR.Sb[@Cj3Oj@>IGVgMUM,FiYh$VK4E?#>]P_HB)HfR4UBAeCXFR`VKZl
%#,/3n@dOH+/j(Q^;o*qYBa@R+aD*auK;T"i$B96u1V[%4J>cGR"XeucmJTba+FWP^>DBb:LKT/ip8baNR)g<;s)iNC]lDdloH(gJ
%_&"3F&4MJ>NpS"o$E.VKrBO,o@_6anNAn(oo^A,6cC5\L6K?Qb@eXJ!MtDh$3;f.&O*aVt:=nFPJ0Xp#7BfZH&K5Gh6>!K&5R9"?
%4/1!RJeaH<[B8=FAo&X,%/1[AOPGe3rGcDg)UZ[)"d]F0)f5tN\#c-9CD!^M=mN].d5I,9AZ_::eKDC?g\Sh1N8/)bWlG0UK3f3^
%(:s/4)MgiZY!*QiF$)q^+'hoULN3U\S"sV-kd@f33/g8V$"fgA!gPGGjO`s)%<C-A,X;/;Y\Ya-YbZXB2!?>tU\c\e+YL*+X4KoV
%c.)L\@tKZ,NtRh+V7^rhDE0)4hgor:8Bc21@!#R#$/RKR1N;HZ471D\hRhk<_&]98gBD.)W%)Cuk"R"Z#9o:fkijdOdU"VJ;KL1[
%0*##Y^D+'QK'$65c+i0Z8dK:L^tYM@(FgRF6m-RR-qp>mj>9\/-:.t"/n>AL&Xd/u"&Zdf9r&%E#*!mS0Qn-J#I;Q3_Om:\-AdIe
%^tO8O.AtIbPAh=9M<p`cer)$>)CZQt6YDhlJs.5hS*3arb_V@`oWr6L`OHeYJdE\5Eh!eOX:gH&BL%2!7Yo5HCrgBXeWX*hUEcI?
%(*%EjkJkVk+EVu!l!*X%"I]O,C>b[@f+of3Hd!TK1l+N8**qih;I..oSF$YGImS0`[/tn'E=3s4e_jPG_.+o1Ae(sWdhU9[.2<[s
%0MT;L7V3>cPd3!2cT#7OXNUie.H$F$X/)h9fE2luF'A?Nm\PbL-I;p*I>So,lBVJ__M#*p!>YV<B"F;1P'I1NY'r.OK2Nl?MT>>A
%RiY5n(&I3cnn=kH.49/m[*M(7,g_T@,?=\CnOC2#=h#-WDHMIT-^.QIB)T+TI'hQ9Z!,Y8Pd9W[<:nH%A6Nq$m^Xo2;bTZ!lJFAW
%O310XM1[N(&ZT%"jCD^6mq!k9E?!O`@4(\(^3%S(LbdZ<H-0WJXV9'7Js]^uT-OlJ0G*L$j4ncPMo:!rlTNAsd[;fr:j**8aP2#$
%H_N#3?\D77Rr-"'_Fdct2'\,-iO*E$(Sid<6*W?8_X\aEhah?Uqr0@MS)u0K\2GKm6IjM'K\@U85*Ij[mFq4==HAVg0^Y>AesuGP
%+sqp#;2Wd4O(&s[9<mUVnKdb3]+87(L10k,?C"0_$?K>sW@lDKQ_qMO2e/<>@LN,!!=YE(!>kb(8k&kW4)M81cinbsh=)m_WF1o7
%_bGD:[fq);=/nOEabGZ8:8U[>ZoOME,0.QdmcM60N96XDCJk/(:bZ[P#XiN]eliFgM7,rCM&CE90t,Yr9]oAX9?`$&(edpF&UO\g
%[SbVg/Aeh%g>5tTmNY*-=UT)Zp(Y'$eoc)rP]Js_?V"]/=I/CGjY42t0e*h3Id'rCjMrZ9Li\n\'?)f4**N)]!`1o24Eb-i:Q[<p
%-X2cWp)iR0YR=Hfl-8NWQXGX=[d2M\&3h063[%o/r*FjO'"QEeQPd%%)3ePcgC$$obh#H(2A<]!K/^$<51esW?10Q1;g&nUA)T!+
%-6VPc!127-\dDf76&b5`J2fJo.W>SZO/f$>KGXRpR,N0&7Jsg4"B7DC\N)_1+)P.hj*CqGT0\_2$SXt9GnP&tJJK.i!LurC<6..'
%NVb#JAQnAfVj>2#/P.Lh.,>f[@&m?S)?r#`?Sc-pABnhf,U_7;]_E`t\YNPo^$TH_947h2OA?HbQ3-BHS()!t@a=``FR!`PLuBKL
%bE,j9\#0MM'=B"3Of&ooGe/"e%88h"jX?ao^olkDdA-(];XI$0-`L`;o7a/Y)Z_rSf5L;VI>gonkVNc,$"3cT5d:Y2M;@RB4W!:F
%2B)Qt3M2Y:bOHIOV(+%"&<s3!4Q\140-fhZ%I?YLcXV&V,h(8'.#'&G)/Ka+e2WI_CD"Hd;,B'I<?P7(dO&QW+gm#=cr9j22^q)j
%H]WJu>r4&rB@c=-;XEKaGIB(N[H<]s`MG#8d+^^s3l$;6+;P>/:a4R.I5d9b6s"OhO^`M)U9jpmjs1`b.K'`dMc"PWK%Ut'&1S0R
%:]r-3$YuSh#`;_8ke+3/MS+S"5X5M<oqjCO6(!!&R>MWp0IUVq:XD`MZ)ecHQ+^ls%a-%@a'g_H!n97%`0\HCRkf!uLNehSnU/79
%AYA/X8`Ps_5(O3ClsbMc@(n%?$QZIqJ/4L7N#sCES*6ks^'>"so+:^WZdi3(WanO/SCBL7X/f2f^Ra7&5"S(has3_]-(Q4X@X_Xt
%9n3*'qr-r.gY_VGlui]FqWVs?qYBQ@r8HJNX.0"(a4'//p6M^A]ha-h]X^,[IlQ>V0(8g&s%Nb6Ooe]dYCHK<img9*[R\.~>
%AI9_PrivateDataEnd
